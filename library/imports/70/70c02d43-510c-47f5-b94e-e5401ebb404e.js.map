{"version":3,"sources":["assets\\hall\\scripts\\logic\\core\\net\\chat\\ChatServer.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { NetSocket, NetStatus } from \"../../../../framework/net/socket/NetSocket\";\r\nimport WndVipQuickPayChat from \"../../../hall/ui/recharge/WndVipQuickPayChat\";\r\nimport ItalkCrc from \"../tcp/italkmsg_crc\";\r\nimport ItalkUnit from \"../tcp/italkmsg_unit\";\r\nimport { italk } from \"../tcp/italkmsg_pb\";\r\nimport ItalkMsgBuffer from \"../tcp/italk_msg_buffer\";\r\nimport LoginModel from \"../../../hallcommon/model/LoginModel\";\r\nimport { HallRedSpotType } from \"../../../hallcommon/model/HallModel\";\r\nimport { CustomerEntranceType} from \"../../../hallcommon/model/ServicerModel\";\r\nimport SystemTimeManager from \"./SystemTimeManager\";\r\nimport Int64 from \"../tcp/int64\";\r\nexport default class ChatServer {\r\n    private isUserLogin = false;\r\n    public severCheckTime:Number = 1;\r\n    public connectedCount = 0; //连接次数\r\n    private hearttime: any;\r\n    public userid = \"\";\r\n    public token = \"\";\r\n    public serverType = CustomerEntranceType.HallService;\r\n    public aite_type = 3; //3 旧版本艾特 4 新版本艾特\r\n    public severUserid = \"\"; //客服UserID\r\n    private fid = \"\";     //    群id\r\n    private severName = \"艾特客服\";\r\n    public hurl = \"\"; //httpURl\r\n    private turl = \"\"; //长连接URL\r\n    private socket: NetSocket;\r\n    private datalength: number;\r\n    private _cacheData;\r\n    private dataArray:Array<italk.pb.ItalkChatMsg> = new Array();\r\n    public QuickData;\r\n    public chatCls:WndVipQuickPayChat = null;\r\n    private systemTime:SystemTimeManager = SystemTimeManager.getInstance();\r\n    public connect(url = this.turl) {\r\n        if(this.chatCls == null){ //登陆成功\r\n            this.chatCls = <WndVipQuickPayChat>Global.UI.getWindow(\"WndVipQuickPayChat\");\r\n        }\r\n        if(this.connectedCount == 0 && this.chatCls.isOpen == false){ \r\n            Global.Event.event(GlobalEvent.SHOW_NET_WAITING,\"connect_socket\")\r\n            // Global.UI.fastTip(\"正在连接聊天系统\");\r\n        }\r\n        url = \"wss://\"+url + \"/mini/?userid=\" + this.userid +\"&appid=\" + Global.Setting.appId + \"&token=\" + this.token;\r\n        if(this.socket)  \r\n        {\r\n            if(this.socket.status == NetStatus.connected)\r\n            {\r\n                Global.Event.event(GlobalEvent.HIDE_NET_WAITING,\"connect_socket\")\r\n                this.sendLoginMsg();  //发送登录消息\r\n                return\r\n            }\r\n            else\r\n            {\r\n                this.socket.connect();\r\n            }\r\n        }\r\n        else\r\n        {\r\n            this.socket = new NetSocket(url);\r\n            this.socket.init(this, this.onMessage, this.onOpen, this.onError, this.onClose, true);\r\n            this.socket.connect();\r\n        }     \r\n       \r\n    }\r\n\r\n    public clear()\r\n    {\r\n        if(this.hearttime)\r\n        {\r\n            clearTimeout(this.hearttime)\r\n        }\r\n        if(this.socket)\r\n        {\r\n            this.severName = \"\"\r\n            this.chatCls.severHeadFrame = null\r\n            this.socket.cleanSocket()\r\n            this.socket.close()\r\n            this.socket = null\r\n        }\r\n    }\r\n    //用户登陆\r\n    public userSetting(data,aite_url=\"\"){\r\n        this.connectedCount = 0;\r\n        this.QuickData = data;\r\n        let aiteType = 3\r\n        if(data && data.url && data.open_type == 4){\r\n            aite_url = data.url\r\n        }\r\n        if(aite_url && aite_url.indexOf(\"pid=\") != -1){\r\n            let dateArr =  aite_url.split(\"=\");\r\n            aiteType = 4\r\n            this.serverType =  Number(dateArr[dateArr.length-1]);\r\n        }\r\n        this.clear()\r\n        this.aite_type = aiteType\r\n        let param = {aite_device:Global.Toolkit.genDeviceInfo(),aite_type:this.aite_type};\r\n        Global.HallServer.send(NetAppface.mod,\"LoginAite\",param,(success)=>{\r\n            if(success){\r\n                this.setAiteData(success);\r\n                this.showAiteChat(aite_url);\r\n            }\r\n            },(error)=>{\r\n            Global.UI.fastTip(\"获取客服信息失败\");\r\n        })\r\n    }\r\n\r\n    //游客登陆\r\n    public otherSetting(data,aite_url=Global.Setting.aite_url){\r\n        this.connectedCount = 0;\r\n        let loginModel = <LoginModel>Global.ModelManager.getModel(\"LoginModel\");\r\n        let param = loginModel.getLoginParam(\"\", null, 1);\r\n        let aiteType = 3\r\n        if(aite_url && aite_url.indexOf(\"pid=\") != -1){\r\n            let dateArr =  aite_url.split(\"=\");\r\n            aiteType = 4\r\n            this.serverType =  Number(dateArr[dateArr.length-1]);\r\n        }\r\n        this.clear()\r\n        param.aite_device = Global.Toolkit.genDeviceInfo();\r\n        param.aite_type = aiteType;\r\n        Global.HallServer.sendAiteLogin(\"LoginAite\",param,(success)=>{\r\n            if(success){\r\n                this.setAiteData(success);\r\n                this.showAiteChat(aite_url);\r\n            }\r\n            },(error)=>{\r\n            Global.UI.fastTip(\"获取客服信息失败\");\r\n        })\r\n    }\r\n    private setAiteData(data){\r\n        this.userid = data.userid;\r\n        this.token = data.token;\r\n        this.hurl = data.hurl;\r\n        this.turl = data.turl;\r\n    }\r\n    private showAiteChat(aite_url=null){\r\n        // if(this.serverType == ServiceEntranceType.QuickPayService || aite_url == null ||aite_url ==\"\"){\r\n            this.connect(this.turl);\r\n            this.isUserLogin = true;\r\n        // }else{\r\n        //     let dateArr =  aite_url.split(\"?\");\r\n        //     let appKey = \"?appid=\"\r\n        //     if(dateArr.length > 1)\r\n        //     {\r\n        //         appKey = \"&appid=\"\r\n        //     }\r\n        //     let aiteUrl = aite_url +appKey+ Global.Setting.appId +\"&token=\"+this.token +\"&localid=\" + this.serverType+ \"&aiteuserid=\" + this.userid + \"&hurl=\" + this.hurl+ \"&turl=\" + this.turl;\r\n        //     // Logger.error(\"使用web版本艾特客服 = \"+aiteUrl);\r\n        //     cc.sys.openURL(Global.Toolkit.DealWithUrl(aiteUrl));\r\n        // }\r\n    }\r\n    private onError() { \r\n        Global.Event.event(GlobalEvent.HIDE_NET_WAITING,\"connect_socket\")\r\n        Logger.error(\"ChatServer socket onError\")\r\n    }\r\n\r\n    private onMessage(msg) {\r\n        this._cacheData = new Uint8Array(msg);\r\n        this.datalength = this._cacheData.byteLength\r\n        this._cacheData = this._cacheData;\r\n        this.recveMsg();\r\n    }\r\n\r\n    private onClose() {\r\n        Logger.error(\"ChatServer socket onClose\")\r\n        Global.Event.event(GlobalEvent.HIDE_NET_WAITING,\"connect_socket\") \r\n        // if(this.chatCls.isOpen){  //确保断线时只提示一次\r\n        //     Global.UI.fastTip(\"正在连接聊天系统\");\r\n        // }\r\n    }\r\n\r\n    private onOpen() {\r\n        Global.Event.event(GlobalEvent.HIDE_NET_WAITING,\"connect_socket\")\r\n        this.sendLoginMsg();  //发送登录消息\r\n        // Logger.error(\"数据发送中...\");\r\n    }\r\n\r\n    public sendLoginMsg() {\r\n        var loginMsg = new italk.pb.ItalkLoginMsg();\r\n        loginMsg.userid = this.userid;                                      // 设置登录用户id\r\n        loginMsg.localid = this.serverType;                                 // 每次发送的唯一id\r\n        loginMsg.msgType = italk.pb.ItalkTypeEnum.ITKServerCommon;          // 消息类型：登录\r\n        let buffer: Uint8Array = italk.pb.ItalkLoginMsg.encode(loginMsg).finish();\r\n        let msgBuffer: Uint8Array = ItalkMsgBuffer.buildBufer(buffer, loginMsg.msgType);\r\n        this.sendMsg(msgBuffer);\r\n    }\r\n\r\n    public sendHeartMsg() {\r\n        console.log(\"心跳包发送中\");\r\n        this.systemTime.getLocalTime();//\r\n        var heartMsg = new italk.pb.ItalkHeartMsg();\r\n        heartMsg.userid = this.userid;\r\n        heartMsg.token = this.token;\r\n        heartMsg.msgType = italk.pb.ItalkTypeEnum.ITKHEART;\r\n        let buffer: Uint8Array = italk.pb.ItalkHeartMsg.encode(heartMsg).finish();\r\n        let msgBuffer: Uint8Array = ItalkMsgBuffer.buildBufer(buffer, heartMsg.msgType);\r\n        this.sendMsg(msgBuffer);\r\n    }\r\n\r\n    public sendMsg(msgBuffer) {\r\n        if(this.socketStatus()){\r\n            this.socket.send(msgBuffer);  //发送\r\n        }else{\r\n            this.connect();\r\n        }\r\n    }\r\n    public socketStatus() {\r\n        if(this.socket && this.socket.status != NetStatus.close){ //已连接\r\n            return true\r\n        }else{\r\n            return false\r\n        }\r\n    }\r\n    //消息翻页  第一次登录成功必须拉 最近的消息\r\n    public sendOfflineMsg() {\r\n        let chatMsg = new italk.pb.ItalkChatMsg();\r\n        chatMsg.userid = this.userid;                                                 //发送者，必须自己\r\n        chatMsg.fid = this.fid;                                                       ////群id\r\n        chatMsg.timestamp = this.systemTime.getServerTime()\r\n        chatMsg.msgType = italk.pb.ItalkTypeEnum.ITKServerChat;\r\n        chatMsg.chattype =  italk.pb.ItalkChatTypeEnum.ITKGroupChat;\r\n        chatMsg.bussinesstype = italk.pb.ItalkBusinessTypeEnum.ITKBussniesstype20;    //业务类型：获取离线消息\r\n        chatMsg.localid = 0;                                           //每次发送的唯一id\r\n        let buffer: Uint8Array = italk.pb.ItalkChatMsg.encode(chatMsg).finish();\r\n        let msgBuffer: Uint8Array = ItalkMsgBuffer.buildBufer(buffer, chatMsg.msgType);\r\n        this.sendMsg(msgBuffer);\r\n    }\r\n    //发送文本消息\r\n    public sendChatTextMsg(content,msginfo1=\"\") {\r\n        let chatMsg = new italk.pb.ItalkChatMsg();\r\n        chatMsg.userid = this.userid;                                                 //发送者，必须自己\r\n        chatMsg.fid = this.fid;                                                       ////群id\r\n        chatMsg.uuid = this.uuid();                                                   //消息ID\r\n        chatMsg.localid = this.systemTime.randomBit()\r\n        chatMsg.timestamp = this.systemTime.getServerTime()\r\n        chatMsg.bussinesstype = italk.pb.ItalkBusinessTypeEnum.ITKSMS;                //业务类型：短信消息\r\n        chatMsg.chattype =  italk.pb.ItalkChatTypeEnum.ITKGroupChat;\r\n        let msgcontent = new italk.pb.ItalkMsgContent();                          //消息内容\r\n        msgcontent.text = content;\r\n        chatMsg.content = msgcontent;\r\n        if(msginfo1.length > 0){\r\n            chatMsg.msgint1 = 1;\r\n            chatMsg.msginfo1 = msginfo1;\r\n        }\r\n        chatMsg.msgType = italk.pb.ItalkTypeEnum.ITKServerChat;                   //消息类型                               \r\n        let buffer: Uint8Array = italk.pb.ItalkChatMsg.encode(chatMsg).finish();\r\n        let msgBuffer: Uint8Array = ItalkMsgBuffer.buildBufer(buffer, chatMsg.msgType);\r\n        // console.log(\"sendChatTextMsg\", chatMsg.toObject());\r\n        this.sendMsg(msgBuffer);\r\n    }\r\n    public sendChatImageMsg(content) {\r\n        let chatMsg = new italk.pb.ItalkChatMsg();\r\n        chatMsg.userid = this.userid;                                                 //发送者，必须自己\r\n        chatMsg.fid = this.fid;                                                       ////群id\r\n        chatMsg.uuid = this.uuid();                                                   //消息ID\r\n        chatMsg.localid = this.systemTime.randomBit()\r\n        chatMsg.timestamp = this.systemTime.getServerTime()\r\n        chatMsg.bussinesstype = italk.pb.ItalkBusinessTypeEnum.ITKPic;                //业务类型：短信消息\r\n        chatMsg.chattype =  italk.pb.ItalkChatTypeEnum.ITKGroupChat;\r\n        chatMsg.content = content;\r\n        chatMsg.msgType = italk.pb.ItalkTypeEnum.ITKServerChat;                   //消息类型                               \r\n        let buffer: Uint8Array = italk.pb.ItalkChatMsg.encode(chatMsg).finish();\r\n        let msgBuffer: Uint8Array = ItalkMsgBuffer.buildBufer(buffer, chatMsg.msgType);\r\n        // console.log(\"sendChatTextMsg\", chatMsg.toObject());\r\n        this.sendMsg(msgBuffer);\r\n    }\r\n    public sendChatMoveMsg(content) {\r\n        let chatMsg = new italk.pb.ItalkChatMsg();\r\n        chatMsg.userid = this.userid;                                                 //发送者，必须自己\r\n        chatMsg.fid = this.fid;                                                       ////群id\r\n        chatMsg.uuid = this.uuid();                                                   //消息ID\r\n        chatMsg.localid = this.systemTime.randomBit()\r\n        chatMsg.timestamp = this.systemTime.getServerTime()\r\n        chatMsg.bussinesstype = italk.pb.ItalkBusinessTypeEnum.ITKShortVideo;                //业务类型：短信消息\r\n        chatMsg.chattype =  italk.pb.ItalkChatTypeEnum.ITKGroupChat;\r\n        chatMsg.content = content;\r\n        chatMsg.msgType = italk.pb.ItalkTypeEnum.ITKServerChat;                   //消息类型                               \r\n        let buffer: Uint8Array = italk.pb.ItalkChatMsg.encode(chatMsg).finish();\r\n        let msgBuffer: Uint8Array = ItalkMsgBuffer.buildBufer(buffer, chatMsg.msgType);\r\n        // console.log(\"sendChatTextMsg\", chatMsg.toObject());\r\n        this.sendMsg(msgBuffer);\r\n    }\r\n    // 上报已读\r\n    public sendClearMsg() {\r\n        let chatMsg = new italk.pb.ItalkChatMsg();\r\n        chatMsg.userid = this.userid;                                                       //发送者，必须自己\r\n        chatMsg.fid = this.fid;                                                         //群id\r\n        chatMsg.timestamp = this.systemTime.getServerTime()\r\n        chatMsg.localid = this.systemTime.randomBit()\r\n        chatMsg.bussinesstype = italk.pb.ItalkBusinessTypeEnum.ITKChatStatusChange;         //业务类型:清离线消息\r\n        chatMsg.msgType = italk.pb.ItalkTypeEnum.ITKServerChat;\r\n        chatMsg.chattype =  italk.pb.ItalkChatTypeEnum.ITKGroupChat;\r\n        let buffer: Uint8Array = italk.pb.ItalkChatMsg.encode(chatMsg).finish();\r\n        let msgBuffer: Uint8Array = ItalkMsgBuffer.buildBufer(buffer, chatMsg.msgType);\r\n        // console.log(\"sendClearMsg ,清除未读消息\");\r\n        this.sendMsg(msgBuffer);\r\n    }\r\n    // 获取当前已读消息时间\r\n    public sendChangeMsg() {\r\n        let chatMsg = new italk.pb.ItalkChatMsg();\r\n        chatMsg.userid      = this.userid;                                                       //发送者，必须自己\r\n        chatMsg.fid         = this.fid;                                                         //群id\r\n        chatMsg.timestamp   = this.systemTime.getServerTime()\r\n        chatMsg.localid     = this.systemTime.randomBit()\r\n        chatMsg.bussinesstype = italk.pb.ItalkBusinessTypeEnum.ITKBussniesstype27;         //业务类型:清离线消息\r\n        chatMsg.msgType     = italk.pb.ItalkTypeEnum.ITKServerChat;\r\n        chatMsg.chattype    =  italk.pb.ItalkChatTypeEnum.ITKGroupChat;\r\n        let buffer: Uint8Array = italk.pb.ItalkChatMsg.encode(chatMsg).finish();\r\n        let msgBuffer: Uint8Array = ItalkMsgBuffer.buildBufer(buffer, chatMsg.msgType);\r\n        // console.log(\"sendChangeMsg ,获取当前消息状态\");\r\n        this.sendMsg(msgBuffer);\r\n    }\r\n    private recveMsgChat(data) {\r\n        let chat = italk.pb.ItalkChatMsg.decode(data);\r\n        //具体参考ItalkChatMsg的结构  服务端处理完成后发送消息，所以当前msgid为消息的id\r\n        if (chat.content) {\r\n            if(!this.dataArray){\r\n                this.dataArray = new Array();\r\n            }\r\n            if(chat.bussinesstype == italk.pb.ItalkBusinessTypeEnum.ITKBussniesstype27){\r\n                if(chat.msglastindex > this.severCheckTime){\r\n                    this.severCheckTime = Number(chat.msglastindex);\r\n                    this.chatCls.updateUI(this.severName,false); //更新未读消息状态\r\n                }\r\n            }else{\r\n                // ITKRevokeMsg 撤回的消息\r\n                if(chat.bussinesstype != italk.pb.ItalkBusinessTypeEnum.ITKChatStatusChange){ //不是清除离线消息\r\n                    let msgId = Number(chat.msgid.toString());\r\n                    chat.msgid = msgId;\r\n                    let timestamp = Number(chat.timestamp.toString());\r\n                    chat.timestamp = timestamp;\r\n                    let msgorder = Number(chat.msgorder.toString());\r\n                    chat.msgorder = msgorder;\r\n                    this.dataArray.push(chat);\r\n                }else{\r\n                    if(chat.userid !=this.userid && (Number(chat.content.text)/1000/1000 > this.severCheckTime)){\r\n                        this.sendChangeMsg()\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    private recveMsgChatecho(data) {\r\n        let chatecho = italk.pb.ItalkChatEchoMsg.decode(data);\r\n        // console.log(\"ItalkChatEchoMsg\"  ,chatecho);\r\n        //具体参考ItalkChatEchoMsg的结构  服务端接收立马返回消息，所以当前msgid为0，以userid+localid为id\r\n        // console.log(\"recveMsgChatecho\", chatecho.toJSON);  \r\n    }\r\n    private recveMsgLoginEcho(data) {\r\n        this.sendHeartTime();   //定时发送心跳包\r\n        this.severUserid = \"\";\r\n        let loginecho = italk.pb.ItalkLoginEchoMsg.decode(data);\r\n        this.severUserid = loginecho.echoInfo.Info;\r\n        this.fid = loginecho.token;\r\n        if(this.QuickData)\r\n        {\r\n            this.severName = this.QuickData.name;\r\n        }else{\r\n            if(this.severUserid.length > 0){ //客服userID 大于0 才获取头像\r\n                this.getSeverInfo();\r\n            }\r\n        }\r\n        Global.Event.event(GlobalEvent.HIDE_NET_WAITING);\r\n        if(this.connectedCount == 0){\r\n            Global.UI.showPortraitScreenNotice(()=>{\r\n                //切换成竖屏\r\n                Global.NativeEvent.changeOrientationH(false);\r\n                Global.UI.adjuestCanvasScreenStretch(cc.Canvas.instance); \r\n                Global.UI.show(\"WndVipQuickPayChat\",this.severName);\r\n            });\r\n        }else{\r\n            if(this.chatCls.isOpen == true){\r\n                Global.UI.fastTip(\"聊天系统已重新连接\");\r\n            }\r\n            Logger.error(\"ChatServer socket connectedCount= \",this.connectedCount)\r\n        }\r\n        this.connectedCount ++\r\n    }\r\n    private recveMsgHeartEcho(data) {\r\n        //接收到心跳默认连接成功\r\n        let hearecho = italk.pb.ItalkHeartEchoMsg.decode(data);\r\n        this.systemTime.setServerTime(hearecho.heartCount);//\r\n        \r\n    }\r\n    public sendHeartTime() {\r\n        clearTimeout(this.hearttime);\r\n        let self = this;\r\n        this.hearttime = setTimeout(function () {\r\n            self.sendHeartMsg();  //发送心跳包\r\n            self.sendHeartTime(); //定时发送心跳包\r\n        }, 1000 * 20);\r\n    }\r\n    private recveMsg() {\r\n\r\n        let datalength: number = this.datalength;\r\n        let data: Uint8Array = this._cacheData;\r\n        let curindex: number = 0;\r\n        let totel: number = datalength;//data.byteLength;\r\n        do {\r\n            let headbuf: Uint8Array = new Uint8Array(8);\r\n            for (let i = 0; i < 8; i++) {\r\n                headbuf[i] = data[i + curindex];\r\n            }\r\n            let length: number = (headbuf[4] & 0xff) | ((headbuf[5] & 0xff) << 8)\r\n            let bodylength: number = headbuf[2] * 10240 + length + 24;\r\n            let crcbuf: Uint8Array = new Uint8Array(2);\r\n            let crcnum: number = ItalkCrc.crc16(headbuf);\r\n            crcbuf[0] = 0xff & crcnum;\r\n            crcbuf[1] = 0xff & crcnum >> 8;\r\n\r\n            if (headbuf[0] == 2 && crcbuf[0] == headbuf[6] && crcbuf[1] == headbuf[7] && totel >= bodylength) {\r\n                let msgdata: Uint8Array = new Uint8Array(data.subarray(curindex + 24, curindex + bodylength));\r\n                totel -= bodylength;\r\n                curindex += bodylength;\r\n                switch (headbuf[1]) {\r\n                    case italk.pb.ItalkTypeEnum.ITKLoginECHO:\r\n                        this.recveMsgLoginEcho(msgdata);\r\n                        break;\r\n                    case italk.pb.ItalkTypeEnum.ITKChatECHO:    //每发送一个消息包都会接收一个回复\r\n                        this.recveMsgChatecho(msgdata);\r\n                        break;\r\n                    case italk.pb.ItalkTypeEnum.ITKHeartECHO:   // this.sendChatTextMsg(\"心跳包\");\r\n                        this.recveMsgHeartEcho(msgdata);\r\n                        break;\r\n                    case italk.pb.ItalkTypeEnum.ITKChat:        // console.log(\"ITKServerChat\", \"收到消息\");\r\n                        this.recveMsgChat(msgdata);\r\n                        break;\r\n                    case italk.pb.ItalkTypeEnum.ITKServerChat:  //消息包 自己发送的\r\n                        this.recveMsgChat(msgdata);\r\n                    break;\r\n                    default:\r\n                        // console.log(\"default\", headbuf[1]);\r\n                        Global.Event.event(GlobalEvent.FORCE_HIDE_WAITING); \r\n                        break;\r\n                }\r\n            } else {\r\n                datalength = 0;\r\n                for (let i = 0; i < totel; i++) {\r\n                    this._cacheData[datalength] = data[i + curindex];\r\n                    datalength++;\r\n                }\r\n                this.datalength = datalength;\r\n                break;\r\n            }\r\n        } while (true);\r\n        if(this.dataArray){\r\n            this.dataArray.reverse();\r\n            for (let i = 0; i < this.dataArray.length; i++) {\r\n                var chat = new italk.pb.ItalkChatMsg();\r\n                chat = this.dataArray[i];\r\n                if (chat.content) {\r\n                    if(this.sendKefuRedSpot(chat)){ //客服消息是当前连接的客服消息才加入展示\r\n                        if(chat.bussinesstype == italk.pb.ItalkBusinessTypeEnum.ITKRevokeMsg && !chat.content.desc)\r\n                        {\r\n                            this.removeChat(Number(chat.content.text));\r\n                        }else{\r\n                            this.chatCls.data.push(chat);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if(this.dataArray.length > 0){\r\n                this.dataArray = null;\r\n                this.chatCls.updateUI(this.severName);\r\n            }\r\n        }\r\n    }\r\n    // 撤回已加入对话的消息\r\n    private removeChat(msgid){\r\n        // 根据单个名字筛选\r\n        this.chatCls.data = this.chatCls.data.filter(item => item.msgid != msgid);\r\n    }\r\n    sendKefuRedSpot(chat){\r\n        let idArray =  chat.fid.split(\"_\");\r\n        let kefuID = idArray[0];\r\n        if(kefuID == \"g\" + CustomerEntranceType.LoginService){ //登陆客服\r\n            Global.Event.event(GlobalEvent.ShowRedSpot, [false, HallRedSpotType.LoginKefu]);\r\n        }else if(kefuID == \"g\" + CustomerEntranceType.HallService){ //大厅联系客服\r\n            Global.Event.event(GlobalEvent.ShowRedSpot, [false, HallRedSpotType.Kefu]);\r\n        }\r\n        if(\"g\"+ this.serverType == kefuID){\r\n            return true;\r\n        }else{\r\n            return false;\r\n        }\r\n\r\n    }\r\n    //获取UUID\r\n    uuid() {\r\n        var s = [];\r\n        var hexDigits = \"0123456789abcdef\";\r\n        for (var i = 0; i < 36; i++) {\r\n            s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1);\r\n        }\r\n        s[14] = \"4\";  // bits 12-15 of the time_hi_and_version field to 0010\r\n        s[19] = hexDigits.substr((s[19] & 0x3) | 0x8, 1);  // bits 6-7 of the clock_seq_hi_and_reserved to 01\r\n        s[8] = s[13] = s[18] = s[23] = \"-\";\r\n        var uuid = s.join(\"\");\r\n        return uuid;\r\n    }\r\n    \r\n    //获取客服信息\r\n    private getSeverInfo(){\r\n\r\n        let param = {\r\n            userid:this.severUserid,\r\n        }\r\n        let suffix = \"/mini/user?userid=\"+this.userid+\"&token=\"+this.token;\r\n        this.sendImageWithParam(suffix,\"GetGameUserInfo\",param,(res)=>{\r\n            if(res.head != null){\r\n                this.severName = res.name;\r\n                if(res.head.length > 0){\r\n                    this.chatCls.loadSeverHeader(this.getImageHttp(res.head),(frame)=>{\r\n                        this.chatCls.severHeadFrame = frame;\r\n                        this.chatCls.updateUI(res.name)\r\n                    });\r\n                }else{\r\n                    this.chatCls.updateUI(res.name)\r\n                }\r\n            }else{\r\n                Global.UI.fastTip(res._errstr);\r\n            }\r\n        },(error)=>{\r\n            Global.UI.fastTip(error._errstr);\r\n        })\r\n    }\r\n    public sendImageWithParam(suffix,func,param,onComplete?: Function, errorHandler?: Function){\r\n        let paramJSON ={\r\n            _mod:\"login\",\r\n            _func:func,\r\n            _param:param, \r\n        }\r\n\r\n        var xhr = new XMLHttpRequest();//第一步：创建需要的对象\r\n        xhr.open('POST', \"https://\"+Global.ChatServer.hurl+suffix, true); //第二步：打开连接/***发送json格式文件必须设置请求头 ；如下 - */\r\n        xhr.setRequestHeader(\"Content-type\",\"application/json\");//设置请求头 注：post方式必须设置请求头（在建立连接后设置请求头）var obj = { name: 'zhansgan', age: 18 };\r\n        xhr.send(JSON.stringify(paramJSON));//发送请求 将json写入send中\r\n        xhr.onreadystatechange = function () {//请求后的回调接口，可将请求成功后要执行的程序写在其中\r\n            if (xhr.readyState === 4 && xhr.status == 200 && xhr.responseText) {//验证请求是否发送成功\r\n                let data = JSON.parse(xhr.responseText);\r\n                if(data._param != null){\r\n                    onComplete(data._param);\r\n                }else{\r\n                    if(errorHandler){\r\n                        let data = JSON.parse(xhr.responseText);\r\n                        errorHandler(data);\r\n                    }\r\n                }\r\n            }else{\r\n                if(errorHandler && xhr.responseText){\r\n                    let data = JSON.parse(xhr.responseText);\r\n                    errorHandler(data);\r\n                }\r\n            }\r\n        };\r\n    }\r\n    public getImageHttp(url:String){\r\n        let dateArr =  url.split(\"/\");\r\n        let fileName =  dateArr[dateArr.length-1];\r\n        let imageURl = \"https://\"+this.hurl + \"/login/ossfile?func=GetOssFile&name=\"+fileName+\"&token=\"+this.token;\r\n        return imageURl;\r\n    }\r\n    public ossAuthority(){\r\n        // {\r\n        //     \"_mod\":\"login\",\r\n        //     \"_func\":\"GetSts\",\r\n        //     \"_param\":{\r\n        //         \"userid\":\"aite00000007\"\r\n        //     }\r\n        // }\r\n        let param = {\r\n            userid:this.severUserid,\r\n        }\r\n        Global.ChatServer.sendImageWithParam(\"login/ossAuthority\",\"GetSts\",param,(res)=>{\r\n            Logger.error(\"鉴权信息\");\r\n            Logger.error(res);\r\n        },(error)=>{\r\n            Global.UI.fastTip(error._errstr);\r\n        })\r\n        // login/ossAuthority\r\n    }\r\n    \r\n}"]}