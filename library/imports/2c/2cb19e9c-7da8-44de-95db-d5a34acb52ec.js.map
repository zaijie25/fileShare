{"version":3,"sources":["assets\\hall\\scripts\\framework\\libs\\cryptoTs\\algo\\MD5.ts"],"names":[],"mappings":"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AAE,UAAU,EAAG,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9C,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU,EAAG,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9C,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU,EAAG,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9C,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU,EAAG,CAAC,EAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9C,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU,EAAG,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9C,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU,EAAG,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9C,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU,EAAG,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9C,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU,EAAG,CAAC,EAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9C,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU,EAAG,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9C,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/C,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/C,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAE,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/C,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/C,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/C,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAE/C,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU,EAAG,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/C,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU,EAAG,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/C,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/C,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU,EAAG,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/C,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU,EAAG,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/C,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAE,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/C,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/C,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU,EAAG,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/C,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU,EAAG,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/C,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAE,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/C,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU,EAAG,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/C,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU,EAAG,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/C,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAE,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/C,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU,EAAG,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/C,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU,EAAG,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/C,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAE/C,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU,EAAG,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/C,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU,EAAG,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/C,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/C,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/C,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU,EAAG,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/C,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU,EAAG,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/C,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU,EAAG,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/C,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/C,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAE,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/C,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU,EAAG,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/C,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU,EAAG,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/C,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU,EAAG,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/C,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU,EAAG,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/C,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/C,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/C,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU,EAAG,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAE/C,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU,EAAG,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/C,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU,EAAG,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/C,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/C,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU,EAAG,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/C,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAE,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/C,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU,EAAG,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/C,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/C,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU,EAAG,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/C,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU,EAAG,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/C,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/C,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU,EAAG,EAAE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","file":"","sourceRoot":"/","sourcesContent":["import { Hasher } from '../lib/Hasher';\r\nimport { WordArray } from '../lib/WordArray';\r\n\r\n// Constants table\r\nconst T: Array<number> = [];\r\n\r\n// Compute constants\r\nfor(let i = 0; i < 64; i++) {\r\n    T[i] = (Math.abs(Math.sin(i + 1)) * 0x100000000) | 0;\r\n}\r\n\r\nexport class MD5 extends Hasher {\r\n    public _hash!: WordArray;\r\n\r\n    public static FF(a: number, b: number, c: number, d: number, x: number, s: number, t: number): number {\r\n        const n = a + ((b & c) | (~b & d)) + x + t;\r\n        return ((n << s) | (n >>> (32 - s))) + b;\r\n    }\r\n\r\n    public static GG(a: number, b: number, c: number, d: number, x: number, s: number, t: number): number {\r\n        const n = a + ((b & d) | (c & ~d)) + x + t;\r\n        return ((n << s) | (n >>> (32 - s))) + b;\r\n    }\r\n\r\n    public static HH(a: number, b: number, c: number, d: number, x: number, s: number, t: number): number {\r\n        const n = a + (b ^ c ^ d) + x + t;\r\n        return ((n << s) | (n >>> (32 - s))) + b;\r\n    }\r\n\r\n    public static II(a: number, b: number, c: number, d: number, x: number, s: number, t: number): number {\r\n        const n = a + (c ^ (b | ~d)) + x + t;\r\n        return ((n << s) | (n >>> (32 - s))) + b;\r\n    }\r\n\r\n    public reset() {\r\n        // reset core values\r\n        super.reset();\r\n\r\n        this._hash = new WordArray([\r\n            0x67452301, 0xefcdab89,\r\n            0x98badcfe, 0x10325476\r\n        ]);\r\n    }\r\n\r\n    public _doProcessBlock(M: Array<number>, offset: number) {\r\n        // Swap endian\r\n        for(let i = 0; i < 16; i++) {\r\n            // Shortcuts\r\n            const offset_i = offset + i;\r\n            const M_offset_i = M[offset_i];\r\n\r\n            M[offset_i] = (\r\n                (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |\r\n                (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)\r\n            );\r\n        }\r\n\r\n        // Shortcuts\r\n        const H = this._hash.words;\r\n\r\n        const M_offset_0  = M[offset + 0];\r\n        const M_offset_1  = M[offset + 1];\r\n        const M_offset_2  = M[offset + 2];\r\n        const M_offset_3  = M[offset + 3];\r\n        const M_offset_4  = M[offset + 4];\r\n        const M_offset_5  = M[offset + 5];\r\n        const M_offset_6  = M[offset + 6];\r\n        const M_offset_7  = M[offset + 7];\r\n        const M_offset_8  = M[offset + 8];\r\n        const M_offset_9  = M[offset + 9];\r\n        const M_offset_10 = M[offset + 10];\r\n        const M_offset_11 = M[offset + 11];\r\n        const M_offset_12 = M[offset + 12];\r\n        const M_offset_13 = M[offset + 13];\r\n        const M_offset_14 = M[offset + 14];\r\n        const M_offset_15 = M[offset + 15];\r\n\r\n        // Working variables\r\n        let a = H[0];\r\n        let b = H[1];\r\n        let c = H[2];\r\n        let d = H[3];\r\n\r\n        // Computation\r\n        a = MD5.FF(a, b, c, d, M_offset_0,  7,  T[0]);\r\n        d = MD5.FF(d, a, b, c, M_offset_1,  12, T[1]);\r\n        c = MD5.FF(c, d, a, b, M_offset_2,  17, T[2]);\r\n        b = MD5.FF(b, c, d, a, M_offset_3,  22, T[3]);\r\n        a = MD5.FF(a, b, c, d, M_offset_4,  7,  T[4]);\r\n        d = MD5.FF(d, a, b, c, M_offset_5,  12, T[5]);\r\n        c = MD5.FF(c, d, a, b, M_offset_6,  17, T[6]);\r\n        b = MD5.FF(b, c, d, a, M_offset_7,  22, T[7]);\r\n        a = MD5.FF(a, b, c, d, M_offset_8,  7,  T[8]);\r\n        d = MD5.FF(d, a, b, c, M_offset_9,  12, T[9]);\r\n        c = MD5.FF(c, d, a, b, M_offset_10, 17, T[10]);\r\n        b = MD5.FF(b, c, d, a, M_offset_11, 22, T[11]);\r\n        a = MD5.FF(a, b, c, d, M_offset_12, 7,  T[12]);\r\n        d = MD5.FF(d, a, b, c, M_offset_13, 12, T[13]);\r\n        c = MD5.FF(c, d, a, b, M_offset_14, 17, T[14]);\r\n        b = MD5.FF(b, c, d, a, M_offset_15, 22, T[15]);\r\n\r\n        a = MD5.GG(a, b, c, d, M_offset_1,  5,  T[16]);\r\n        d = MD5.GG(d, a, b, c, M_offset_6,  9,  T[17]);\r\n        c = MD5.GG(c, d, a, b, M_offset_11, 14, T[18]);\r\n        b = MD5.GG(b, c, d, a, M_offset_0,  20, T[19]);\r\n        a = MD5.GG(a, b, c, d, M_offset_5,  5,  T[20]);\r\n        d = MD5.GG(d, a, b, c, M_offset_10, 9,  T[21]);\r\n        c = MD5.GG(c, d, a, b, M_offset_15, 14, T[22]);\r\n        b = MD5.GG(b, c, d, a, M_offset_4,  20, T[23]);\r\n        a = MD5.GG(a, b, c, d, M_offset_9,  5,  T[24]);\r\n        d = MD5.GG(d, a, b, c, M_offset_14, 9,  T[25]);\r\n        c = MD5.GG(c, d, a, b, M_offset_3,  14, T[26]);\r\n        b = MD5.GG(b, c, d, a, M_offset_8,  20, T[27]);\r\n        a = MD5.GG(a, b, c, d, M_offset_13, 5,  T[28]);\r\n        d = MD5.GG(d, a, b, c, M_offset_2,  9,  T[29]);\r\n        c = MD5.GG(c, d, a, b, M_offset_7,  14, T[30]);\r\n        b = MD5.GG(b, c, d, a, M_offset_12, 20, T[31]);\r\n\r\n        a = MD5.HH(a, b, c, d, M_offset_5,  4,  T[32]);\r\n        d = MD5.HH(d, a, b, c, M_offset_8,  11, T[33]);\r\n        c = MD5.HH(c, d, a, b, M_offset_11, 16, T[34]);\r\n        b = MD5.HH(b, c, d, a, M_offset_14, 23, T[35]);\r\n        a = MD5.HH(a, b, c, d, M_offset_1,  4,  T[36]);\r\n        d = MD5.HH(d, a, b, c, M_offset_4,  11, T[37]);\r\n        c = MD5.HH(c, d, a, b, M_offset_7,  16, T[38]);\r\n        b = MD5.HH(b, c, d, a, M_offset_10, 23, T[39]);\r\n        a = MD5.HH(a, b, c, d, M_offset_13, 4,  T[40]);\r\n        d = MD5.HH(d, a, b, c, M_offset_0,  11, T[41]);\r\n        c = MD5.HH(c, d, a, b, M_offset_3,  16, T[42]);\r\n        b = MD5.HH(b, c, d, a, M_offset_6,  23, T[43]);\r\n        a = MD5.HH(a, b, c, d, M_offset_9,  4,  T[44]);\r\n        d = MD5.HH(d, a, b, c, M_offset_12, 11, T[45]);\r\n        c = MD5.HH(c, d, a, b, M_offset_15, 16, T[46]);\r\n        b = MD5.HH(b, c, d, a, M_offset_2,  23, T[47]);\r\n\r\n        a = MD5.II(a, b, c, d, M_offset_0,  6,  T[48]);\r\n        d = MD5.II(d, a, b, c, M_offset_7,  10, T[49]);\r\n        c = MD5.II(c, d, a, b, M_offset_14, 15, T[50]);\r\n        b = MD5.II(b, c, d, a, M_offset_5,  21, T[51]);\r\n        a = MD5.II(a, b, c, d, M_offset_12, 6,  T[52]);\r\n        d = MD5.II(d, a, b, c, M_offset_3,  10, T[53]);\r\n        c = MD5.II(c, d, a, b, M_offset_10, 15, T[54]);\r\n        b = MD5.II(b, c, d, a, M_offset_1,  21, T[55]);\r\n        a = MD5.II(a, b, c, d, M_offset_8,  6,  T[56]);\r\n        d = MD5.II(d, a, b, c, M_offset_15, 10, T[57]);\r\n        c = MD5.II(c, d, a, b, M_offset_6,  15, T[58]);\r\n        b = MD5.II(b, c, d, a, M_offset_13, 21, T[59]);\r\n        a = MD5.II(a, b, c, d, M_offset_4,  6,  T[60]);\r\n        d = MD5.II(d, a, b, c, M_offset_11, 10, T[61]);\r\n        c = MD5.II(c, d, a, b, M_offset_2,  15, T[62]);\r\n        b = MD5.II(b, c, d, a, M_offset_9,  21, T[63]);\r\n\r\n        // Intermediate hash value\r\n        H[0] = (H[0] + a) | 0;\r\n        H[1] = (H[1] + b) | 0;\r\n        H[2] = (H[2] + c) | 0;\r\n        H[3] = (H[3] + d) | 0;\r\n    }\r\n\r\n    public _doFinalize(): WordArray {\r\n        // Shortcuts\r\n        const data = this._data;\r\n        const dataWords = data.words;\r\n\r\n        const nBitsTotal = this._nDataBytes * 8;\r\n        const nBitsLeft = data.sigBytes * 8;\r\n\r\n        // Add padding\r\n        dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\r\n\r\n        const nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);\r\n        const nBitsTotalL = nBitsTotal;\r\n        dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = (\r\n            (((nBitsTotalH << 8)  | (nBitsTotalH >>> 24)) & 0x00ff00ff) |\r\n            (((nBitsTotalH << 24) | (nBitsTotalH >>> 8))  & 0xff00ff00)\r\n        );\r\n        dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\r\n            (((nBitsTotalL << 8)  | (nBitsTotalL >>> 24)) & 0x00ff00ff) |\r\n            (((nBitsTotalL << 24) | (nBitsTotalL >>> 8))  & 0xff00ff00)\r\n        );\r\n\r\n        data.sigBytes = (dataWords.length + 1) * 4;\r\n\r\n        // Hash final blocks\r\n        this._process();\r\n\r\n        // Shortcuts\r\n        const hash = this._hash;\r\n        const H = hash.words;\r\n\r\n        // Swap endian\r\n        for (let i = 0; i < 4; i++) {\r\n            // Shortcut\r\n            const H_i = H[i];\r\n\r\n            H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |\r\n                   (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);\r\n        }\r\n\r\n        // Return final computed hash\r\n        return hash;\r\n    }\r\n}"]}