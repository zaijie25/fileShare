{"version":3,"sources":["assets\\bbwz\\Bbwz\\scripts\\panel\\BbwzHistoryPop.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import BbwzConstDefine from \"../data/BbwzConstDefine\";\r\nimport BbwzBaseView from \"../subview/BbwzBaseView\";\r\nimport BbwzBasePool from \"../tool/BbwzBasePool\";\r\nimport BbwzGameEvent from \"../data/BbwzGameEvent\";\r\nimport BbwzData from \"../data/BbwzData\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\nconst viewShowCount = 8;        // 一屏显示8\r\nconst maxShowCount = 30;        // 总共显示最新的30\r\n\r\n/** 弹窗 历史记录界面 */\r\n@ccclass\r\nexport default class BbwzHistoryPop extends cc.Component {\r\n    private maskNode: cc.Node;\r\n    private contentNode: cc.Node;\r\n    private animComp: any;\r\n    private isOpen = false;         // 引入打开变量 处理界面隐藏刷新item再打开scrollview定位不准问题\r\n    \r\n    private historyInfoView: HistoryInfo;\r\n\r\n    protected onLoad(){\r\n        this.node.setContentSize(cc.Canvas.instance.node.getContentSize());\r\n        this.maskNode = cc.find(\"mask\", this.node);\r\n        this.contentNode = cc.find(\"content\", this.node);\r\n        this.animComp = Global.UIHelper.addAnimComp(this.node, this.contentNode, this.maskNode);\r\n        BbwzConstDefine.addCommonClick(this.contentNode, \"button_close\", this.onCloseClick, this);\r\n        BbwzConstDefine.addCommonClick(this.node, \"mask\", this.onCloseClick, this,cc.Button.Transition.NONE);\r\n\r\n        this.historyInfoView = new HistoryInfo(cc.find(\"history\", this.contentNode));\r\n        this.historyInfoView.active = true;\r\n\r\n\t\t// 处理第一次打开卡顿问题\r\n        Game.Event.on(BbwzGameEvent.onHistoryDataRes, this, this.onHisDataGet);\r\n    }\r\n\r\n    protected onEnable(){\r\n        this.animComp.doPopupOpenAnim(()=>{\r\n            this.isOpen = true;\r\n            // debug 动画过程中scroll会导致定位不到, 放到动画后\r\n            this.historyInfoView.scrollToSide();\r\n        });\r\n    }\r\n\r\n    protected onDisable(){\r\n        this.isOpen = false;\r\n    }\r\n\r\n    protected onDestroy(){\r\n        Game.Event.off(BbwzGameEvent.onHistoryDataRes, this, this.onHisDataGet);\r\n    }\r\n\r\n    private onHisDataGet(isClear: boolean){\r\n        if (this.historyInfoView.curShowCount <= 0 || isClear) {\r\n            this.showOnce();\r\n        }\r\n        else {\r\n            this.updateAllUI();\r\n        }\r\n    }\r\n    \r\n    // 刚打开时 刷新数据\r\n    private showOnce() {\r\n        let total = BbwzData.instance.historyDataArr.length;\r\n        let datas = BbwzData.instance.historyDataArr.slice(total - maxShowCount > 0 ? total - maxShowCount : 0, total);\r\n        this.historyInfoView.curShowCount = datas.length;\r\n\r\n        this.historyInfoView.updateUI(datas, this.isOpen);\r\n    }\r\n\r\n    // 打开着 刷新数据\r\n    public updateAllUI() {\r\n        let total = BbwzData.instance.historyDataArr.length;\r\n        let datas = BbwzData.instance.historyDataArr.slice(total - maxShowCount > 0 ? total - maxShowCount : 0, total);\r\n\r\n        let curCount = datas.length;\r\n        // if (curCount != this.historyInfoView.curShowCount) {\r\n            if (curCount - this.historyInfoView.curShowCount == 1) {       // 添加单条数据\r\n                let obj = datas[curCount - 1];\r\n                this.historyInfoView.curShowCount = curCount;\r\n                this.historyInfoView.addOne(obj, this.isOpen);\r\n            }\r\n            else {          // 多条全刷新\r\n                this.historyInfoView.curShowCount = curCount;\r\n                this.historyInfoView.updateUI(datas, this.isOpen);\r\n            }\r\n        // }\r\n    }\r\n\r\n    private onCloseClick(){\r\n        BbwzConstDefine.playBtnSound();\r\n        this.animComp.doPopupCloseAnim(()=>{\r\n            this.node.active = false;\r\n        });\r\n    }\r\n}\r\n\r\n/**\r\n * 走势滑动列表\r\n */\r\nclass HistoryInfo extends BbwzBaseView{\r\n    private scrollView: cc.ScrollView;\r\n    private svLayout: cc.Layout;\r\n    private copyNode: cc.Node;\r\n    private pool: HistoryItemPool;\r\n    private itemList: HistoryItemView[] = [];\r\n    /** 当前已显示多少局 */\r\n    public curShowCount = 0;\r\n\r\n    constructor(node: cc.Node){\r\n        super();\r\n        this.setNode(node);\r\n    }\r\n\r\n    protected initView(){\r\n        this.scrollView = <cc.ScrollView>this.getComponent(\"scrollView\", cc.ScrollView);\r\n        this.svLayout = <cc.Layout>this.getComponent(\"scrollView/view/content\", cc.Layout);\r\n        this.copyNode = this.getChild(\"scrollView/view/item\");\r\n        this.copyNode.active = false;\r\n\r\n        let poolNode = this.getChild(\"pool\");\r\n        poolNode.active = false;\r\n        this.pool = new HistoryItemPool(poolNode, this.copyNode);\r\n    }\r\n\r\n    public updateUI(arr: any[], isScroll: boolean = false){\r\n        this.clear();\r\n        if (!arr || Global.Toolkit.isEmptyObject(arr))\r\n            return;\r\n        arr.forEach(data=>{\r\n            this.addOneItem(data);\r\n        });\r\n        this.updateNewItem();\r\n        if (isScroll){\r\n            this.scrollToSide(0);\r\n        }\r\n    }\r\n\r\n    public addOne(data, isScroll: boolean = false){\r\n        this.addOneItem(data);\r\n        this.updateNewItem();\r\n        if (isScroll){\r\n            this.scrollToSide(0.5);\r\n        }\r\n    }\r\n\r\n    public scrollToSide(time: number = 0){\r\n        if(this.scrollView.isScrolling())\r\n            return;\r\n\r\n        // debug 未超出显示区域时, 不能滚动右侧\r\n        if (this.curShowCount > viewShowCount){\r\n            this.scrollView.scrollToRight(time);\r\n        }\r\n        else{\r\n            this.scrollView.scrollToLeft(0);\r\n        }\r\n    }\r\n\r\n    private addOneItem(data){\r\n        let item = this.pool.getItem();\r\n        item.active = true;\r\n        item.setInfo(data.point);\r\n        this.itemList.push(item);\r\n        item.node.setParent(this.svLayout.node);\r\n    }\r\n\r\n    public updateNewItem(){\r\n        this.itemList.forEach(item=>{\r\n            item.setNew(false);\r\n        });\r\n        this.itemList[this.itemList.length - 1].setNew(true);\r\n    }\r\n\r\n    public clear(){\r\n        this.pool.recycleAll(this.itemList);\r\n        this.itemList = [];\r\n    }\r\n}\r\n\r\n/**\r\n * 走势滑动列表item池\r\n */\r\nclass HistoryItemPool extends BbwzBasePool<HistoryItemView>{\r\n    constructor(protected root: cc.Node, protected copyNode: cc.Node){\r\n        super(root);\r\n    }\r\n\r\n    protected get preCount(){\r\n        return 20;\r\n    }\r\n\r\n    protected get everyCount(){\r\n        return 20;\r\n    }\r\n\r\n    protected createItem(){\r\n        let node = cc.instantiate(this.copyNode);\r\n        node.active = true;\r\n        let view = new HistoryItemView(node);\r\n        view.active = true;\r\n        return view;\r\n    }\r\n\r\n    protected resetItem(item: HistoryItemView){\r\n        item.active = false;\r\n        item.node.setParent(this.root);\r\n    }\r\n}\r\n\r\n/**\r\n * 走势滑动列表item抽象\r\n */\r\nclass HistoryItemView extends BbwzBaseView{\r\n    private newNode: cc.Node;\r\n    private winIconNodeList: cc.Node[] = [];\r\n    private loseIconNodeList: cc.Node[] = [];\r\n    private multLblList: cc.Label[] = [];\r\n\r\n    constructor(node: cc.Node){\r\n        super();\r\n        this.setNode(node);\r\n    }\r\n\r\n    protected initView(){\r\n        this.newNode = this.getChild(\"newIcon\");\r\n        for (let i = 0; i < BbwzConstDefine.BET_AREA_COUNT; i++){\r\n            let winNode = this.getChild(\"win\" + i);\r\n            let loseNode = this.getChild(\"lose\" + i);\r\n            let lbl = this.getComponent(\"multLbl\" + i, cc.Label);\r\n            this.winIconNodeList.push(winNode);\r\n            this.loseIconNodeList.push(loseNode);\r\n            this.multLblList.push(lbl);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置历史数据\r\n     * @param pointData {fu_bull: {hit: 0, multi: 4, win_multi: 4}, fu_zjh: {hit: 1, multi: 2, win_multi: -4}}\r\n     */\r\n    public setInfo(pointData: any) {\r\n        for (let i = 0; i < BbwzConstDefine.BET_AREA_COUNT; i++){\r\n            let key = BbwzConstDefine.BET_AREA_NAME[i];\r\n            let winNode = this.winIconNodeList[i];\r\n            let loseNode = this.loseIconNodeList[i];\r\n            let multLbl = this.multLblList[i];\r\n            if (pointData[key]){\r\n                let total = pointData[key].win_multi;\r\n                winNode.active = total >= 0;\r\n                loseNode.active = total < 0;\r\n                multLbl.string = total > 0 ? (\"+\" + String(total)) : String(total);\r\n            }\r\n            else{\r\n                winNode.active = false;\r\n                loseNode.active = false;\r\n                multLbl.node.active = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    public setNew(flag: boolean){\r\n        this.newNode.active = flag;\r\n    }\r\n}"]}