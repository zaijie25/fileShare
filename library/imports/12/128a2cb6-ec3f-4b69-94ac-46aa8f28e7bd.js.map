{"version":3,"sources":["assets\\hall\\scripts\\logic\\core\\hotUpdate\\PBHelper.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import HotUpdateManager from './HotUpdateManager'\r\nimport Toolkit from \"../tool/Toolkit\";\r\nexport default class PBHelper {\r\n    private prePath = 'hall/prefabs/Dlgs/'\r\n    private nodeName = '';\r\n    private lock = true;\r\n\r\n\r\n    private Paths = {\r\n        DlgSetting: this.prePath + 'DlgSetting',\r\n        DlgGameNeedDownload: this.prePath + 'DlgGameNeedDownload',\r\n    }\r\n    //游戏引用大厅的资源预加载，creator 2.0 后，子游戏更新引用大厅的资源，如果不进行预加载很多时候大厅的资源无法引用\r\n    //预加载prefab 时，引用到的spine 动画不会被预加载，会导致报错，目前游戏中引用的大厅的资源先去掉动画\r\n    private ComPaths = {\r\n        DlgSetting: this.prePath + 'DlgSetting'\r\n    }\r\n\r\n    public initHelper(cb){\r\n        let loaded = 0;\r\n        let underscore = Toolkit.underscore;\r\n        let HotUpdateManager = Global.HotUpdateManager;\r\n        let ccLoaderHelper = HotUpdateManager.ccLoaderHelper;\r\n        let self = this;\r\n        underscore.each(this.ComPaths,function(value,key){\r\n            Logger.log('-----------------------------getComPaths res---------')\r\n            ccLoaderHelper.getRes(value,cc.Prefab,function(err,prefab){\r\n                Logger.log('PBHelper : ' + key + ' is loaded')\r\n                loaded ++;\r\n                if (loaded >= underscore.size(self.ComPaths)) {\r\n                    if (cb) {\r\n                        cb();\r\n                        return;\r\n                    }\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    public addNode(name,parent = null,cb = null,zorder = 9999){\r\n        if (name == this.nodeName && this.lock) {\r\n            return;\r\n        }\r\n        Logger.log('PBHelper ----------- addNode-------' + name)\r\n        this.lock = true;\r\n        this.nodeName = name;\r\n        this.getNode(name,(node:cc.Node)=>{\r\n            if (parent === null){\r\n                parent = cc.director.getScene().getChildByName('Canvas')\r\n            }\r\n            if (parent.getChildByName('popup9999')) {\r\n                parent.getChildByName('popup9999').destroy();\r\n            }\r\n            parent.addChild(node,zorder,'popup9999')\r\n            this.lock = false;\r\n            if (cb) {\r\n                cb(node)\r\n            }\r\n        })\r\n    }\r\n\r\n    public getNode(name,cb=null,setShowLoading = null){\r\n        let cbDone = cb;\r\n        let self = this;\r\n        Logger.log('--------getNode-----------' + this.Paths[name])\r\n        let HotUpdateManager = Global.HotUpdateManager;\r\n        HotUpdateManager.ccLoaderHelper.getRes(this.Paths[name],cc.Prefab,function(err,res){\r\n            let node = cc.instantiate(cc.loader.getRes(self.Paths[name]));\r\n            if(cbDone) cbDone(node)\r\n            return node;\r\n        })\r\n    }\r\n\r\n    public releaseNode(key = null){\r\n        let _release = function(key){\r\n            Logger.log(\"@Release:\" + key)\r\n            let deps =cc.loader.getDependsRecursively(this.Paths[key]);\r\n            cc.loader.release(deps)\r\n        }\r\n\r\n        if (key === null) {\r\n            for (let key in this.Paths) {\r\n                _release(key)\r\n            }\r\n        }else {\r\n            _release(key)\r\n        }\r\n    }\r\n\r\n}"]}