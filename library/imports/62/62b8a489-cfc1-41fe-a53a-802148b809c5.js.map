{"version":3,"sources":["assets\\hall\\scripts\\listview.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import {LayoutUtil} from \"./layout_utils\"\r\n\r\nexport class ListView\r\n{\r\n    private scrollview:cc.ScrollView;\r\n    private mask:cc.Node;\r\n    private content:cc.Node;\r\n    private item_tpl:cc.Node;\r\n    private node_pool:cc.Node[];\r\n\r\n    private dir:number;\r\n    private width:number;\r\n    private height:number;\r\n    private gap_x:number;\r\n    private gap_y:number;\r\n    private row:number;\r\n    private col:number;\r\n    private item_width:number;\r\n    private item_height:number;\r\n    private cb_host:any;\r\n    private item_setter:(item:cc.Node, data:any, index:number)=>void;\r\n    private recycle_cb:(item:cc.Node)=>void;\r\n    private select_cb:(data:any, index:number)=>void;\r\n    private select_setter:(item:cc.Node, is_select:boolean, index:number)=>void;\r\n    private scroll_to_end_cb:()=>void;\r\n    private auto_scrolling:boolean;\r\n    private items:ListItem[];\r\n    private start_index:number;\r\n    private stop_index:number;\r\n    private _datas:any[];\r\n    private _selected_index:number = -1;\r\n\r\n    constructor(params:ListViewParams)\r\n    {\r\n        this.scrollview = params.scrollview;\r\n        this.mask = params.mask;\r\n        this.content = params.content;\r\n        this.item_tpl = params.item_tpl;\r\n        this.item_tpl.active = false;\r\n        this.item_width = this.item_tpl.width;\r\n        this.item_height = this.item_tpl.height;\r\n        this.dir = params.direction || ListViewDir.Vertical;\r\n        this.width = params.width || this.mask.width;\r\n        this.height = params.height || this.mask.height;\r\n        this.gap_x = params.gap_x || 0;\r\n        this.gap_y = params.gap_y || 0;\r\n        this.row = params.row || 1;\r\n        this.col = params.column || 1;\r\n        this.cb_host = params.cb_host;\r\n        this.item_setter = params.item_setter;\r\n        this.recycle_cb = params.recycle_cb;\r\n        this.select_cb = params.select_cb;\r\n        this.select_setter = params.select_setter;\r\n        this.scroll_to_end_cb = params.scroll_to_end_cb;\r\n        this.auto_scrolling = params.auto_scrolling || false;\r\n        this.node_pool = [];\r\n\r\n        if(this.dir == ListViewDir.Vertical)\r\n        {\r\n            let real_width:number = (this.item_width + this.gap_x) * this.col - this.gap_x;\r\n            if(real_width > this.width)\r\n            {\r\n                Logger.log(\"real width > width, resize scrollview to realwidth,\", this.width, \"->\", real_width);\r\n                this.width = real_width;\r\n            }\r\n            this.content.width = this.width;\r\n        }\r\n        else\r\n        {\r\n            let real_height:number = (this.item_height + this.gap_y) * this.row - this.gap_y;\r\n            if(real_height > this.height)\r\n            {\r\n                Logger.log(\"real height > height, resize scrollview to realheight,\", this.height, \"->\", real_height);\r\n                this.height = real_height;\r\n            }\r\n            this.content.height = this.height;\r\n        }\r\n        this.mask.setContentSize(this.width, this.height);\r\n        // this.mask.addComponent(cc.Mask);\r\n        this.scrollview.node.setContentSize(this.width, this.height);\r\n        this.scrollview.vertical = this.dir == ListViewDir.Vertical;\r\n        this.scrollview.horizontal = this.dir == ListViewDir.Horizontal;\r\n        this.scrollview.inertia = true;\r\n        this.scrollview.node.on(\"scrolling\", this.on_scrolling, this);\r\n        this.scrollview.node.on(\"scroll-to-bottom\", this.on_scroll_to_end, this);\r\n        this.scrollview.node.on(\"scroll-to-right\", this.on_scroll_to_end, this);\r\n        // cc.info(\"constructor\", this.mask.width, this.mask.height, this.scrollview.node.width, this.scrollview.node.height, this.content.width, this.content.height);\r\n    }\r\n\r\n    private on_scroll_to_end()\r\n    {\r\n        if(this.scroll_to_end_cb)\r\n        {\r\n            this.scroll_to_end_cb.call(this.cb_host);\r\n        }\r\n    }\r\n\r\n    private on_scrolling()\r\n    {\r\n        if(!this.items || !this.items.length)\r\n        {\r\n            return;\r\n        }\r\n        if(this.dir == ListViewDir.Vertical)\r\n        {\r\n            let posy:number = this.content.y;\r\n            // cc.info(\"onscrolling, content posy=\", posy);\r\n            if(posy < 0)\r\n            {\r\n                posy = 0;\r\n            }\r\n            if(posy > this.content.height - this.height)\r\n            {\r\n                posy = this.content.height - this.height;\r\n            }\r\n            let start:number = 0;\r\n            let stop:number = this.items.length - 1;\r\n            let viewport_start:number = -posy;\r\n            let viewport_stop:number = viewport_start - this.height;\r\n            while(this.items[start].y - this.item_height > viewport_start)\r\n            {\r\n                start++;\r\n            }\r\n            while(this.items[stop].y < viewport_stop)\r\n            {\r\n                stop--;\r\n            }\r\n            if(start != this.start_index && stop != this.stop_index)\r\n            {\r\n                this.start_index = start;\r\n                this.stop_index = stop;\r\n                // cc.info(\"render_from:\", start, stop);\r\n                this.render_items();\r\n            }\r\n        }\r\n        else\r\n        {\r\n            let posx:number = this.content.x;\r\n            // cc.info(\"onscrolling, content posx=\", posx);\r\n            if(posx > 0)\r\n            {\r\n                posx = 0;\r\n            }\r\n            if(posx < this.width - this.content.width)\r\n            {\r\n                posx = this.width - this.content.width;\r\n            }\r\n            let start:number = 0;\r\n            let stop:number = this.items.length - 1;\r\n            let viewport_start:number = -posx;\r\n            let viewport_stop:number = viewport_start + this.width;\r\n            while(this.items[start].x + this.item_width < viewport_start)\r\n            {\r\n                start++;\r\n            }\r\n            while(this.items[stop].x > viewport_stop)\r\n            {\r\n                stop--;\r\n            }\r\n            if(start != this.start_index && stop != this.stop_index)\r\n            {\r\n                this.start_index = start;\r\n                this.stop_index = stop;\r\n                // cc.info(\"render_from:\", start, stop);\r\n                this.render_items();\r\n            }\r\n        }\r\n    }\r\n\r\n    select_item(index)\r\n    {\r\n        if(index == this._selected_index)\r\n        {\r\n            return;\r\n        }\r\n        if(this._selected_index != -1)\r\n        {\r\n            this.inner_select_item(this._selected_index, false);\r\n        }\r\n        this.inner_select_item(index, true);\r\n    }\r\n\r\n    private inner_select_item(index:number, is_select:boolean)\r\n    {\r\n        let item:ListItem = this.items[index];\r\n        if(!item)\r\n        {\r\n            Logger.warn(\"inner_select_item index is out of range{\", 0, this.items.length - 1, \"}\", index);\r\n            return;\r\n        }\r\n        item.is_select = is_select;\r\n        if(item.node && this.select_setter)\r\n        {\r\n            this.select_setter.call(this.cb_host, item.node, is_select, index);\r\n        }\r\n        if(is_select)\r\n        {\r\n            this._selected_index = index;\r\n            if(this.select_cb)\r\n            {\r\n                this.select_cb.call(this.cb_host, item.data, index);\r\n            }\r\n        }\r\n    }\r\n\r\n    private spawn_node(index:number):cc.Node\r\n    {\r\n        let node:cc.Node = this.node_pool.pop();\r\n        if(!node)\r\n        {\r\n            node = cc.instantiate(this.item_tpl);\r\n            node.active = true;\r\n            let btn:cc.Button = node.getComponent(cc.Button);\r\n            if(btn == null)\r\n                btn = node.addComponent(cc.Button);\r\n            node.on(\"click\", this.onItemClick, this);\r\n            // cc.info(\"spawn_node\", index);\r\n        }\r\n        node.parent = this.content;\r\n        return node;\r\n    }\r\n\r\n    private onItemClick(target)\r\n    {\r\n        let index = Number(target.node.name);\r\n        this.select_item(index);\r\n    }\r\n\r\n    private recycle_item(item:ListItem)\r\n    {\r\n        if(item.node && cc.isValid(item.node))\r\n        {\r\n            if(this.recycle_cb)\r\n            {\r\n                this.recycle_cb.call(this.cb_host, item.node);\r\n            }\r\n            item.node.removeFromParent();\r\n            this.node_pool.push(item.node);\r\n            item.node = null;\r\n        }\r\n    }\r\n\r\n    private clear_items()\r\n    {\r\n        if(this.items)\r\n        {\r\n            this.items.forEach((item) => {\r\n                this.recycle_item(item);        \r\n            });\r\n        }\r\n    }\r\n\r\n    private render_items()\r\n    {\r\n        let item:ListItem;\r\n        for(let i:number = 0; i < this.start_index; i++)\r\n        {\r\n            item = this.items[i];\r\n            if(item.node)\r\n            {\r\n                // cc.info(\"recycle_item\", i);\r\n                this.recycle_item(item);\r\n            }\r\n        }\r\n        for(let i:number = this.items.length - 1; i > this.stop_index; i--)\r\n        {\r\n            item = this.items[i];\r\n            if(item.node)\r\n            {\r\n                // cc.info(\"recycle_item\", i);\r\n                this.recycle_item(item);\r\n            }\r\n        }\r\n        for(let i:number = this.start_index; i <= this.stop_index; i++)\r\n        {\r\n            item = this.items[i];\r\n            if(!item.node)\r\n            {\r\n                // cc.info(\"render_item\", i);\r\n                item.node = this.spawn_node(i);\r\n                this.item_setter.call(this.cb_host, item.node, item.data, i);\r\n                if(this.select_setter)\r\n                {\r\n                    this.select_setter.call(this.cb_host, item.node, item.is_select, i);\r\n                }\r\n            }\r\n            item.node.name = i.toString();\r\n            item.node.setPosition(item.x, item.y);\r\n        }\r\n    }\r\n\r\n    private pack_item(data:any):ListItem\r\n    {\r\n        return {x:0, y:0, data:data, node:null, is_select:false};\r\n    }\r\n\r\n    private layout_items(start:number)\r\n    {\r\n        // cc.info(\"layout_items, start=\", start);\r\n        for(let index:number = start, stop:number = this.items.length; index < stop; index++)\r\n        {\r\n            let item:ListItem = this.items[index];\r\n            if(this.dir == ListViewDir.Vertical)\r\n            {\r\n                [item.x, item.y] = LayoutUtil.vertical_layout(index, this.item_width, this.item_height, this.col, this.gap_x, this.gap_y);\r\n            }\r\n            else\r\n            {\r\n                [item.x, item.y] = LayoutUtil.horizontal_layout(index, this.item_width, this.item_height, this.row, this.gap_x, this.gap_y);\r\n            }\r\n        }\r\n    }\r\n\r\n    private resize_content()\r\n    {\r\n        if(this.items.length <= 0)\r\n        {\r\n            this.content.width = 0;\r\n            this.content.height = 0;\r\n            return;\r\n        }\r\n        let last_item:ListItem = this.items[this.items.length - 1];\r\n        if(this.dir == ListViewDir.Vertical)\r\n        {\r\n            this.content.height = Math.max(this.height, this.item_height - last_item.y);\r\n        }\r\n        else\r\n        {\r\n            this.content.width = Math.max(this.width, last_item.x + this.item_width);\r\n        }\r\n        // cc.info(\"resize_content\", this.mask.width, this.mask.height, this.scrollview.node.width, this.scrollview.node.height, this.content.width, this.content.height);\r\n    }\r\n\r\n    set_data(datas:any[])\r\n    {\r\n        this.clear_items();\r\n        this.items = [];\r\n        this._datas = datas;\r\n        datas.forEach((data) => {\r\n            let item:ListItem = this.pack_item(data);\r\n            this.items.push(item);\r\n        });\r\n        this.layout_items(0);\r\n        this.resize_content();\r\n        this.start_index = -1;\r\n        this.stop_index = -1;\r\n        if(this.dir == ListViewDir.Vertical)\r\n        {\r\n            this.content.y = 0;\r\n        }\r\n        else\r\n        {\r\n            this.content.x = 0;\r\n        }\r\n        if(this.items.length > 0)\r\n        {\r\n            this.on_scrolling();\r\n        }\r\n    }\r\n\r\n    insert_data(index:number, ...datas:any[])\r\n    {\r\n        if(datas.length == 0 )\r\n        {\r\n            Logger.log(\"nothing to insert\");\r\n            return;\r\n        }\r\n        if(!this.items)\r\n        {\r\n            this.items = [];\r\n        }\r\n        if(!this._datas)\r\n        {\r\n            this._datas = [];\r\n        }\r\n        if(index < 0 || index > this.items.length)\r\n        {\r\n            Logger.warn(\"invalid index\", index);\r\n            return;\r\n        }\r\n        let is_append:boolean = index == this.items.length;\r\n        let items:ListItem[] = [];\r\n        datas.forEach((data) => {\r\n            let item:ListItem = this.pack_item(data);\r\n            items.push(item);\r\n        });\r\n        this._datas.splice(index, 0, ...datas);\r\n        this.items.splice(index, 0, ...items);\r\n        this.layout_items(index);\r\n        this.resize_content();\r\n        this.start_index = -1;\r\n        this.stop_index = -1;\r\n        \r\n        if(this.auto_scrolling && is_append)\r\n        {\r\n            this.scroll_to_end();\r\n        }\r\n        this.on_scrolling();\r\n    }\r\n\r\n    remove_data(index:number, count:number = 1)\r\n    {\r\n        if(!this.items)\r\n        {\r\n            Logger.log(\"call set_data before call this method\");\r\n            return;\r\n        }\r\n        if(index < 0 || index >= this.items.length)\r\n        {\r\n            Logger.warn(\"invalid index\", index);\r\n            return;\r\n        }\r\n        if(count < 1)\r\n        {\r\n            Logger.log(\"nothing to remove\");\r\n            return;\r\n        }\r\n        let old_length:number = this.items.length;\r\n        let del_items:ListItem[] = this.items.splice(index, count);\r\n        this._datas.splice(index, count);\r\n        //回收node\r\n        del_items.forEach((item) => {\r\n            this.recycle_item(item);\r\n        });\r\n\r\n        //重新排序index后面的\r\n        if(index + count < old_length)\r\n        {\r\n            this.layout_items(index);\r\n        }\r\n        this.resize_content();\r\n        if(this.items.length > 0)\r\n        {\r\n            this.start_index = -1;\r\n            this.stop_index = -1;\r\n            this.on_scrolling();\r\n        }\r\n    }\r\n\r\n    append_data(...datas:any[])\r\n    {\r\n        if(!this.items)\r\n        {\r\n            this.items = [];\r\n        }\r\n        this.insert_data(this.items.length, ...datas);\r\n    }\r\n\r\n    scroll_to(index:number)\r\n    {\r\n        if(this.dir == ListViewDir.Vertical)\r\n        {\r\n\t\t\tconst min_y = this.height - this.content.height;\r\n\t\t\tif(min_y >= 0)\r\n\t\t\t{\r\n\t\t\t\tLogger.log(\"no need to scroll\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tlet [_, y] = LayoutUtil.vertical_layout(index, this.item_width, this.item_height, this.col, this.gap_x, this.gap_y);\r\n\t\t\tif(y < min_y)\r\n\t\t\t{\r\n\t\t\t\ty = min_y;\r\n\t\t\t\tLogger.log(\"content reach bottom\");\r\n\t\t\t}\r\n\t\t\tif(y > 0)\r\n\t\t\t{\r\n\t\t\t\ty = 0;\r\n\t\t\t\tLogger.log(\"content reach top\");\r\n\t\t\t}\r\n\t\t\tthis.scrollview.setContentPosition(cc.v2(this.content.x, -y));\r\n\t\t\tthis.on_scrolling();\r\n        }\r\n        else\r\n        {\r\n\t\t\tconst max_x = this.content.width - this.width;\r\n\t\t\tif(max_x <= 0)\r\n\t\t\t{\r\n\t\t\t\tLogger.log(\"no need to scroll\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tlet [x, _] = LayoutUtil.horizontal_layout(index, this.item_width, this.item_height, this.row, this.gap_x, this.gap_y);\r\n\t\t\tif(x > max_x)\r\n\t\t\t{\r\n\t\t\t\tx = max_x;\r\n\t\t\t\tLogger.log(\"content reach right\");\r\n\t\t\t}\r\n\t\t\tif(x < 0)\r\n\t\t\t{\r\n\t\t\t\tx = 0;\r\n\t\t\t\tLogger.log(\"content reach left\");\r\n\t\t\t}\r\n\t\t\tthis.scrollview.setContentPosition(cc.v2(-x, this.content.position.y));\r\n\t\t\tthis.on_scrolling();\r\n        }\r\n    }\r\n\r\n    scroll_to_end()\r\n    {\r\n        if(this.dir == ListViewDir.Vertical)\r\n        {\r\n            this.scrollview.scrollToBottom();\r\n        }\r\n        else\r\n        {\r\n            this.scrollview.scrollToRight();\r\n        }\r\n    }\r\n\r\n    refresh_item(index:number, data:any)\r\n    {\r\n        if(!this.items)\r\n        {\r\n            Logger.log(\"call set_data before call this method\");\r\n            return;\r\n        }\r\n        if(index < 0 || index >= this.items.length)\r\n        {\r\n            Logger.warn(\"invalid index\", index);\r\n            return;\r\n        }\r\n        let item:ListItem = this.items[index];\r\n        item.data = data;\r\n        this._datas[index] = data;\r\n        if(item.node)\r\n        {\r\n            if(this.recycle_cb)\r\n            {\r\n                this.recycle_cb.call(this.cb_host, item.node);\r\n            }\r\n            this.item_setter.call(this.cb_host, item.node, item.data, index);\r\n        }\r\n    }\r\n\r\n    destroy()\r\n    {\r\n        this.clear_items();\r\n        this.node_pool.forEach((node) => {\r\n            node.destroy();\r\n        });\r\n        this.node_pool = null;\r\n        this.items = null;\r\n        this._datas = null;\r\n\r\n        if(cc.isValid(this.scrollview.node))\r\n        {\r\n            this.scrollview.node.off(\"scrolling\", this.on_scrolling, this);\r\n            this.scrollview.node.off(\"scroll-to-bottom\", this.on_scroll_to_end, this);\r\n            this.scrollview.node.off(\"scroll-to-right\", this.on_scroll_to_end, this);\r\n        }\r\n    }\r\n\r\n    get datas():any[]\r\n    {\r\n        return this._datas;\r\n    }\r\n\r\n    get selected_index():number\r\n    {\r\n        return this._selected_index;\r\n    }\r\n\r\n    get selectd_data():any\r\n    {\r\n        let item:ListItem = this.items[this._selected_index];\r\n        if(item)\r\n        {\r\n            return item.data;\r\n        }\r\n        return null;\r\n    }\r\n}\r\n\r\nexport enum ListViewDir \r\n{\r\n    Vertical = 1,\r\n    Horizontal = 2,\r\n}\r\n\r\ntype ListViewParams = {\r\n    scrollview:cc.ScrollView;\r\n    mask:cc.Node;\r\n    content:cc.Node;\r\n    item_tpl:cc.Node;\r\n    direction?:ListViewDir;\r\n    width?:number;\r\n    height?:number;\r\n    gap_x?:number;\r\n    gap_y?:number;\r\n    row?:number;                                                                //水平方向排版时，垂直方向上的行数\r\n    column?:number;                                                             //垂直方向排版时，水平方向上的列数\r\n    cb_host?:any;                                                               //回调函数host\r\n    item_setter:(item:cc.Node, data:any, index:number)=>void;                   //item更新setter\r\n    recycle_cb?:(item:cc.Node)=>void;                                           //回收时的回调\r\n    select_cb?:(data:any, index:number)=>void;                                  //item选中回调\r\n    select_setter?:(item:cc.Node, is_select:boolean, index:number)=>void;       //item选中效果setter\r\n    scroll_to_end_cb?:()=>void;                                                 //滚动到尽头的回调\r\n    auto_scrolling?:boolean;                                                    //append时自动滚动到尽头\r\n}\r\n\r\ntype ListItem = {\r\n    x:number;\r\n    y:number;\r\n    data:any;\r\n    node:cc.Node;\r\n    is_select:boolean;\r\n}"]}