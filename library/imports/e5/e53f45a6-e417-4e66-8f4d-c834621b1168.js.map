{"version":3,"sources":["assets\\hall\\scripts\\logic\\hallcommon\\model\\RechagreTipModel.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import HallStorageKey from \"../const/HallStorageKey\";\r\nimport ModelBase from \"../../../framework/model/ModelBase\";\r\n\r\n\r\nexport default class RechagreTipModel extends ModelBase {\r\n    private _RechagreTipModel: boolean;\r\n    private salenum;\r\n    public flag :boolean = false\r\n\r\n    protected onInit() {\r\n        this.name = \"RechagreTipModel\";\r\n    }\r\n\r\n    public setRechagreTipModel() {\r\n        let time = Global.Setting.storage.get(HallStorageKey.Sale);\r\n        let Onlinetime = new Date().getTime()\r\n        if (time == null || time == \"\") {\r\n            time = new Date().getTime()\r\n            Global.Setting.storage.set(HallStorageKey.Sale, time);\r\n            this._RechagreTipModel = true;\r\n        }\r\n        else {\r\n            if (this.salenum > 0) {\r\n                this._RechagreTipModel = this.SetTimeData(time, Onlinetime)\r\n            }\r\n        }\r\n        Global.Setting.storage.set(HallStorageKey.Sale, Onlinetime);\r\n    }\r\n\r\n    public get RechagreTipModel() {\r\n        let time = Global.Setting.storage.get(HallStorageKey.Sale);\r\n        let Onlinetime = new Date().getTime()\r\n        if (time == null || time == \"\") {\r\n            this._RechagreTipModel = true;\r\n        }\r\n        else {\r\n            if (this.salenum > 0) {\r\n                this._RechagreTipModel = this.SetTimeData(time, Onlinetime)\r\n            }\r\n        }\r\n        return this._RechagreTipModel;\r\n    }\r\n\r\n    public get Salenum() {\r\n        return this.salenum;\r\n    }\r\n\r\n    public initData(num: number) {\r\n        if (num) {\r\n            this.salenum = num;\r\n        }\r\n        else\r\n            this.salenum = 0;\r\n    }\r\n\r\n    SetTimeData(date1, date2) {\r\n        let time1 = new Date(Number(date1))\r\n        let time2 = new Date(date2);\r\n        let y1 = time1.getFullYear();\r\n        let y2 = time2.getFullYear();\r\n        let m1 = time1.getMonth();\r\n        let m2 = time2.getMonth();\r\n        let d1 = time1.getDate();\r\n        let d2 = time2.getDate();\r\n        if (y2 > y1) {\r\n            return true;\r\n        }\r\n        if (m2 > m1) {\r\n            return true;\r\n        }\r\n        if (d2 > d1) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}"]}