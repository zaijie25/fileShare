{"version":3,"sources":["assets\\hall\\scripts\\logic\\core\\loadingMVC\\LoadingMediator.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import Const from \"./LoadingConst\";\r\nimport AppHelper from \"../tool/AppHelper\";\r\nimport { CustomerEntranceType } from \"../../hallcommon/model/ServicerModel\";\r\nimport AppHotUpdateProxy from \"./AppHotUpdateProxy\";\r\n\r\nexport default class ViewMediator extends puremvc.Mediator {\r\n    public static NAME: string = \"LoadingViewMediator\"\r\n    viewComponent: cc.Component;\r\n    infoLabel: cc.Label;\r\n    progressLabel:cc.Label;\r\n    loadingBar: cc.Node;\r\n    restoreNode: cc.Node;\r\n    versionLabel:cc.Label;\r\n\r\n    //背景图\r\n    private bg:cc.Sprite;\r\n    private rootNode: cc.Node;  // \r\n\r\n    _timeOut:any\r\n    curPer = 0;\r\n    private buttonTouch = false;\r\n    constructor(viewComponent: cc.Component) {\r\n        super(ViewMediator.NAME, viewComponent)\r\n        this.initNode()\r\n    }\r\n\r\n    listNotificationInterests(): any {\r\n        super.listNotificationInterests();\r\n        return [\r\n            Const.CHECK_UPDATE,\r\n            Const.SHOW_CHECK_LABEL,\r\n            Const.SHOW_PROGRESS_LABEL,\r\n            Const.SHOW_PROGRESS_BAR,\r\n            Const.UPDATE_LOADING_VERSION,\r\n            Const.UPDATE_APP_INFO,\r\n            Const.DUN_INIT_FINISH,\r\n            Const.CHCEK_HOTUPDATE_PROGRESS,\r\n            Const.CLEAR_LOADING_TIMER\r\n        ]\r\n    }\r\n\r\n    handleNotification(notification) {\r\n        let msgName = notification.getName();\r\n        let msgdata = notification.getBody();\r\n        let msgType = notification.getType();\r\n        if (msgName == Const.SHOW_CHECK_LABEL) {\r\n            let labStr = msgdata.parm\r\n            this.setCheckLabelString(labStr)\r\n        }else if(msgName == Const.SHOW_PROGRESS_LABEL){\r\n            let labStr = msgdata.parm\r\n            this.setProgressLabelString(labStr)\r\n        }else if (msgName == Const.SHOW_PROGRESS_BAR) {\r\n            let perNum = msgdata.parm\r\n            this.updateLoadingBar(perNum)\r\n        }else if (msgName == Const.UPDATE_LOADING_VERSION) {\r\n            this.setNativeVersion()\r\n        }\r\n        else if (msgName == Const.UPDATE_APP_INFO) {\r\n            this.updateAppInfo()\r\n        }\r\n        else if (msgName == Const.CLEAR_LOADING_TIMER){\r\n            this.clearTimer()\r\n        }else if (msgName == Const.DUN_INIT_FINISH){\r\n            this.onTDunInitFinish();\r\n        }else if (msgName == Const.CHCEK_HOTUPDATE_PROGRESS){\r\n            this.checkHotUpdateProgress()\r\n        }\r\n    }\r\n    initNode() {\r\n        // this.rootNode = this.viewComponent.node;\r\n        this.rootNode = cc.find(\"LoadingView\", this.viewComponent.node);\r\n        let kefuBtn = Global.UIHelper.addCommonClick(this.rootNode,\"kefuNode\",this.onKeFuBtnClick,this)\r\n        kefuBtn.active = true\r\n        Global.UIHelper.addCommonClick(this.rootNode,\"gnx_guanwang\",this.onGuanwangClick,this)\r\n        Global.UIHelper.addCommonClick(this.rootNode,\"loadingNode/restore\",this.onRestoreClick,this)\r\n        let loadingNode = this.rootNode.getChildByName(\"loadingNode\");\r\n        let loadingBar = loadingNode.getChildByName(\"loadingBar\")\r\n        this.restoreNode = loadingNode.getChildByName(\"restore\")\r\n        let checkNode = loadingNode.getChildByName(\"checkNode\")\r\n        let infoLabel = checkNode.getChildByName(\"infoLabel\")\r\n        let versionNode = this.rootNode.getChildByName(\"versionLabel\");\r\n        if (this.restoreNode){\r\n            this.restoreNode.active = false;\r\n        }\r\n        loadingBar.active = false;\r\n        this.progressLabel = loadingBar.getChildByName(\"img_dhg\").getChildByName(\"lbPer\").getComponent(cc.Label);\r\n        this.infoLabel = infoLabel.getComponent(cc.Label);\r\n        this.loadingBar = loadingBar;\r\n        this.versionLabel = versionNode.getComponent(cc.Label)\r\n        this.setNativeVersion()\r\n        this.buttonTouch = false\r\n\r\n    }\r\n\r\n    private onGuanwangClick()\r\n    {\r\n        let url = Global.Setting.Urls.downLoadUrl\r\n        cc.sys.openURL(url);\r\n    }\r\n    //手动修复按钮\r\n    private onRestoreClick()\r\n    {\r\n        if(this.buttonTouch == false){\r\n            this.buttonTouch = true\r\n            Global.UI.show(\"WndMessageBox\", \"是否开始版本修复？\", 1, ()=>{\r\n                this.buttonTouch = false\r\n                let hotUpdateProxy =<AppHotUpdateProxy>this.facade.retrieveProxy(AppHotUpdateProxy.NAME);\r\n                hotUpdateProxy.restartCheckUpdate(false);\r\n            }, ()=>{\r\n                this.buttonTouch = false\r\n            });\r\n        }\r\n    }\r\n    onKeFuBtnClick(){\r\n        //打开客服界面\r\n        // let url:string = \"https://e19.entrychat.com/chat/chatClient/chatbox.jsp?companyID=1137722&configID=2481&jid=1881369425&s=1\";\r\n        // cc.sys.openURL(url);\r\n\r\n        // if (Global.Setting.loginKeFuType == 3){\r\n        //     Global.ChatServer.serverType = ServiceEntranceType.LoginService;\r\n        //     Global.ChatServer.otherSetting(null);\r\n        // }else {\r\n        //     cc.sys.openURL(Global.Toolkit.DealWithUrl(Global.Setting.Urls.onlineService));\r\n        // }\r\n        Global.ModelManager.getModel(\"ServicerModel\").enterCustomerService(CustomerEntranceType.LoginService);\r\n        \r\n    }\r\n\r\n    setCheckLabelString(label: string) {\r\n        if(this.infoLabel && this.infoLabel.node && this.infoLabel.node.isValid)\r\n            this.infoLabel.string = label;\r\n    }\r\n\r\n    setProgressLabelString(label: string) {\r\n        if(this.progressLabel && this.progressLabel.node && this.progressLabel.node.isValid)\r\n            this.progressLabel.string = label;\r\n    }\r\n\r\n    setNativeVersion(){\r\n        let version =  Global.Toolkit.genLoadingAppInfo();\r\n       // let version =  Global.HotUpdateManager.hallNewVersion;\r\n        Logger.log(\"----------------version------------\" + version)\r\n        if(this.versionLabel && cc.isValid(this.versionLabel.node)){\r\n            this.versionLabel.string = version\r\n        }\r\n    }\r\n\r\n    onTDunInitFinish(){\r\n        this.setNativeVersion()\r\n    }\r\n\r\n    \r\n\r\n    updateAppInfo()\r\n    {\r\n        let version = Global.Toolkit.genAppInfo();\r\n        //let version = Global.HotUpdateManager.hallNewVersion\r\n        if(this.versionLabel && this.versionLabel.node.isValid)\r\n            this.versionLabel.string = version;\r\n    }\r\n\r\n    updateLoadingBar(per: number) {\r\n        if(this.loadingBar == null || !this.loadingBar.isValid)\r\n            return;\r\n        let particle = this.loadingBar.getChildByName(\"particle\")\r\n        if (per > 0) {\r\n            this.loadingBar.active = true;\r\n            if(this.restoreNode && this.restoreNode.active == false){\r\n                this.restoreNode.active = true;\r\n            }\r\n            let progressNode = this.loadingBar.getChildByName(\"bar_1_1\")\r\n            // let progressBar = progressNode.getComponent(cc.ProgressBar)\r\n            // progressBar.progress = per\r\n            let img_dhg = this.loadingBar.getChildByName(\"img_dhg\");\r\n            img_dhg.x = progressNode.x+progressNode.width*per\r\n            progressNode.getComponent(cc.Sprite).fillRange = per\r\n            if (particle.active == false) {\r\n                particle.active = true;\r\n            }\r\n            //particle.position = cc.v3(progressNode.x + progressBar.totalLength*per,progressNode.y)\r\n            this.curPer = per;\r\n            this.checkHotUpdateProgress()\r\n            \r\n        }else {\r\n            particle.active = false;\r\n            this.loadingBar.active = false;\r\n            this.restoreNode.active = false;\r\n        }\r\n    }\r\n\r\n    checkHotUpdateProgress(){\r\n        this.clearTimer()\r\n        if (this.curPer > 0 && this.curPer < 1){\r\n            this._timeOut = setTimeout(() => {\r\n                Logger.error(\"updateLoadingBar----网络异常，请重新加载\")\r\n                let hotUpdateProxy =<AppHotUpdateProxy>this.facade.retrieveProxy(AppHotUpdateProxy.NAME);\r\n                hotUpdateProxy.restartCheckUpdate();\r\n            }, 10000);\r\n        }\r\n    }\r\n\r\n    clearTimer(){\r\n        if (this._timeOut) {\r\n            clearTimeout(this._timeOut)\r\n            this._timeOut = null\r\n        }\r\n    }\r\n}\r\n\r\n"]}