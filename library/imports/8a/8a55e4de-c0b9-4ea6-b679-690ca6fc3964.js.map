{"version":3,"sources":["assets\\hall\\scripts\\logic\\core\\component\\WifiComp.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class WifiComp extends cc.Component {\r\n\r\n    stateSpriteArr: cc.Node[] = [];\r\n    EventString = \"\"\r\n    msLabel:cc.RichText;\r\n    onLoad()\r\n    {\r\n        for (let index = 0; index < 3; index++) \r\n        {\r\n            this.stateSpriteArr[index] = cc.find(\"state\"+(index+1),this.node)\r\n            this.stateSpriteArr[index].active = false\r\n        }\r\n        this.msLabel = cc.find(\"msLabel\",this.node).getComponent(cc.RichText);\r\n        this.msLabel.node.active = false;\r\n    }\r\n    init(type)\r\n    {\r\n        if(type == 1)\r\n        {\r\n            this.EventString = GlobalEvent.RefreshHallNetCost\r\n        }\r\n        else if(type == 2)\r\n        {\r\n            this.EventString = GlobalEvent.RefreshGameNetCost\r\n        }\r\n\r\n    }\r\n\r\n    startListen()\r\n    {\r\n        Global.Event.on(this.EventString ,this,this.refreshState)\r\n    }\r\n    refreshState(ms) {\r\n        if(!this.stateSpriteArr || this.stateSpriteArr.length == 0)\r\n        {\r\n            return\r\n        }\r\n        if(ms <= 300)\r\n        {\r\n            this.msLabel.node.color = new cc.Color().fromHEX(\"#9DD500\");\r\n            this.stateSpriteArr[0].active = true\r\n            this.stateSpriteArr[1].active = false\r\n            this.stateSpriteArr[2].active = false\r\n        }\r\n        else if(ms>300 && ms<=700)\r\n        {\r\n            this.msLabel.node.color = new cc.Color().fromHEX(\"#FFE500\");\r\n            this.stateSpriteArr[0].active = false\r\n            this.stateSpriteArr[1].active = true\r\n            this.stateSpriteArr[2].active = false\r\n        }\r\n        else\r\n        {\r\n            this.msLabel.node.color = new cc.Color().fromHEX(\"#FF0000\");\r\n            this.stateSpriteArr[0].active = false\r\n            this.stateSpriteArr[1].active = false\r\n            this.stateSpriteArr[2].active = true\r\n        }\r\n        this.msLabel.node.active = true;\r\n        this.msLabel.string =`<b>${ms}ms</b>`\r\n    }\r\n\r\n    onDestroy()\r\n    {\r\n        Global.Event.off(this.EventString,this,this.refreshState)\r\n        this.stateSpriteArr = []\r\n    }\r\n    // update (dt) {}\r\n}\r\n"]}