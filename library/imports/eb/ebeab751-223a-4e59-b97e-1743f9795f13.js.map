{"version":3,"sources":["assets\\hall\\scripts\\logic\\hall\\ui\\CommissionSys\\CommisionLeftItem.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class CommisionLeftItem extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    BackgroundTxt: cc.Label = null;\r\n   \r\n\r\n    @property(cc.Label)\r\n    CheckTxt: cc.Label = null;\r\n   \r\n    @property(cc.Sprite)\r\n    CheckSprite: cc.Sprite = null;\r\n    @property(cc.Sprite)\r\n    UnCheckSprite: cc.Sprite = null;\r\n    @property(cc.Toggle)\r\n    toggle: cc.Toggle = null;\r\n\r\n    @property(cc.Node)\r\n    Unread: cc.Node = null;\r\n\r\n    data: any;\r\n\r\n    // @property(cc.Sprite)\r\n    // BackGroundSprite:cc.Sprite = null;\r\n\r\n    // @property(cc.Sprite)\r\n    // ClickSprite:cc.Sprite = null;\r\n\r\n    private bgFontSize;\r\n    private checkFontSize;\r\n    private maxCharCount = 6;\r\n\r\n    private atlasPath = \"hall/texture/CommisionIcon/CommisionIcon\";\r\n\r\n    onLoad()\r\n    {\r\n        this.bgFontSize = this.BackgroundTxt.fontSize;\r\n        this.checkFontSize = this.CheckTxt.fontSize ;\r\n        \r\n    }\r\n\r\n    close()\r\n    {\r\n        this.node.active = false\r\n    }\r\n    // update (dt) {}\r\n    public getData() {\r\n        return this.data;\r\n    }\r\n    public onInit(data: any) {\r\n        this.data = data;\r\n        this.initView()\r\n    }\r\n    initView() {\r\n        // this.BackgroundTxt.fontSize = this.bgFontSize;\r\n        // this.CheckTxt.fontSize = this.checkFontSize;\r\n\r\n        this.BackgroundTxt.string =  Global.Toolkit.removeEmoji(this.data.name)\r\n        this.CheckTxt.string = Global.Toolkit.removeEmoji(this.data.name)\r\n        // this.changeBtnSprite(this.BackGroundSprite,this.ClickSprite,this.data.global_task_type);\r\n \r\n        this.SetUnReadActiveState(this.data.task_num > 0)\r\n        this.toggle.isChecked =false\r\n        this.toggle.uncheck()\r\n\r\n        \r\n    }\r\n\r\n    public SetUnReadActiveState(state:boolean)\r\n    {\r\n        this.Unread.active = state\r\n    }\r\n\r\n    private adjustLabelLength(label, fontSize)\r\n    {\r\n        if(label == null)\r\n            return;\r\n        let maxLength = fontSize * this.maxCharCount\r\n        if(label.node.width <= maxLength)\r\n            return;\r\n        label.fontSize = Math.floor(maxLength / label.node.width * fontSize);\r\n    }\r\n\r\n    public SetBackgroundChecked(state:boolean)\r\n    {\r\n        this.CheckSprite.node.active = state\r\n        this.UnCheckSprite.node.active = !state\r\n      \r\n    }\r\n    public SetToggleChecked()\r\n    {\r\n        this.toggle.isChecked =true\r\n        this.toggle.check()\r\n      \r\n    }\r\n\r\n    private changeBtnSprite(bsp:cc.Sprite,csp:cc.Sprite,taskType:number) {\r\n        Global.ResourceManager.loadAutoAtlas(bsp, this.atlasPath, `btn_${taskType}_b`, null, false);\r\n        Global.ResourceManager.loadAutoAtlas(csp, this.atlasPath, `btn_${taskType}_t`, null, false);\r\n    }\r\n   \r\n}\r\n"]}