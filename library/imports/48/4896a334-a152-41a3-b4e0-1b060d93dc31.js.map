{"version":3,"sources":["assets\\hall\\scripts\\logic\\hallcommon\\model\\RechargeModel.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import ModelBase from \"../../../framework/model/ModelBase\";\r\nimport { NetAppface } from \"../../core/net/hall/NetEvent\";\r\nimport RechagreTipModel from \"./RechagreTipModel\";\r\nimport { HallRedSpotType } from \"./HallModel\";\r\nimport { CustomerEntranceType } from \"./ServicerModel\";\r\n\r\nexport default class RechargeModel extends ModelBase {\r\n    public static UpdateHistory = \"UpdateHistory\";\r\n    public static GetPayUrlResult = \"GetPayUrlResult\";\r\n    public static ShowWaitingAnim = \"ShowWaitingAnim\";\r\n    public static ReadyForConfig = \"ReadyForConfig\";\r\n    public static ShowScanCodeView = \"ShowScanCodeView\"\r\n    public chatSpot = false\r\n    public kefuSpot = false\r\n    public static PayType = {\r\n        Vip: \"vippay\",//vip支付\r\n        VipQuickPay: \"vipQuickPay\", //专享闪付\r\n        Wechat: \"wxpay\",//微信支付\r\n        Ali: \"alipay\",//支付宝支付\r\n        Union: \"unionpay\",//银行卡\r\n        Qq: \"qqpay\",//QQ支付\r\n        YunPay: \"yunpay\",//云闪付\r\n        OnlinePay: \"onlineCash\",//收银台\r\n        UnionFast: \"unionFast\",//银联快捷\r\n        RechargeList: \"rechargelist\", //历史记录\r\n        Dpay: \"digpay\",\r\n        ScanCode: \"scanCode\",\r\n        USDT: \"usdtPay\",\r\n        JDPay: \"jdPay\",\r\n        International: \"international\"//海外充值\r\n    }\r\n\r\n    private reqCount = 7;\r\n    private timeOut: any;\r\n\r\n    private payCfgList = [];\r\n    private payCfgMap = {};\r\n\r\n    public hisListPage: number = 1;\r\n    private hisListData: Array<any> = [];\r\n    public hisTotal: number = 0;\r\n    public need_bind_phone = false;\r\n    protected onInit() {\r\n        this.name = \"RechargeModel\";\r\n        Global.Event.on(GlobalEvent.ShowRedSpot, this, this.showRedSpot);\r\n        Global.Event.on(GlobalEvent.CloseRedSpot, this, this.closeRedSpot);\r\n    }\r\n    private showRedSpot(data) {\r\n        let redSpotType = data[1]\r\n        switch (redSpotType) {\r\n            case HallRedSpotType.YunPalyKefu:\r\n                {\r\n                    if (Global.ChatServer.serverType == CustomerEntranceType.QuickPayService) {\r\n                        this.chatSpot = true;\r\n                    } else {\r\n                        this.kefuSpot = true;\r\n                    }\r\n                    break;\r\n                }\r\n        }\r\n        this.event(\"UpdateResSpot\", redSpotType);\r\n    }\r\n\r\n    public closeRedSpot(redSpotType) {\r\n        switch (redSpotType) {\r\n            case HallRedSpotType.YunPalyKefu:\r\n                {\r\n                    if (Global.ChatServer.serverType == CustomerEntranceType.QuickPayService) {\r\n                        this.chatSpot = false;\r\n                    } else {\r\n                        this.kefuSpot = false;\r\n                    }\r\n                    break;\r\n                }\r\n        }\r\n        this.event(\"UpdateResSpot\", redSpotType);\r\n    }\r\n\r\n    public reqGetPayConfig() {\r\n        let device = Global.Toolkit.genDeviceInfo();\r\n        let param = {\r\n            \"device\": device\r\n        }\r\n        Global.HallServer.send(NetAppface.mod, NetAppface.GetNewPayConfig, param, (data) => {\r\n            this.initData(data.new_pay_info);\r\n            this.need_bind_phone = data.need_bind_phone\r\n            this.event(RechargeModel.ReadyForConfig);\r\n        }, null, false, 0);\r\n    }\r\n\r\n    public reqGetUserDownPay(payKey: string, point: number, id: string, attach: string = \"\") {\r\n        if (Global.Toolkit.checkRechargeLimited()) {\r\n            return\r\n        }\r\n        let _index = payKey.indexOf(\"_\");\r\n        let newPayKey = \"\";\r\n        if (_index > -1) {\r\n            newPayKey = payKey.substring(0, _index);\r\n        } else {\r\n            newPayKey = payKey;\r\n        }\r\n        let device = Global.Toolkit.genDeviceInfo();\r\n        let param = {\r\n            \"pay_key\": newPayKey,\r\n            \"price\": point,\r\n            \"pay_type_id\": id,\r\n            \"device\": device,\r\n            \"attach\": attach\r\n        }\r\n        Global.HallServer.send(NetAppface.mod, NetAppface.UserDownPay, param);\r\n    }\r\n\r\n\r\n\r\n\r\n    //通过授权码获取orderStr\r\n    // public reqOrderStrByAuthCode(auth_code:string,order_no:string){\r\n    //     let param = {\r\n    //         \"order_no\": order_no,\r\n    //         \"attach\": auth_code,\r\n    //     }\r\n    //     Global.HallServer.send(NetAppface.mod, NetAppface.UserNewDownPayAttach, param,(data)=>{\r\n    //         let order_id = data.order_id\r\n    //         if (order_id){\r\n    //             this.reqGetPayUrl(order_id)\r\n    //         } else {\r\n    //             Logger.error(\"reqOrderStrByAuthCode order_id error\")\r\n    //         }\r\n    //     });\r\n    // }\r\n\r\n    public reqGetPayUrl(order: string) {\r\n        if (Global.Toolkit.checkRechargeLimited()) {\r\n            return\r\n        }\r\n        let param = {\r\n            \"order_id\": order,\r\n        }\r\n        this.reqGetUrlTimes(param, this.reqCount);\r\n    }\r\n\r\n\r\n    // event 0：拉取成功，1：拉取不到，2：拉取回调异常 \r\n    private reqGetUrlTimes(param: any, times: number) {\r\n        Global.HallServer.send(NetAppface.mod, NetAppface.GetDownPayUrl, param, (data) => {\r\n            times--;\r\n            let url = data.url;\r\n            let tServer = data.tServer\r\n            if (url.startsWith(\"/notice\") && tServer && tServer.length > 0) ///notice开头则为加盾的\r\n            {\r\n                Global.DunHotUpdateUrlSetting.payRouteCfg = data.tServer\r\n                let dunUrl = Global.DunHotUpdateUrlSetting.payeUrl\r\n                if (dunUrl) {\r\n                    data.url = dunUrl + url\r\n                }\r\n            }\r\n            if (url) {\r\n                return this.event(RechargeModel.GetPayUrlResult, 0, data);\r\n            }\r\n            else {\r\n                if (times == 0) {\r\n                    return this.event(RechargeModel.GetPayUrlResult, 1, data);\r\n                }\r\n                this.timeOut = setTimeout(() => {\r\n                    this.reqGetUrlTimes(param, times);\r\n                }, 1500);\r\n            }\r\n        }, (data) => {\r\n            this.event(RechargeModel.GetPayUrlResult, 2, data);\r\n        }, false);\r\n    }\r\n\r\n    public reqGetUserPayList(next: boolean = false) {\r\n        if (next) {\r\n            if (this.hisListData.length >= this.hisTotal) {\r\n                Global.UI.fastTip(\"无更多信息\")\r\n                return;\r\n            }\r\n            this.hisListPage++;\r\n        } else {\r\n            this.hisListPage = 1;\r\n        }\r\n        let listCount = this.hisTotal - (this.hisListPage - 1) * 6 > 6 ? 6 : this.hisTotal - (this.hisListPage - 1) * 6\r\n        let param = {\r\n            \"page\": this.hisListPage,\r\n            \"limit\": listCount == 0 ? 6 : listCount,\r\n        }\r\n        Global.Event.event(GlobalEvent.SHOW_NET_WAITING, \"reqGetUserPayList\", 3);\r\n        Global.HallServer.send(NetAppface.mod, NetAppface.GetUserPayList, param, (res) => {\r\n            Global.Event.event(GlobalEvent.HIDE_NET_WAITING, \"reqGetUserPayList\");\r\n            if (res.list.length < 6) {\r\n                this.hisTotal = (this.hisListPage - 1) * 6 + res.list.length;\r\n                if (res.list.length == 0) {\r\n                    this.hisListPage--;\r\n                    this.hisTotal = this.hisListData.length;\r\n                }\r\n            } else {\r\n                this.hisTotal = res.total;\r\n            }\r\n            let list = res.list || [];\r\n            if (!list) {\r\n                return;\r\n            }\r\n            if (this.hisListPage == 1) {\r\n                this.hisListData = list;\r\n            }\r\n            else {\r\n                if (this.hisListData.length > this.hisTotal)\r\n                    return;\r\n                this.hisListData = this.hisListData.concat(list);\r\n            }\r\n            this.event(RechargeModel.UpdateHistory);\r\n        });\r\n    }\r\n\r\n    public getHisListData() {\r\n        return this.hisListData;\r\n    }\r\n\r\n    public reqGetAllPayList() {\r\n        let param = {\r\n        }\r\n        Global.HallServer.send(NetAppface.mod, NetAppface.GetAllPayPutList, param, null, null, false);  // 轮播 数据界面缓存 关闭清空\r\n    }\r\n\r\n    /**\r\n     * 'key1': [data1, data2], 'key2': []\r\n     * @param data \r\n     */\r\n    public initData(data) {\r\n        this.payCfgMap = {};\r\n        this.payCfgList = [];\r\n        if (data && !Global.Toolkit.isEmptyObject(data)) {\r\n            let isvippay = false;\r\n            data.forEach(e => {\r\n                if (!this.payCfgMap[e.pay_key]) {\r\n                    this.payCfgMap[e.pay_key] = [];\r\n                    this.payCfgList.push(e);    // 只用于左边页签，不需要全部的e\r\n                }\r\n                if (e.pay_key == \"vippay\") {\r\n                    isvippay = true;\r\n                    var RechagreTipModel = <RechagreTipModel>Global.ModelManager.getModel(\"RechagreTipModel\")\r\n                    RechagreTipModel.initData(e.sale_num);\r\n                }\r\n                this.payCfgMap[e.pay_key].push(e);\r\n            });\r\n\r\n            if(!isvippay){  \r\n                //如果没有公司入账这条数据，就默认显示0，避免出现udf的情况\r\n                var RechagreTipModel = <RechagreTipModel>Global.ModelManager.getModel(\"RechagreTipModel\")\r\n                RechagreTipModel.initData(0);\r\n            }\r\n            //增加充值列表\r\n            // let rechargeData = {\r\n            // pay_num_list:[10, 30, 50, 100, 200, 300, 500, 1000],\r\n            // pay_key: \"rechargelist\",\r\n            // name: \"充值记录\",\r\n            // sale_status: 0,\r\n            // sale_text: \"\",\r\n            // text: \"支付宝快捷支付，方便省心！\",\r\n            // text2: \"若充值未及时到账，请联系在线客服协助\",}\r\n            // if (!this.payCfgMap[rechargeData.pay_key]){\r\n            //     this.payCfgMap[rechargeData.pay_key] = [];\r\n            //     this.payCfgList.push(rechargeData);    // 只用于左边页签，不需要全部的e\r\n            // }\r\n            // this.payCfgMap[rechargeData.pay_key].push(rechargeData);\r\n        }\r\n    }\r\n\r\n    public getPayListData() {\r\n        let list = this.payCfgList;\r\n        if (!list || Global.Toolkit.isEmptyObject(list)) {\r\n            Logger.error(\"支付配置为空\");\r\n            return [];\r\n        }\r\n        return list;\r\n    }\r\n\r\n    public getPayMapData(key?: string) {\r\n        let map = this.payCfgMap;\r\n        if (key && map[key]) {\r\n            return map[key];\r\n        }\r\n        return map;\r\n    }\r\n\r\n    protected onClear() {\r\n        this.clearReqTimeout();\r\n    }\r\n\r\n    public clearReqTimeout() {\r\n        if (this.timeOut) {\r\n            clearTimeout(this.timeOut);\r\n        }\r\n    }\r\n\r\n    public reqUserUnionPay(type: number, point: number, name: string) {\r\n        if (Global.Toolkit.checkRechargeLimited()) {\r\n            return\r\n        }\r\n        let param = {\r\n            \"type\": type,\r\n            \"point\": point,\r\n            \"name\": name,\r\n        }\r\n        Global.HallServer.send(NetAppface.mod, NetAppface.UserUnionPay, param, null, null, true);\r\n    }\r\n}"]}