{"version":3,"sources":["assets\\hall\\scripts\\logic\\hall\\ui\\Spread\\WndSpreadCenter.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import WndBase from \"../../../core/ui/WndBase\";\r\nimport AppHelper from \"../../../core/tool/AppHelper\";\r\nimport SpreadModel from \"../../../hallcommon/model/SpreadModel\";\r\nimport { SpreadEvent } from \"./SpreadEvent\";\r\nimport CustomAppInfo from \"../../../hallcommon/app/CustomApp\";\r\n\r\n\r\nexport default class WndSpreadCenter extends WndBase\r\n{\r\n    private qrNode:cc.Node;\r\n    SpreadModel: SpreadModel;\r\n    protected onInit() \r\n    {\r\n        this.name = \"WndSpreadCenter\";\r\n        this.layer = Global.UI.PopLayer;\r\n        this.resPath = \"hall/prefabs/ui/SpreedCenterUI\";\r\n    } \r\n\r\n    protected initView()\r\n    {\r\n        this.qrNode = this.getChild(\"qrNode\");\r\n        this.addCommonClick(\"close\", this.close, this);\r\n\r\n        let config = Global.customApp.getAppConfig()\r\n        if (config && config.qrcodePos){\r\n            this.qrNode.setPosition(cc.v2(config.qrcodePos[0],config.qrcodePos[1]));\r\n        }\r\n        else if(config && config.qrcodeX){\r\n            this.qrNode.x = config.qrcodeX\r\n        }\r\n        \r\n        this.SpreadModel = <SpreadModel>Global.ModelManager.getModel(\"SpreadModel\");\r\n        let widget:cc.Widget = this.getComponent(\"close\", cc.Widget)\r\n        if(widget != null)\r\n        {\r\n            widget.target = cc.Canvas.instance.node;\r\n        }\r\n\r\n        //this.tipsLabel = this.getComponent(\"tips\", cc.Label);\r\n        //this.tipsLabel.string = \"申请成为平台合伙人\\n联系微信\" + Global.Setting.spreadWx;\r\n\r\n        //this.wxNode.active = AppHelper.enableWxShare;\r\n        //this.momentNode.active = AppHelper.enableWxShare;\r\n        \r\n    }\r\n\r\n    onOpen(args)\r\n    {\r\n        \r\n        let url = Global.Setting.Urls.inviteUrl;\r\n        url = this.SpreadModel.Url || url\r\n        Global.Toolkit.initQRCode(this.qrNode, url, 5);\r\n    }\r\n    \r\n\r\n    onClose()\r\n    {\r\n        \r\n    }\r\n\r\n    private onServiceClick()\r\n    {\r\n        Global.NativeEvent.copyTextToClipboard(Global.Setting.spreadWx, this.copyTextToClipboardCallBack.bind(this));\r\n    }\r\n\r\n    private copyTextToClipboardCallBack(retStr){\r\n        if (retStr.result == 0) {\r\n            Global.UI.fastTip(\"复制成功\");\r\n                Global.NativeEvent.awakeWechatApp(this.awakeWeChatCallBack.bind(this));\r\n        }else {\r\n            Global.UI.fastTip(\"复制失败\");\r\n        }\r\n    }\r\n\r\n\r\n    private awakeWeChatCallBack(retStr){\r\n        if (retStr.result == 0) {\r\n        } else {\r\n            let ret = retStr.result\r\n            if (ret == -1) {\r\n                Logger.log(\"请先安装微信\");\r\n                Global.UI.showSingleBox(\"请先安装微信\", null);\r\n            } else {\r\n                Logger.log(\"打开微信失败\");\r\n                Global.UI.showSingleBox(\"打开微信失败\", null);\r\n            }\r\n        }\r\n    }\r\n\r\n    private onWxFriendClick()\r\n    {\r\n        this.wxShare(0, Global.Setting.wxFirendShareTitle, Global.Setting.wxFirendShareContent);\r\n    }\r\n\r\n    private onMomentClick()\r\n    {\r\n        this.wxShare(1, Global.Setting.wxMomentShareTitle, Global.Setting.wxMomentShareContent);\r\n    }\r\n\r\n    private wxShare(type, title, content)\r\n    {\r\n        if(!AppHelper.enableWxShare)\r\n            return;\r\n        // if(!AppHelper.getAppWXShareEnable())\r\n        //     return;\r\n        let shareUrl = Global.Setting.Urls.inviteUrl;\r\n        shareUrl = this.SpreadModel.Url || shareUrl\r\n       \r\n        Global.NativeEvent.checkWXInstall((result)=>\r\n        {\r\n            if(result.result == 0)\r\n            {\r\n                Global.NativeEvent.shareWX(type, 5, \r\n                    title,\r\n                    Global.Setting.wxIconUrl, \r\n                    shareUrl, \r\n                    content, \r\n                    null)\r\n            }\r\n            else\r\n            {\r\n                Global.UI.fastTip(\"请安装微信\");\r\n            }\r\n        })\r\n    }\r\n\r\n}"]}