{"version":3,"sources":["assets\\hall\\scripts\\logic\\hall\\ui\\waiting\\WndNetReconnect.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,oDAAgE;AAChE,yDAAoD;AAEpD,UAAU;AACV;IAA6C,mCAAO;IAApD;QAAA,qEAoEC;QAjEW,aAAO,GAAG,CAAC,CAAC;QACZ,sBAAgB,GAAG,CAAC,CAAC;;IAgEjC,CAAC;IA7Da,gCAAM,GAAhB;QAEI,IAAI,CAAC,IAAI,GAAG,iBAAiB,CAAC;QAC9B,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC;QACjC,IAAI,CAAC,OAAO,GAAG,8BAA8B,CAAC;QAC9C,IAAI,CAAC,WAAW,GAAG,qBAAW,CAAC,IAAI,CAAC;IACxC,CAAC;IAES,kCAAQ,GAAlB;QAEI,IAAI,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;QACvC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC;QACpB,MAAM,CAAC,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC;QAC/C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC;IACzD,CAAC;IAGS,gCAAM,GAAhB;QAEI,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC,KAAK,CAAC,cAAc,CAAC,CAAA;QACjF,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;QACpC,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,EAAE,CAAC,EAAE,CAAC,SAAS,CAAC,mBAAmB,EAAE,IAAI,CAAC,gBAAgB,EAAE,MAAM,CAAC,OAAO,CAAC,oBAAoB,CAAC,GAAG,KAAK,CAAC;QACjI,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,qBAAW,CAAC,sBAAsB,EAAE,IAAI,EAAE,IAAI,CAAC,sBAAsB,CAAC,CAAC;IAC3F,CAAC;IAES,iCAAO,GAAjB;QAEI,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,SAAS,CAAC,sBAAsB,EAAE,CAAC;QACxC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,qBAAW,CAAC,sBAAsB,EAAE,IAAI,EAAE,IAAI,CAAC,sBAAsB,CAAC,CAAC;IAC5F,CAAC;IAES,mCAAS,GAAnB;QAEI,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACjB,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,qBAAW,CAAC,sBAAsB,EAAE,IAAI,EAAE,IAAI,CAAC,sBAAsB,CAAC,CAAC;IAC5F,CAAC;IAEO,gDAAsB,GAA9B,UAA+B,KAAK;QAEhC,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;IAClC,CAAC;IAEO,oCAAU,GAAlB;QAEI,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QAC3B,IAAI,MAAM,GAAG,EAAE,CAAA;QACf,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAC3B;YACI,MAAM,IAAI,GAAG,CAAA;SAChB;QACD,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,EAAE,CAAC,EAAE,CAAC,SAAS,CAAC,mBAAmB,EAAE,IAAI,CAAC,gBAAgB,EAAE,MAAM,CAAC,OAAO,CAAC,oBAAoB,CAAC,GAAG,MAAM,CAAC;QAElI,IAAG,IAAI,CAAC,OAAO,GAAG,EAAE,EACpB;YACI,IAAI,CAAC,KAAK,EAAE,CAAC;SAChB;IACL,CAAC;IACL,sBAAC;AAAD,CApEA,AAoEC,CApE4C,iBAAO,GAoEnD","file":"","sourceRoot":"/","sourcesContent":["import WndBase, { DestoryType } from \"../../../core/ui/WndBase\";\r\nimport GlobalEvent from \"../../../core/GlobalEvent\";\r\n\r\n//网络请求弹出界面\r\nexport default class WndNetReconnect extends WndBase\r\n{\r\n    private tipsLabel:cc.Label;\r\n    private counter = 0;\r\n    private curReconnectTime = 0;\r\n\r\n\r\n    protected onInit()\r\n    {\r\n        this.name = \"WndNetReconnect\";\r\n        this.layer = Global.UI.TipsLayer;\r\n        this.resPath = \"hall/prefabs/ui/NetReconnect\";\r\n        this.destoryType = DestoryType.None;\r\n    }\r\n\r\n    protected initView()\r\n    {\r\n        let bgNode = this.getChild(\"black_bg\");\r\n        bgNode.width = 1600;\r\n        bgNode.height = cc.Canvas.instance.node.height;\r\n        this.tipsLabel = this.getComponent(\"tips\", cc.Label);\r\n    }\r\n\r\n\r\n    protected onOpen()\r\n    {\r\n        this.counter = 0;\r\n        this.curReconnectTime = 1;\r\n        this.tipsLabel.schedule(this.onSchedule.bind(this), 0.5, cc.macro.REPEAT_FOREVER)\r\n        this.node.runAction(cc.fadeIn(0.5));\r\n        this.tipsLabel.string = cc.js.formatStr(\"正在重新连接（%d/%d），请稍后\", this.curReconnectTime, Global.Setting.socketReconnectTimes) + \"...\";\r\n        Global.Event.on(GlobalEvent.UPDATE_RECONNECT_COUNT, this, this.onReconnectCountUpdate);\r\n    }\r\n\r\n    protected onClose()\r\n    {\r\n        this.counter = 0;\r\n        this.tipsLabel.unscheduleAllCallbacks();\r\n        Global.Event.off(GlobalEvent.UPDATE_RECONNECT_COUNT, this, this.onReconnectCountUpdate);\r\n    }\r\n\r\n    protected onDispose()\r\n    {\r\n        this.counter = 0;\r\n        Global.Event.off(GlobalEvent.UPDATE_RECONNECT_COUNT, this, this.onReconnectCountUpdate);\r\n    }\r\n\r\n    private onReconnectCountUpdate(times)\r\n    {\r\n        this.curReconnectTime = times;\r\n    }\r\n\r\n    private onSchedule()\r\n    {\r\n        this.counter++;\r\n        let mod = this.counter % 4;\r\n        let subStr = \"\"\r\n        for(let i = 0; i < mod; i++)\r\n        {\r\n            subStr += \".\"\r\n        }\r\n        this.tipsLabel.string = cc.js.formatStr(\"正在重新连接（%d/%d），请稍后\", this.curReconnectTime, Global.Setting.socketReconnectTimes) + subStr;\r\n\r\n        if(this.counter > 50)\r\n        {\r\n            this.close();\r\n        }\r\n    }\r\n}"]}