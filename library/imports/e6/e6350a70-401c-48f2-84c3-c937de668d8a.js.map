{"version":3,"sources":["assets\\hall\\scripts\\framework\\model\\ModelBase.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,4DAAuD;AAEvD;;;GAGG;AACH;IAAuC,6BAAe;IAKlD;QAAA,YACI,iBAAO,SAKV;QAJG,KAAI,CAAC,IAAI,GAAG,WAAW,CAAC;QACxB,KAAI,CAAC,IAAI,EAAE,CAAC;QAEZ,MAAM,CAAC,YAAY,CAAC,aAAa,CAAC,KAAI,CAAC,CAAC;;IAC5C,CAAC;IAED;;OAEG;IACO,wBAAI,GAAd;QACI,IAAI,CAAC,MAAM,EAAE,CAAC;IAClB,CAAC;IAKD,sBAAW,2BAAI;QAHf;;WAEG;aACH;YAEI,OAAO,IAAI,CAAC,IAAI,CAAC;QACrB,CAAC;;;OAAA;IAED;;OAEG;IACI,yBAAK,GAAZ;QACI,IAAI,CAAC,OAAO,EAAE,CAAC;IACnB,CAAC;IAED;;OAEG;IACI,2BAAO,GAAd;QACI,IAAI,CAAC,SAAS,EAAE,CAAC;IACrB,CAAC;IAED;;;OAGG;IACO,0BAAM,GAAhB;QACI,0BAA0B;IAC9B,CAAC;IAED;;OAEG;IACO,2BAAO,GAAjB;IAEA,CAAC;IAED;;OAEG;IACO,6BAAS,GAAnB;IAEA,CAAC;IACL,gBAAC;AAAD,CA/DA,AA+DC,CA/DsC,yBAAe,GA+DrD","file":"","sourceRoot":"/","sourcesContent":["import EventDispatcher from \"../event/EventDispatcher\";\r\n\r\n/**\r\n * 所有数据模块的基类,\r\n * 注意: 新建的数据模块请在onInit()函数中指定数据模块的名字, 格式: this._name = \"ModelBase\";\r\n */\r\nexport default class ModelBase extends EventDispatcher\r\n{\r\n    //模块名字\r\n    protected name:string;\r\n\r\n    constructor() {\r\n        super()\r\n        this.name = \"ModelBase\";\r\n        this.init();\r\n\r\n        Global.ModelManager.registerModel(this);\r\n    }\r\n\r\n    /**\r\n     * 初始化,创建时调用\r\n     */\r\n    protected init() {\r\n        this.onInit();\r\n    }\r\n\r\n    /**\r\n     * get 方法获取模块名\r\n     */\r\n    public get Name()\r\n    {\r\n        return this.name;\r\n    }\r\n\r\n    /**\r\n     * 清理数据\r\n     */\r\n    public clear() {\r\n        this.onClear();\r\n    }\r\n\r\n    /**\r\n     * 数据模块销毁\r\n     */\r\n    public destroy() {\r\n        this.onDestroy();\r\n    }\r\n\r\n    /**\r\n     * 初始化时的回调\r\n     * 注意:请在onInit()中给name赋值\r\n     */\r\n    protected onInit() {\r\n        //this.name = \"ModelBase\";\r\n    }\r\n\r\n    /**\r\n     * 数据清理时的回调\r\n     */\r\n    protected onClear() {\r\n\r\n    }\r\n\r\n    /**\r\n     * 数据模块销毁时的回调\r\n     */\r\n    protected onDestroy() {\r\n\r\n    }\r\n}"]}