{"version":3,"sources":["assets\\hall\\scripts\\framework\\libs\\cryptoTs\\mode\\ECBEncryptor.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,uEAAsE;AAEtE;IAAkC,gCAAwB;IAA1D;;IAcA,CAAC;IAbG;;;;;;;;;OASG;IACI,mCAAY,GAAnB,UAAoB,KAAoB,EAAE,MAAc;QACpD,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IAC7C,CAAC;IACL,mBAAC;AAAD,CAdA,AAcC,CAdiC,mDAAwB,GAczD;AAdY,oCAAY","file":"","sourceRoot":"/","sourcesContent":["import { BlockCipherModeAlgorithm } from './BlockCipherModeAlgorithm';\r\n\r\nexport class ECBEncryptor extends BlockCipherModeAlgorithm {\r\n    /**\r\n     * Processes the data block at offset.\r\n     *\r\n     * @param words The data words to operate on.\r\n     * @param offset The offset where the block starts.\r\n     *\r\n     * @example\r\n     *\r\n     *     mode.processBlock(data.words, offset);\r\n     */\r\n    public processBlock(words: Array<number>, offset: number) {\r\n        this._cipher.encryptBlock(words, offset);\r\n    }\r\n}"]}