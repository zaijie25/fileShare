{"version":3,"sources":["assets\\ermj\\Ermj\\scripts\\subView\\ErmjMahjongSelfPlayView.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import ErmjBaseView from \"./ErmjBaseView\";\r\nimport ErmjMahjongHandView from \"./mahjong/ErmjMahjongHandView\";\r\nimport { ErmjAudioConst } from \"../data/ErmjPathHelper\";\r\nimport ErmjWinListTipsView from \"./ErmjWinListTipsView\";\r\nimport ErmjGameConst from \"../data/ErmjGameConst\";\r\n\r\nexport default class ErmjMahjongSelfPlayView extends ErmjBaseView{\r\n    private touchLayer: cc.Node;\r\n    private playTips: cc.Node;\r\n    private selectMj: ErmjMahjongHandView;      // 选中\r\n    private playMj: ErmjMahjongHandView;        // 出牌\r\n    private selfSelectSign: cc.Node;\r\n    \r\n    /** 显示在用的麻将子数组 不包括摸牌区域那张 发牌时有14张*/\r\n    private mjHandList: ErmjMahjongHandView[] = [];\r\n    /** 未使用的麻将子数组 最多14 */\r\n    private unusedMjList: ErmjMahjongHandView[] = [];\r\n    /** 摸牌区域那张麻将子 发牌阶段需要保证为null */\r\n    private lastDealMjItem: ErmjMahjongHandView = null;\r\n    /** 记录13张手牌的等间距排列的位置 摸牌那张取最后一张位置作偏移*/\r\n    private rawMjPosList: cc.Vec3[] = [];\r\n    private touchEnable: boolean = false;\r\n\r\n    public winTipsView: ErmjWinListTipsView;\r\n    private tingLayer: cc.Node;\r\n    private isReadyTing: boolean = false;\r\n    private tingData: any = {};\r\n\r\n    constructor(node: cc.Node){\r\n        super();\r\n        this.setNode(node);\r\n    }\r\n\r\n    protected initView(){\r\n        this.touchLayer = this.getChild(\"touchLayer\");\r\n        this.touchLayer.width = cc.Canvas.instance.node.width;\r\n        ErmjGameConst.addCommonClick(this.touchLayer, \"\", ()=>{\r\n            this.cancelReadyTing();\r\n            this.resetSelectMj();\r\n        }, this, cc.Button.Transition.NONE);\r\n\r\n        let selectLayer = this.getChild(\"selectLayer\");\r\n        selectLayer.on(cc.Node.EventType.TOUCH_START, this.touchStart, this);  // selectLayer大小要固定 暂不扩展多选\r\n\r\n        this.playTips = this.getChild(\"callPlayTips\");\r\n        this.playTips.active = false;\r\n        this.selfSelectSign = this.getChild(\"selfSelectSign\");\r\n        this.selfSelectSign.active = false;\r\n\r\n        this.tingLayer = this.getChild(\"tingLayer\");\r\n        this.tingLayer.active = false;\r\n        this.winTipsView = new ErmjWinListTipsView(this.getChild(\"winListTipsView\"));\r\n        this.winTipsView.active = false;\r\n\r\n        this.initMjList();\r\n    }\r\n\r\n    private initMjList(){\r\n        let handRoot = this.getChild(\"hand\");\r\n        let copyMjNode = this.getChild(\"hand/mahjongHandView\");\r\n        copyMjNode.active = true;\r\n        let start = copyMjNode.position;\r\n        let view = new ErmjMahjongHandView(copyMjNode);\r\n        view.active = false;\r\n        this.unusedMjList.push(view);\r\n        this.rawMjPosList.push(start);\r\n        for (let i = 0; i < this.Define.HandMjMaxCount; i++){\r\n            let node = cc.instantiate(copyMjNode);\r\n            node.setParent(handRoot);\r\n            node.active = true;\r\n            let pos = start.add(this.Define.SelfHandMahjongSpace.mul(i + 1));       // (0, 0) + (10, 5) * i\r\n            this.rawMjPosList.push(pos);            // 记录排列的14个位置\r\n            let view = new ErmjMahjongHandView(node);\r\n            view.active = false;\r\n            this.unusedMjList.push(view);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 发牌\r\n     * @param count 一次摸几张\r\n     * @param valueArr 牌值数组 元素空代表暗牌\r\n     */\r\n    public dealHandMj(count: number = 1, valueArr: number[] = []){\r\n        for (let i = 0; i< count; i++){\r\n            let mjItem = this.unusedMjList.pop();\r\n            if (mjItem){\r\n                mjItem.active = true;\r\n                let index = this.mjHandList.length;\r\n                mjItem.sortIndex = index;\r\n                mjItem.isOut = false;\r\n                if (valueArr[index]){\r\n                    mjItem.mahjongValue = valueArr[index];\r\n                    mjItem.isFront = true;\r\n                }\r\n                else{\r\n                    mjItem.isFront = false;\r\n                }\r\n                this.mjHandList.push(mjItem);\r\n                mjItem.node.setPosition(this.rawMjPosList[index]);\r\n            }\r\n            else{\r\n                console.error(\"dealHandMj this.unusedMjList.pop() == null\");\r\n                break;\r\n            }\r\n        }\r\n        this.tingLayer.active = false;\r\n        this.touchEnable = true;\r\n    }\r\n\r\n    /** 准备出牌 */\r\n    public readyForOut(value: number){\r\n        this.touchEnable = true;\r\n        if (this.lastDealMjItem)        // 摸了牌直接准备完毕\r\n            return;\r\n        \r\n        this.touchEnable = false;\r\n        this.resetSelectMj();\r\n        let mjItem: ErmjMahjongHandView;\r\n        if (value){\r\n            mjItem = this.findMjItemByValue(value);\r\n            this.mjHandList.splice(mjItem.sortIndex, 1);\r\n            this.sortCardDirectly(false);\r\n        }\r\n        else{\r\n            mjItem = this.mjHandList.pop();\r\n        }\r\n\r\n        this.lastDealMjItem = mjItem;\r\n        let index = this.mjHandList.length;\r\n        this.lastDealMjItem.sortIndex = index;\r\n        let rawPos = this.rawMjPosList[index - 1];\r\n        mjItem.node.setPosition(rawPos.add(this.Define.LastOneDealOffset[0])); \r\n        \r\n        this.touchEnable = true;\r\n    }\r\n\r\n    /**\r\n     * 摸牌 轮次摸牌 目前只支持摸一张\r\n     * @param value 牌值\r\n     */\r\n    public drawHandMj(value: number){\r\n        let mjItem = this.unusedMjList.pop();\r\n        if (mjItem){\r\n            this.touchEnable = false;\r\n            mjItem.active = true;\r\n            mjItem.isOut = false;\r\n            if (value){\r\n                mjItem.isFront = true;\r\n                mjItem.mahjongValue = value;\r\n            }\r\n            else{\r\n                mjItem.isFront = false;\r\n            }\r\n            if (this.lastDealMjItem){            // 理论上是不会进来的\r\n                console.error(\"error drawHandMj this.recycleLastDealMj\")\r\n                this.recycleLastDealMj();\r\n            }\r\n            this.lastDealMjItem = mjItem;\r\n            let index = this.mjHandList.length;\r\n            this.lastDealMjItem.sortIndex = index;\r\n            let rawPos = this.rawMjPosList[index - 1] || cc.Vec3.ZERO;      // debug 退出时概率报错 增加容错\r\n            let endPos = rawPos.add(this.Define.LastOneDealOffset[0]);\r\n            mjItem.doDraw(endPos, 0.2);\r\n            Game.Component.scheduleOnce(()=>{\r\n                this.touchEnable = true;\r\n            }, 0.2);\r\n        }\r\n        else{\r\n            console.error(\"error drawHandMj this.unusedMjList.pop() == null\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 玩家补花\r\n     * @param outArr 花牌\r\n     * @param inArr 换回来的牌\r\n     * @param isRoundDeal 是否轮次摸牌、开杠摸牌\r\n     */\r\n    public changeFlower(outArr: number[], inArr: number[]){\r\n        this.resetSelectMj();\r\n        this.touchEnable = false;\r\n        let count = 0;\r\n        let inCount = inArr.length;\r\n        let outCount = outArr.length;\r\n        if (this.lastDealMjItem){           // 摸牌阶段摸到花牌\r\n            if (inCount > 0){\r\n                let index = outArr.indexOf(this.lastDealMjItem.mahjongValue);\r\n                if (index > -1){\r\n                    this.lastDealMjItem.doChangeFlower(inArr[index], 0.2, 0.2);\r\n                }\r\n            }\r\n            else{\r\n                this.lastDealMjItem.doChangeFlower(0, 0.2, 0.2);\r\n            }\r\n            count += 1;\r\n        }\r\n        else{        // 发牌时候摸到花牌, 发牌阶段this.lastDealMjItem = null\r\n            if (inCount > 0){\r\n                for(let i = 0; i < this.mjHandList.length; i++){\r\n                    let item = this.mjHandList[i];\r\n                    let index = outArr.indexOf(item.mahjongValue);      // 花牌唯一此处无须删除\r\n                    if (index > -1){\r\n                        count ++;\r\n                        item.doChangeFlower(inArr[index], 0.2, 0.2);\r\n                    }\r\n                    if (count == outCount)     // 补花完毕\r\n                        break;\r\n                }\r\n            }\r\n            else{\r\n                for(let i = this.mjHandList.length - outCount; i < this.mjHandList.length; i++){\r\n                    let item = this.mjHandList[i];\r\n                    item.doChangeFlower(0, 0.2, 0.2);      // 0.2消失 0.2等待 0.2出现\r\n                }\r\n            }\r\n        }\r\n        \r\n        Game.Component.scheduleOnce(()=>{   // 补花后整理手牌\r\n            if(!this.lastDealMjItem){\r\n                this.sortCardDirectly();\r\n                this.touchEnable = true;        // 发牌时补完花打开触摸, 摸牌补花时开启走readyForOut\r\n            }\r\n        }, 0.71);\r\n    }\r\n    \r\n    /** 听牌 */\r\n    public onTing(){\r\n        // 听牌后恢复 打开遮罩层\r\n        this.enableAllMjTouch();\r\n        this.tingLayer.active = true;\r\n        this.isReadyTing = false;       // 取消准备听状态\r\n        this.resetSelectMj();\r\n    }\r\n\r\n    private enableAllMjTouch(){\r\n        if(this.lastDealMjItem){\r\n            this.lastDealMjItem.setTouchEnable(true);\r\n        }\r\n        this.mjHandList.forEach(mjItem=>{\r\n            mjItem.setTouchEnable(true);\r\n        })\r\n    }\r\n\r\n    /** 是否准备出牌听 */\r\n    public onTingChooseSwitch(isReadyTing: boolean, tingData: any){\r\n        this.resetSelectMj();\r\n        this.isReadyTing = isReadyTing;\r\n        this.tingData = tingData;\r\n        if (this.isReadyTing && this.tingData.ting_items){\r\n            let tingMap = this.tingData.ting_items;\r\n            if(this.lastDealMjItem){\r\n                if (tingMap[this.lastDealMjItem.mahjongValue])\r\n                    this.lastDealMjItem.setTouchEnable(true);\r\n                else{\r\n                    this.lastDealMjItem.setTouchEnable(false);      \r\n                }\r\n            }\r\n            this.mjHandList.forEach(mjItem=>{\r\n                if (tingMap[mjItem.mahjongValue]){\r\n                    mjItem.setTouchEnable(true);\r\n                }\r\n                else{\r\n                    mjItem.setTouchEnable(false);       // 非打出可听牌置灰\r\n                }\r\n            })\r\n        }\r\n        else{\r\n            this.cancelReadyTing();\r\n        }\r\n    }\r\n\r\n    // 麻将子触摸\r\n    private touchStart(event){\r\n        if (!this.Context.get(this.Define.FieldHandActionEnable) || !this.touchEnable)\r\n            return;\r\n        let touchPos = event.getLocation();\r\n        let startMj = this.getHandMjItemByPos(touchPos);\r\n        if (startMj){\r\n            Logger.warn(\"startMj touch sortIndex: \", startMj.sortIndex);\r\n            if (this.selectMj){\r\n                if (startMj == this.selectMj){   \r\n                    if (this.Context.get(this.Define.FieldInPlayTurn)){ // 自己出牌阶段 点上去的牌 出牌\r\n                        this.onPlay();\r\n                    }\r\n                    else{\r\n                        this.cancelReadyTing();\r\n                        this.resetSelectMj();\r\n                    }\r\n                }\r\n                else{   // 切换选中牌\r\n                    this.selectMj.onSelect();       // 下来\r\n                    startMj.onSelect();               // 上去\r\n                    this.selectMj = startMj;\r\n                    this.selfSelectSign.active = true;\r\n                    this.selfSelectSign.setPosition(this.selfSelectSign.parent.convertToNodeSpaceAR(startMj.getSelectSignWorldPos()));\r\n                    if(this.isReadyTing && this.tingData.ting_items){\r\n                        this.winTipsView.active = true;\r\n                        this.winTipsView.updateWinList(this.tingData.ting_items[this.selectMj.mahjongValue] || []);\r\n                    }\r\n                }\r\n            }\r\n            else{\r\n                this.selectMj = startMj;\r\n                this.selectMj.onSelect();           // 上去\r\n                this.selfSelectSign.active = true;\r\n                this.selfSelectSign.setPosition(this.selfSelectSign.parent.convertToNodeSpaceAR(startMj.getSelectSignWorldPos()));\r\n                if(this.isReadyTing && this.tingData.ting_items){\r\n                    this.winTipsView.active = true;\r\n                    this.winTipsView.updateWinList(this.tingData.ting_items[this.selectMj.mahjongValue] || []);\r\n                }\r\n            }\r\n        }\r\n        else{\r\n            this.cancelReadyTing();\r\n            this.resetSelectMj();\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * 获取点击位置的麻将子\r\n     * @param worldPos 世界坐标\r\n     */\r\n    private getHandMjItemByPos(worldPos: cc.Vec2){\r\n        if (this.lastDealMjItem && this.lastDealMjItem.checkMjValid() && this.lastDealMjItem.checkIsTouch(worldPos)){\r\n            return this.lastDealMjItem;\r\n        }\r\n        else{\r\n            for(let i = 0; i < this.mjHandList.length; i++){        \r\n                let item = this.mjHandList[i];\r\n                if (item.checkMjValid() && item.checkIsTouch(worldPos)){       // 麻将子不作叠着放, 故可以直接checkIsTouch判断\r\n                    return item;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public showPlayTips(flag: boolean){\r\n        this.playTips.active = flag;\r\n    }\r\n\r\n    public resetSelectMj(){\r\n        this.selfSelectSign.active = false;\r\n        if (this.selectMj){\r\n            if(this.selectMj.isSelect)\r\n                this.selectMj.onSelect();\r\n            this.selectMj = null;\r\n        }\r\n    }\r\n\r\n    private cancelReadyTing(){\r\n        if (!this.isReadyTing){\r\n            this.enableAllMjTouch();\r\n        }\r\n        if(!this.Context.get(this.Define.FieldInTing))\r\n            this.winTipsView.active = false;\r\n    }\r\n\r\n    /** 出掉手中指定吃碰杠牌 */\r\n    public hideOperCard(valueArr: number[]){\r\n        this.isReadyTing = false;\r\n        this.cancelReadyTing();\r\n        this.resetSelectMj();\r\n        let count = 0;\r\n        let tempArr = [...valueArr];\r\n        if(this.lastDealMjItem){        // debug 处理杠完摸到一张又可以杠的牌\r\n            let index = tempArr.indexOf(this.lastDealMjItem.mahjongValue);\r\n            if (index > -1){\r\n                count ++;\r\n                tempArr.splice(index, 1);\r\n                this.recycleLastDealMj();\r\n            }\r\n        }\r\n        for(let i = 0; i < this.mjHandList.length; i++){\r\n            if (count == valueArr.length)\r\n                break;\r\n            let mjItem = this.mjHandList[i];\r\n            let index = tempArr.indexOf(mjItem.mahjongValue);\r\n            if (index > -1){\r\n                count ++;\r\n                tempArr.splice(index, 1);\r\n                mjItem.active = false;\r\n                mjItem.isOut = true;\r\n            }\r\n        }\r\n        this.recycleUsedOutMjItem();\r\n        this.sortCardDirectly(false);\r\n        this.touchEnable = false;           // 吃碰杠时关闭触摸, 开启走readyForOut\r\n    }\r\n\r\n    private onPlay(){\r\n        ErmjGameConst.playSound(ErmjAudioConst.commonAudio.OutCard, true);\r\n        this.playMj = this.selectMj;\r\n        if (this.isReadyTing){\r\n            Game.Server.send(this.Define.CmdTing, {card: this.playMj.mahjongValue});\r\n        }\r\n        else{\r\n            Game.Server.send(this.Define.CmdPlay, {card: this.playMj.mahjongValue});\r\n        }\r\n        this.playMj.active = false;\r\n        this.showPlayTips(false);\r\n        // this.resetSelectMj();\r\n        // this.outCard(this.playMj.mahjongValue, true);        // 回包再动画 这里直接动画 临界状态会有问题\r\n        this.Context.set(this.Define.FieldInPlayTurn, false);\r\n    }\r\n\r\n    /**\r\n     * 出牌动画 手牌消失和整理\r\n     * @param value 出的麻将子值\r\n     * @param isSortAnim 是否播放整理动画\r\n     * @param isAuto 是否系统出牌  处理临界状态\r\n     */\r\n    public outCard(value: number, isSortAnim: boolean, isAuto: boolean = false){\r\n        this.isReadyTing = false;\r\n        this.cancelReadyTing();\r\n        this.resetSelectMj();\r\n\r\n        let outItem: ErmjMahjongHandView;\r\n        if (!isAuto){\r\n            if (this.playMj && !this.playMj.isOut && this.playMj.mahjongValue == value){        // 主动出牌理论只会进这\r\n                outItem = this.playMj;\r\n            }\r\n            else{\r\n                if(this.lastDealMjItem && !this.lastDealMjItem.isOut && this.lastDealMjItem.mahjongValue == value){\r\n                    outItem = this.lastDealMjItem;\r\n                }\r\n                else{\r\n                    outItem = this.findMjItemByValue(value);\r\n                }\r\n            }\r\n        }\r\n        else{\r\n            let check = false;\r\n            if (this.playMj && !this.playMj.isOut){\r\n                Logger.error(\"outCard 临界状态\")\r\n                if(this.playMj.mahjongValue !== value){      // 系统出不是这张 就再显示出来 找其他\r\n                    this.playMj.active = true;\r\n                    check = false;\r\n                }\r\n                else{\r\n                    outItem = this.playMj;          // 刚好这张 将错就错\r\n                    check = true;\r\n                }\r\n            }\r\n            if (!check){\r\n                if(this.lastDealMjItem && !this.lastDealMjItem.isOut && this.lastDealMjItem.mahjongValue == value){\r\n                    outItem = this.lastDealMjItem;\r\n                }\r\n                else{\r\n                    outItem = this.findMjItemByValue(value);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (outItem && !outItem.isOut){\r\n            outItem.active = false;\r\n            outItem.isOut = true;\r\n            this.touchEnable = false;\r\n            if (isSortAnim && this.lastDealMjItem){         // 摸了牌才走合牌动画, 如果出的是lastDealMjItem 无须理牌动画\r\n                if (outItem !== this.lastDealMjItem){\r\n                    this.sortDrawCardAmin(outItem);\r\n                }\r\n                else{\r\n                    this.recycleLastDealMj();\r\n                    this.touchEnable = true;\r\n                }\r\n            }\r\n            else{\r\n                this.recycleUsedOutMjItem();\r\n                this.sortCardDirectly(false);\r\n                this.touchEnable = true;\r\n            }\r\n        }\r\n        else{\r\n            console.error(\"error outCard outIndex == -1\", this.playMj, this.lastDealMjItem);        // 找不到要出的指定牌\r\n        }\r\n        this.playMj = null;\r\n    }\r\n    \r\n    private findMjItemByValue(value: number){\r\n        for(let i = 0; i < this.mjHandList.length; i++){\r\n            let item = this.mjHandList[i];\r\n            if (!item.isOut && item.mahjongValue == value)\r\n                return item;\r\n        }\r\n    }\r\n\r\n     /**\r\n     * 整理摸牌区域到手牌 摸了一张牌后出牌才走这\r\n     * @param outItem 打出的牌\r\n     */\r\n    private sortDrawCardAmin(outItem: ErmjMahjongHandView){\r\n        if (!outItem || !this.lastDealMjItem)    \r\n            return;\r\n        let outIndex = outItem.sortIndex;\r\n        // 计算插入索引 默认最左边 找不到则放在最左边0位置\r\n        let tempIndex = 0;    \r\n        if (outItem.mahjongValue == this.lastDealMjItem.mahjongValue){  // 打出牌跟摸牌区域牌一致\r\n            tempIndex = outIndex;\r\n        }\r\n        else{\r\n            // 此处都是排好序的mjHandList\r\n            for(let i = 0; i< this.mjHandList.length; i++){     // 找到lastDealMjItem所应该塞进去的位置\r\n                if (i >= this.Define.HandMjMaxCount)\r\n                    break;\r\n                let item = this.mjHandList[i];\r\n                if (item.mahjongValue <= this.lastDealMjItem.mahjongValue){\r\n                    tempIndex = i + 1;\r\n                }\r\n                else{\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        // 动画\r\n        let panMoveTime = 0.2;\r\n        Logger.error(\"sortDrawCardAmin\", outIndex, tempIndex, this.mjHandList.length);\r\n        if(tempIndex == outIndex){         // 刚好在出的那张位置, lastDealMjItem直接插入\r\n            let isLast = tempIndex == this.mjHandList.length - 1;\r\n            this.doSortLastDealMove(outIndex, !isLast, 0);\r\n        }\r\n        else if (tempIndex == this.mjHandList.length){   // 刚好在末尾 outIndex往后所有麻将子左移, lastDealMjItem左移到最后\r\n            this.doSortPanMove(outIndex + 1, this.mjHandList.length - 1, false, panMoveTime);\r\n            this.doSortLastDealMove(this.mjHandList.length - 1, false, 0);\r\n        }\r\n        else if(tempIndex > outIndex){          // 插入在出牌点之后 outIndex+1到tempIndex-1所有麻将子左移, lastDealMjItem再插入\r\n            this.doSortPanMove(outIndex + 1, tempIndex - 1, false, panMoveTime);\r\n            this.doSortLastDealMove(tempIndex - 1, true, 0.2);\r\n        }\r\n        else{                                   // 插入在出牌点之前 从tempIndex到outIndex-1所有麻将子右移, lastDealMjItem再插入\r\n            this.doSortPanMove(tempIndex, outIndex - 1, true, panMoveTime);\r\n            this.doSortLastDealMove(tempIndex, true, 0.2);\r\n        }\r\n    }\r\n\r\n    // 平移\r\n    private doSortPanMove(bIndex: number, eIndex: number, bRight: boolean = true, time: number = 0.5){\r\n        let nDirection = bRight && 1 || -1;\r\n        for(let i= bIndex; i <= eIndex; i++){\r\n            let item = this.mjHandList[i];\r\n            if (item && this.rawMjPosList[i + nDirection]){\r\n                item.doMove(this.rawMjPosList[i + nDirection], time);\r\n                item.sortIndex += nDirection;\r\n            }\r\n            else{\r\n                console.error(\"doSortPanMove error\", i, nDirection);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 摸牌区域那张合并动画\r\n     * @param aimIndex 目的索引\r\n     * @param bUp 是否上提动画\r\n     * @param delay 延时\r\n     */\r\n    private doSortLastDealMove(aimIndex: number, bUp: boolean, delay = 0){\r\n        if (!this.lastDealMjItem || !this.rawMjPosList[aimIndex]){\r\n            console.error(\"doSortLastDealMove error\", aimIndex);\r\n            return;\r\n        }\r\n        let beginPos = this.lastDealMjItem.node.position;\r\n        let endPos = this.rawMjPosList[aimIndex];\r\n        let [width, height] = this.lastDealMjItem.getRealSize();\r\n        this.lastDealMjItem.sortIndex = aimIndex;\r\n        if (bUp){\r\n            let dev = Global.Toolkit.getVec2Distance(beginPos, endPos);\r\n            let time = Math.max(dev / 2000, 0.2);\r\n            this.lastDealMjItem.doMove(beginPos.add(cc.v3(0, height + 5)), 0.1, delay);\r\n            this.lastDealMjItem.doMove(endPos.add(cc.v3(0, height + 5)), time, 0.1 + delay);\r\n            this.lastDealMjItem.doMove(endPos, 0.1, time + 0.1 + delay, ()=>{\r\n                this.recycleUsedOutMjItem();      // 先动画再回收\r\n                this.pushLastIntoHandList(aimIndex);\r\n                this.sortMjHandList();\r\n                this.touchEnable = true;\r\n            });\r\n        }\r\n        else{\r\n            this.lastDealMjItem.doMove(endPos, 0.2, delay, ()=>{\r\n                this.recycleUsedOutMjItem();      // 先动画再回收\r\n                this.pushLastIntoHandList(aimIndex);\r\n                this.sortMjHandList();\r\n                this.touchEnable = true;\r\n            });\r\n        }\r\n    }\r\n\r\n    public doWin(){\r\n        this.isReadyTing = false;\r\n        this.cancelReadyTing();\r\n        this.resetSelectMj();\r\n    }\r\n\r\n    /** 自摸时隐藏最后一张胡牌 */\r\n    public winHideLastDraw(value: number){\r\n        if(this.lastDealMjItem && this.lastDealMjItem.mahjongValue == value){\r\n            this.recycleLastDealMj();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 直接合并手牌排序并刷新位置\r\n     * @param isAnim 是否播放整理动画\r\n     */ \r\n    public sortCardDirectly(isAnim: boolean = false){\r\n        this.pushLastIntoHandList();\r\n        this.sortMjHandList();\r\n\r\n        if(!isAnim){\r\n            this.mjHandList.forEach((item, index)=>{\r\n                item.active = true;\r\n                item.isOut = false;\r\n                item.sortIndex = index;\r\n                item.node.setPosition(this.rawMjPosList[index]);\r\n            })\r\n        }\r\n        else{\r\n            // 整理动画 \r\n        }\r\n    }\r\n\r\n    /**\r\n     * 将摸牌区域牌合并到手牌\r\n     * @param index 指定位置 -1表插入到末尾\r\n     */\r\n    private pushLastIntoHandList(index: number = -1){\r\n        if (this.lastDealMjItem){\r\n            let i = (index >= 0 && index < this.mjHandList.length) ? index : this.mjHandList.length;\r\n            this.mjHandList.splice(i, 0, this.lastDealMjItem);\r\n            this.lastDealMjItem = null;\r\n        }\r\n    }\r\n\r\n    /** 排序手牌数组 不刷新位置 sortIndex此时是乱的 */\r\n    private sortMjHandList(){\r\n        this.mjHandList.sort((item1, item2)=>{\r\n            if (!item1.mahjongValue || !item2.mahjongValue)\r\n                return 0;\r\n            return item1.mahjongValue - item2.mahjongValue;\r\n        })\r\n    }\r\n    \r\n    private recycleUsedOutMjItem(){\r\n        this.sortMjHandList();\r\n\r\n        let outArr = [];\r\n        let handArr = [];\r\n        for(let i= 0; i < this.mjHandList.length; i++){\r\n            let mjItem = this.mjHandList[i];\r\n            if (!mjItem.active || mjItem.isOut){\r\n                outArr.push(mjItem);\r\n            }\r\n            else{\r\n                handArr.push(mjItem);\r\n            }\r\n        }\r\n        this.mjHandList = handArr;      // 还在手上的赋值\r\n        outArr.forEach(mjItem=>{        // 已经打出的回收\r\n            mjItem.active = false;\r\n            mjItem.reset();\r\n            this.unusedMjList.push(mjItem);\r\n        })\r\n    }\r\n\r\n     /**回收所有已使用麻将子 */\r\n     private recycleAllUsedMjItems(){\r\n        this.recycleLastDealMj();\r\n\r\n        for(let i =0; i < this.mjHandList.length ;i++){\r\n            let item = this.mjHandList[i];\r\n            item.active = false;\r\n            item.reset();\r\n            this.unusedMjList.push(item);\r\n        }\r\n        this.mjHandList = [];\r\n    }\r\n\r\n    private recycleLastDealMj(){\r\n        if (this.lastDealMjItem){\r\n            this.lastDealMjItem.active = false;\r\n            this.lastDealMjItem.reset();\r\n            this.unusedMjList.push(this.lastDealMjItem);\r\n            this.lastDealMjItem = null;\r\n        }\r\n    }\r\n    \r\n    public clearByRound(){\r\n        this.playMj = null;\r\n        this.playTips.active = false;\r\n        this.touchEnable = false;\r\n        this.resetSelectMj();\r\n        this.recycleAllUsedMjItems();\r\n\r\n        this.winTipsView.active = false;\r\n        this.isReadyTing = false;\r\n        this.tingData = {};\r\n        this.tingLayer.active = false;\r\n    }\r\n}"]}