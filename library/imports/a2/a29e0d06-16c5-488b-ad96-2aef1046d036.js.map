{"version":3,"sources":["assets\\hall\\scripts\\framework\\net\\dun\\AppDunControl.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import HallStorageKey from \"../../../logic/hallcommon/const/HallStorageKey\";\r\nimport { ReportTool } from \"../../../logic/core/tool/ReportTool\";\r\nimport IDun from \"./IDun\";\r\nimport YunDun from \"./YunDun\";\r\nimport ZADun from \"./ZADun\";\r\nimport AliDun from \"./AliDun\";\r\n\r\n\r\nexport enum DUNTYPE {\r\n    None = 0,//无盾\r\n    // T_DUN = 1,//T盾\r\n    YUN_DUN = 2,//云盾\r\n    ZA_DUN = 3,//ZA盾\r\n    Ali_DUN = 4 //阿里云游戏盾\r\n}\r\n\r\nexport enum DUNSTATE {\r\n    INIT = 10000,\r\n    LOADING = 10001,\r\n    SUCCESS = 0,\r\n    FAILED = -1\r\n}\r\n\r\nexport default class AppDunControl {\r\n    /**\r\n     * {\"tdun\":{key:xxxxx},\"yundun\":{\"accessKey\":xxxx,\"uuid\":xxxx}}\r\n     * \r\n     * **/\r\n    private DUNConifg: any;\r\n\r\n    //T盾\r\n    // private tDun: TDun;\r\n    //云盾\r\n    private yunDun: YunDun;\r\n    //ZA盾\r\n    private zaDun:ZADun;\r\n    //阿里云游戏盾\r\n    private aliDun:AliDun;\r\n\r\n    //设置盾配置\r\n    public setDunConfig(cfg) {\r\n        if (cfg == null && cfg.type == null)\r\n            return;\r\n        Global.Setting.storage.setObject(HallStorageKey.DunConfig, cfg);\r\n    }\r\n\r\n    //加载盾配置\r\n    public loadDunConfig() {\r\n        let cfg = Global.Setting.storage.getObject(HallStorageKey.DunConfig);\r\n        if (cfg == null) {\r\n            Logger.error(\"loadDunConfig cfg = null\")\r\n            return;\r\n        }\r\n        this.DUNConifg = cfg;\r\n    }\r\n\r\n    public init() {\r\n        //初始化盾配置\r\n        this.loadDunConfig();\r\n        //初始化盾类\r\n        this.initDun();\r\n    }\r\n\r\n    private initDun() {\r\n        // this.tDun = new TDun(DUNTYPE.T_DUN);\r\n        this.yunDun = new YunDun(DUNTYPE.YUN_DUN);\r\n        this.zaDun = new ZADun(DUNTYPE.ZA_DUN);\r\n        this.aliDun = new AliDun(DUNTYPE.Ali_DUN);\r\n        //上次盾有启动成功记录没，有的话则优先启动\r\n        if (this.DUNConifg) {\r\n            // this.initDunSDKByStorage(DUNTYPE.T_DUN)\r\n            this.initDunSDKByStorage(DUNTYPE.YUN_DUN)\r\n            this.initDunSDKByStorage(DUNTYPE.ZA_DUN)\r\n            this.initDunSDKByStorage(DUNTYPE.Ali_DUN)\r\n            \r\n        }\r\n    }\r\n\r\n    private initDunSDKByStorage(dunType) {\r\n        let dunInitRecord = Global.Setting.storage.get(HallStorageKey.DunInitRecord + \"_\" + dunType)\r\n        if (dunInitRecord) {\r\n            this.initDunSDK(dunType)\r\n        }\r\n    }\r\n\r\n\r\n    public initDunSDK(dunType) {\r\n        if (!dunType) {\r\n            Logger.log(\"initDunSDK dunType == null\")\r\n            return;\r\n        }\r\n        let isSupport = this.checkAppIsSupportDunByType(dunType)\r\n        if (!isSupport){\r\n            Logger.log(\"initDunSDK App is not Support dunType =\" + dunType)\r\n            return;\r\n        }\r\n        if (!this.DUNConifg) {\r\n            Logger.log(\"initDunSDK this.DUNConifg == null\")\r\n            this.loadDunConfig()\r\n            if (!this.DUNConifg) {\r\n                Logger.log(\"initDunSDK loadDunConfig DUNConifg == null\")\r\n                return;\r\n            }\r\n        }\r\n        \r\n        let dunObj: IDun = null\r\n        let dunConfig = null\r\n        switch (dunType) {\r\n            // case DUNTYPE.T_DUN:\r\n            //     dunObj = this.tDun\r\n            //     dunConfig = this.DUNConifg.tdun\r\n            //     break;\r\n            case DUNTYPE.YUN_DUN:\r\n                dunObj = this.yunDun;\r\n                dunConfig = this.DUNConifg.yundun\r\n                break;\r\n            case DUNTYPE.ZA_DUN:\r\n                dunObj = this.zaDun;\r\n                dunConfig = this.DUNConifg.zadun\r\n                break;\r\n            case DUNTYPE.Ali_DUN:\r\n                dunObj = this.aliDun;\r\n                dunConfig = this.DUNConifg.alidun\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        if (!dunObj) {\r\n            Logger.log(\"initDunSDK dunObj == null dunType = \" + dunType)\r\n            return;\r\n        }\r\n        if (!dunConfig) {\r\n            Logger.log(\"initDunSDK dunConfig == null dunType = \" + dunType)\r\n            return;\r\n        }\r\n\r\n        \r\n        let isCfgValid = dunObj.checkCfgIsValid(dunConfig)\r\n        if (isSupport && isCfgValid) {\r\n            let dunInitState = dunObj.getInitState()\r\n            if (!this.checkDunStateIsInit(dunInitState)) {\r\n                dunObj.init(dunConfig)\r\n            } else {\r\n                Logger.log(\"initDunSDK checkDunStateIsInit == true \" + dunType)\r\n            }\r\n        } else {\r\n            Logger.log(\"initDunSDK  can't init dunType\" + dunType)\r\n        }\r\n    }\r\n\r\n    //检测当前版本是否支持指定类型盾\r\n    public checkAppIsSupportDunByType(dunType) {\r\n        let isSupport = false;\r\n        let dunObj: IDun = null\r\n        switch (dunType) {\r\n            // case DUNTYPE.T_DUN:\r\n            //     dunObj = this.tDun\r\n            //     break;\r\n            case DUNTYPE.YUN_DUN:\r\n                dunObj = this.yunDun\r\n                break;\r\n            case DUNTYPE.ZA_DUN:\r\n                dunObj = this.zaDun\r\n                break;\r\n            case DUNTYPE.Ali_DUN:\r\n                dunObj = this.aliDun\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        if (dunObj){\r\n            isSupport = dunObj.isAppSupport()\r\n        }\r\n        \r\n        return isSupport\r\n    }\r\n\r\n\r\n    //判断盾是否初始化完成\r\n    public checkDunStateIsInit(dunInitState) {\r\n        if (dunInitState != null) {\r\n            //还没开始出初始化或初始化失败\r\n            if (dunInitState == DUNSTATE.INIT || dunInitState == DUNSTATE.FAILED) {\r\n                return false;\r\n            } else {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    public getDunIsInitByType(dunType: DUNTYPE) {\r\n        if (!dunType) {\r\n            Logger.log(\"getDunIsInitByType dunType = null\")\r\n            return;\r\n        }\r\n        let isDunInit = false;\r\n        let dunObj :IDun = null\r\n        switch (dunType) {\r\n            // case DUNTYPE.T_DUN:\r\n            //     dunObj = this.tDun;               \r\n            //     break;\r\n            case DUNTYPE.YUN_DUN:\r\n                dunObj = this.yunDun;\r\n                break;\r\n            case DUNTYPE.ZA_DUN:\r\n                dunObj = this.zaDun;\r\n                break;\r\n            case DUNTYPE.Ali_DUN:\r\n                dunObj = this.aliDun;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        if (dunObj){\r\n            isDunInit = dunObj.isInit()\r\n        }\r\n\r\n        //尝试启动SDK\r\n        if (!isDunInit) {\r\n            this.initDunSDK(dunType)\r\n        }\r\n        Logger.error(\"getDunIsInit dunType = \" + dunType + \" isDunInit = \" + isDunInit)\r\n        return isDunInit;\r\n    }\r\n\r\n\r\n    public getServerIPAndPort(host: string, lo_port: number, dunType: number,attr:any) {\r\n        if (!host || !lo_port || !dunType) {\r\n            Logger.log(\"getServerIPAndPort error host lo_port dunType \")\r\n            return;\r\n        }\r\n        let isSupport = this.checkAppIsSupportDunByType(dunType)\r\n        if (!isSupport){\r\n            Logger.log(\"getServerIPAndPort App not Support dunType = \" + dunType)\r\n            return;\r\n        }\r\n        let ipPortInfo = null\r\n        let dunObj: IDun = null\r\n        switch (dunType) {\r\n            // case DUNTYPE.T_DUN:\r\n            //     dunObj = this.tDun;\r\n            //     break;\r\n            case DUNTYPE.YUN_DUN:\r\n                dunObj = this.yunDun;\r\n                break;\r\n            case DUNTYPE.ZA_DUN:\r\n                dunObj = this.zaDun;\r\n                break;\r\n            case DUNTYPE.Ali_DUN:\r\n                dunObj = this.aliDun;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        if (dunObj) {\r\n            ipPortInfo = dunObj.getServerIPAndPort(host, lo_port,attr)\r\n        }\r\n\r\n        return ipPortInfo\r\n    }\r\n\r\n    //判断是否有盾在异步初始化中\r\n    public checkIsDunLoading(){\r\n        let dunInitState = 0;\r\n        let isDunLoading = false;\r\n        if (this.yunDun) {\r\n            dunInitState = this.yunDun.getInitState()\r\n            if (dunInitState == DUNSTATE.LOADING){\r\n                isDunLoading = true;\r\n            }\r\n        }\r\n\r\n        if (this.zaDun){\r\n            dunInitState = this.zaDun.getInitState()\r\n            if (dunInitState == DUNSTATE.LOADING){\r\n                isDunLoading = true;\r\n            }\r\n        }\r\n        if (this.aliDun){\r\n            dunInitState = this.aliDun.getInitState()\r\n            if (dunInitState == DUNSTATE.LOADING){\r\n                isDunLoading = true;\r\n            }\r\n        }\r\n        return isDunLoading\r\n    }\r\n\r\n\r\n\r\n\r\n}"]}