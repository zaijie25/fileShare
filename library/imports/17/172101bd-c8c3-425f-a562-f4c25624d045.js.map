{"version":3,"sources":["assets\\hall\\scripts\\logic\\core\\net\\hall\\HallHeartbeatHelper.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import HallServer from \"./HallServer\";\r\nimport { NetOnline } from \"./NetEvent\";\r\nimport EventDispatcher from \"../../../../framework/event/EventDispatcher\";\r\n\r\nexport default class HallHeartBeatHelper\r\n{\r\n    private CHECK_HEARTBEAT_INTERVAL = 5;\r\n    //心跳使用同一个数据包\r\n    //数据包内的param \r\n    private heartData:any;\r\n    private heartParam:any;\r\n\r\n    private server:HallServer;\r\n    //负责hallSever 组件间通信\r\n    private internalEvent:EventDispatcher;\r\n\r\n    //下一次心跳间隔\r\n    private sendInterval = 0;\r\n    //6秒没收到心跳  则主动发送心跳\r\n    private lastSendInterval = 6\r\n\r\n    private lastSendTimeout = 3;\r\n\r\n    private isRunning = false;\r\n\r\n\r\n    public netInterval = 0;\r\n\r\n    constructor(server:HallServer, interalEvent:EventDispatcher)\r\n    {\r\n        this.server = server;\r\n        this.internalEvent = interalEvent;\r\n        this.setup();\r\n    }\r\n\r\n    public setup()\r\n    {\r\n        this.server.on(NetOnline.HeartBeat, this, this.onHeartBeat);\r\n        this.internalEvent.on(HallServer.EVENT_INTERNAL_UPDATEMSGSEQ, this, this.onUpdateMsgseq)\r\n        this.initHeartBeatData();\r\n    }\r\n\r\n    // Game *struct {\r\n    //     Gid   int32  `json:\"_gid,omitempty\"`\r\n    //     Gsc   string `json:\"_gsc,omitempty\"`\r\n    //     Glv   string `json:\"_glv,omitempty\"`\r\n    //     Gt    int32  `json:\"_gt\"`\r\n    //     Chair int32  `json:\"_chair\"`\r\n    //   } `json:\"game,omitempty\"` //所在游戏信息, 如果在游戏就将这些信息带上, 不在就不带\r\n    public setSession(session)\r\n    {\r\n        if(session == null)\r\n            this.heartData._param.game = null\r\n        else\r\n        {\r\n            let game:any = {}\r\n            game._gid = session._para._gid;\r\n            game._chair = session._para._chair;\r\n            game._gsc = session._para._gsc;\r\n            game._glv = session._para._glv;\r\n            game._gt = session._para._gt;\r\n            this.heartData._param.game = game;\r\n        }\r\n    }\r\n\r\n\r\n    private initHeartBeatData()\r\n    {\r\n        this.heartParam = {}\r\n        this.heartParam.filter = {}\r\n        // this.heartParam.filter.appid = Global.Setting.appId;\r\n        this.heartParam.msgseq = 0;\r\n        this.heartParam.max_msg = Global.Setting.boardcastCount;\r\n\r\n        this.heartData = {}\r\n        this.heartData._mod = NetOnline.mod;\r\n        this.heartData._func = NetOnline.HeartBeat;\r\n        this.heartData._param = this.heartParam;\r\n    }\r\n\r\n\r\n    //登录成功开始\r\n    public run()\r\n    {\r\n        this.isRunning = true;\r\n        this.sendHeartBeat();\r\n    }\r\n    //切换账号是stop\r\n    public stop()\r\n    {\r\n        this.isRunning = false;\r\n        this.heartParam.msgseq = 0;\r\n        this.sendInterval = 0;\r\n        this.lastSendInterval = this.CHECK_HEARTBEAT_INTERVAL;\r\n    }\r\n\r\n\r\n    public sendHeartBeat(extraStr = \"\")\r\n    {\r\n        this.lastSendInterval = this.lastSendTimeout + 1;\r\n        this.server.sendHeartBeat(NetOnline.mod, NetOnline.HeartBeat, this.heartParam, null, null, false, 0, extraStr);\r\n    }\r\n\r\n    /**\r\n     * 下次心跳seq\r\n     * @param msgseq \r\n     */\r\n    private onUpdateMsgseq(msgseq, msgseq1)\r\n    {\r\n        this.heartParam.msgseq = msgseq;\r\n        this.heartParam.msgseq_1 = msgseq1;\r\n    }\r\n\r\n    /**\r\n     * 心跳消息返回\r\n     * @param msg \r\n     */\r\n    private onHeartBeat( param )\r\n    {\r\n        //设置下次心跳请求时间\r\n        if(param && param.timeout)\r\n            this.sendInterval = param.timeout;\r\n        else\r\n            this.sendInterval = 3;\r\n        this.lastSendTimeout = this.sendInterval;\r\n        //通知广播组件处理\r\n        this.internalEvent.event(HallServer.EVENT_INTERNAL_ONHEARTBEAT, param);\r\n    }\r\n\r\n    public onUpdate(dt)\r\n    {\r\n        if(!this.isRunning)\r\n            return;\r\n        if(this.sendInterval > 0)\r\n        {\r\n            this.sendInterval -= dt;\r\n            if(this.sendInterval <= 0)\r\n            {\r\n                this.sendHeartBeat();\r\n            }\r\n        }\r\n\r\n        //防止心跳断掉\r\n        this.lastSendInterval -= dt;\r\n        if(this.lastSendInterval < 0)\r\n        {\r\n            this.sendHeartBeat()\r\n        }\r\n    }\r\n}"]}