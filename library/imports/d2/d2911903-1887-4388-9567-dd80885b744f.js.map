{"version":3,"sources":["assets\\ermj\\Ermj\\scripts\\component\\ErmjDiceAnim.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAM,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAG1C;IAA0C,gCAAY;IAAtD;QAAA,qEA2CC;QAzCG,aAAO,GAAc,IAAI,CAAC;QAE1B,aAAO,GAAc,IAAI,CAAC;QAE1B,eAAS,GAAqB,EAAE,CAAC;;IAqCrC,CAAC;IAjCa,6BAAM,GAAhB;QACI,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;QACvE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACjC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACrC,CAAC;IAEM,+BAAQ,GAAf,UAAgB,IAAc,EAAE,MAAe;QAC3C,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QACxB,IAAI,MAAM,EAAC;YACP,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACjC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACjC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;SAChD;aACG;YACA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YAChC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;SACnC;IACL,CAAC;IAEO,mCAAY,GAApB,UAAqB,IAAc;QAAnC,iBAQC;QAPQ,IAAA,KAAK,GAAW,IAAI,GAAf,EAAE,KAAK,GAAI,IAAI,GAAR,CAAS;QAC1B,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;QACrD,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;QACrD,IAAI,CAAC,YAAY,CAAC;YACd,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YAChC,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACpC,CAAC,EAAE,CAAC,CAAC,CAAC;IACV,CAAC;IAES,gCAAS,GAAnB;QACI,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAC9B,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;IAChC,CAAC;IAxCD;QADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;iDACM;IAE1B;QADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;iDACM;IAE1B;QADC,QAAQ,CAAC,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC;mDACM;IANhB,YAAY;QADhC,OAAO;OACa,YAAY,CA2ChC;IAAD,mBAAC;CA3CD,AA2CC,CA3CyC,EAAE,CAAC,SAAS,GA2CrD;kBA3CoB,YAAY","file":"","sourceRoot":"/","sourcesContent":["const {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ErmjDiceAnim extends cc.Component {\r\n    @property(cc.Sprite)\r\n    dice1Sp: cc.Sprite = null;\r\n    @property(cc.Sprite)\r\n    dice2Sp: cc.Sprite = null;\r\n    @property([cc.SpriteFrame])\r\n    diceSfArr: cc.SpriteFrame[] = [];\r\n\r\n    private effectSk: sp.Skeleton;\r\n\r\n    protected onLoad(){\r\n        this.effectSk = cc.find(\"effect\", this.node).getComponent(sp.Skeleton);\r\n        this.dice1Sp.node.active = false;\r\n        this.dice2Sp.node.active = false;\r\n    }\r\n\r\n    public showDice(dice: number[], isAnim: boolean){\r\n        this.setDiceStyle(dice);\r\n        if (isAnim){\r\n            this.dice1Sp.node.active = false;\r\n            this.dice2Sp.node.active = false;\r\n            this.effectSk.setAnimation(0, \"idle\", false);\r\n        }\r\n        else{\r\n            this.dice1Sp.node.active = true;\r\n            this.dice2Sp.node.active = true;\r\n        }\r\n    }\r\n\r\n    private setDiceStyle(dice: number[]){\r\n        let [dice1, dice2] = dice;\r\n        this.dice1Sp.spriteFrame = this.diceSfArr[dice1 - 1];\r\n        this.dice2Sp.spriteFrame = this.diceSfArr[dice2 - 1];\r\n        this.scheduleOnce(()=>{\r\n            this.dice1Sp.node.active = true;\r\n            this.dice2Sp.node.active = true;\r\n        }, 1);\r\n    }\r\n\r\n    protected onDisable(){\r\n        this.unscheduleAllCallbacks();\r\n        this.effectSk.clearTracks();\r\n    }\r\n}\r\n"]}