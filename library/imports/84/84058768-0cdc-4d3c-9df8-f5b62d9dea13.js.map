{"version":3,"sources":["assets\\hall\\scripts\\logic\\core\\game\\GamePreloadTool.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["export default class GamePreloadTool{\r\n    private readonly basePrefabPath = \"prefabs/\";\r\n    public readonly lobbyUIPath = this.basePrefabPath + \"LobbyUI\";\r\n    public readonly rulePop = this.basePrefabPath + \"RulePop\";\r\n    public readonly settingPop = this.basePrefabPath + \"SettingPop\";\r\n\r\n    /** 用于储存需要跨bundle调用的变量 */\r\n    public codeCache = {};\r\n\r\n    private curGid: number = 0;\r\n    public get curGameId(){\r\n        return this.curGid;\r\n    }\r\n    public get curBundleName(){\r\n        return this.getPreloadBundleName(this.curGid);\r\n    }\r\n\r\n    public getPreloadBundleName(gid: number){\r\n        return `${gid}_preload`;\r\n    }\r\n\r\n    private keepAssetMap: Map<string, CacheAssetInfo> = new Map;\r\n\r\n    public setup(gid: number){\r\n        Logger.error(\"GamePreloadTool setup\", this.curGid, gid);\r\n        this.curGid = gid;\r\n        Global.SceneManager.setGameSearchPath(String(gid));\r\n        this.codeCache = {};\r\n    }\r\n\r\n    public reShowLobbyShellWnd(){\r\n        Game.GamePreloadTool.releaseKeepAsset(this.curGid, true);\r\n    }\r\n\r\n    public preloadBundle(){\r\n        try {\r\n            return new Promise((resolve, reject)=>{\r\n                Global.ResourceManager.loadBundle(this.curBundleName, (err, bundle)=>{\r\n                    if (err)\r\n                    {\r\n                        Logger.error(\"加载子游戏bundle失败--------preloadBundle------------\")\r\n                        Global.Toolkit.removeDir(this.curGid,err)\r\n                        reject(err);\r\n                    }\r\n                    else\r\n                        resolve(bundle);\r\n                })\r\n            })\r\n          } catch (error) {\r\n          //  console.error(error);\r\n            Global.Toolkit.removeDir(this.curGid,error)\r\n            // expected output: ReferenceError: nonExistentFunction is not defined\r\n            // Note - error messages will vary depending on browser\r\n          }\r\n          \r\n        \r\n    }\r\n\r\n    public preloadPrefab(path: string, isCollect: boolean = false){\r\n        let prefab = this.getSelectPrefab(path, isCollect);\r\n        let wholePath = this.getAssetWholePath(path);\r\n        if (prefab){\r\n            return prefab;\r\n        }\r\n        else{\r\n            return new Promise((resolve, reject)=>{\r\n                Global.ResourceManager.loadBundleRes(this.curBundleName, path, (err, res)=>{\r\n                    if (err)\r\n                        reject(err);\r\n                    else{\r\n                        if (isCollect){\r\n                            if (this.keepAssetMap.has(wholePath)){\r\n                                let cache = this.keepAssetMap.get(wholePath);\r\n                                cache.count ++;\r\n                            }\r\n                            else{\r\n                                let chche = new CacheAssetInfo(this.curGid, path, res, 1);\r\n                                this.keepAssetMap.set(wholePath, chche);\r\n                            }\r\n                            res.addRef();\r\n                        }\r\n                        Global.ResourceManager.setAutoReleaseRecursively(res, false);\r\n                        resolve(res);\r\n                    }\r\n                }, null);\r\n            })\r\n        }\r\n    }\r\n\r\n    public lazyPreloadPrefab(){\r\n        Global.ResourceManager.lazyLoadBundleRes(this.curBundleName, [this.rulePop, this.settingPop], cc.Prefab);\r\n    }\r\n\r\n    public getSelectPrefab(path: string, isCollect: boolean = true){\r\n        let prefab = Global.ResourceManager.getBundleRes(this.curBundleName, path, cc.Prefab);\r\n        if (prefab){\r\n            if (isCollect){\r\n                let wholePath = this.getAssetWholePath(path);\r\n                if (this.keepAssetMap.has(wholePath)){\r\n                    let cache = this.keepAssetMap.get(wholePath);\r\n                    cache.count ++;\r\n                }\r\n                else{\r\n                    let chche = new CacheAssetInfo(this.curGid, path, prefab, 1);\r\n                    this.keepAssetMap.set(wholePath, chche);\r\n                }\r\n                prefab.addRef();\r\n            }\r\n            return prefab;\r\n        }\r\n    }\r\n\r\n    private getAssetWholePath(path: string){\r\n        return `${this.curGid}_${path}`;\r\n    }\r\n\r\n    public releasePreloadBundle(gid: number){\r\n        Global.ResourceManager.releaseHelper.releaseBundle(this.getPreloadBundleName(gid));\r\n    }\r\n\r\n    public releaseKeepAsset(gid: number, retainOne: boolean = false){\r\n        let keepOne = retainOne ? 1 : 0;\r\n        let deleteArr = [];\r\n        this.keepAssetMap.forEach((info, path)=>{\r\n            if(info.gid == gid){\r\n                let count = info.count;\r\n                if (count > 0){\r\n                    for(let i = 0; i < count - keepOne; i++){\r\n                        info.asset.decRef();\r\n                        info.count --;\r\n                    }\r\n                }\r\n                if (info.count == 0){\r\n                    deleteArr.push(path);\r\n                    Global.ResourceManager.releaseHelper.releaseBundleRes(this.getPreloadBundleName(gid), info.path);\r\n                }\r\n            }\r\n        })\r\n\r\n        deleteArr.forEach(key=>{\r\n            this.keepAssetMap.delete(key);\r\n        })\r\n    }\r\n\r\n    public checkPreloadBundleExist(gid: number){\r\n        if (cc.sys.isNative){\r\n           let path = `${jsb.fileUtils.getWritablePath()}/gameUpdate/${gid}/assets/${gid}_preload`;\r\n           let isExist = jsb.fileUtils.isFileExist(path);\r\n           Logger.error(\"checkPreloadBundleExist\", path, isExist);\r\n           return isExist;\r\n        }\r\n        if (cc.sys.isBrowser){\r\n            let ignoreArr = [       // 不在数组内的走true, 没有preload bundle的游戏网页调试需要在这配置\r\n                4002,\r\n                1001,\r\n                1009,\r\n                1015,\r\n                1017,\r\n                1018,\r\n                1019,\r\n                1020,\r\n                1022,\r\n                5001,\r\n                5002,\r\n                5003,\r\n                5004,\r\n                5005,\r\n                5006,\r\n                1021\r\n            ];\r\n            return true && ignoreArr.indexOf(gid) <= -1;     // 本地调试临时这么判断\r\n        }\r\n        return false;\r\n    }\r\n}\r\n\r\nclass CacheAssetInfo{\r\n    private _count: number;\r\n    constructor(public gid: number, public path: string, public asset: cc.Asset, count: number){\r\n        this.count = count;\r\n    }\r\n\r\n    public set count(value: number){\r\n        Logger.error(\"set CacheAssetInfo count\", this.gid, this.path, value);\r\n        this._count = value;\r\n    }\r\n\r\n    public get count(){\r\n        return this._count;\r\n    }\r\n}"]}