{"version":3,"sources":["assets\\hall\\scripts\\logic\\hall\\ui\\msg\\MsgItem.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class MsgItem extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    BackgroundTxt: cc.Label = null;\r\n    @property(cc.Label)\r\n    BackgroundTxt1: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    CheckTxt: cc.Label = null;\r\n    @property(cc.Label)\r\n    CheckTxt1: cc.Label = null;\r\n\r\n    @property(cc.Sprite)\r\n    Unread: cc.Sprite = null;\r\n    @property(cc.Sprite)\r\n    CheckSprite: cc.Sprite = null;\r\n    @property(cc.Sprite)\r\n    UnCheckSprite: cc.Sprite = null;\r\n    @property(cc.Toggle)\r\n    toggle: cc.Toggle = null;\r\n    gameData: any;\r\n\r\n    private bgFontSize;\r\n    private bg1FontSize;\r\n    private checkFontSize;\r\n    private check1FontSize;\r\n    private maxCharCount = 6;\r\n\r\n    ColorStr1 = \"<outline color=#445cb5 width=2><b>%s</b></outline>\" //back1\r\n    ColorStr2 = \"<outline color=#6C3DD8 width=2><b>%s</b></outline>\"\r\n    CheckColorStr1 = \"<outline color=#B94E00 width= 1>%s</outline>\"\r\n    CheckColorStr2 = \"<outline color=#D74D23 width=2><b>%s</b></outline>\"\r\n\r\n\r\n    onLoad()\r\n    {\r\n        this.bgFontSize = this.BackgroundTxt.fontSize;\r\n        this.checkFontSize = this.CheckTxt.fontSize ;\r\n        //紫色是两个文本叠加效果\r\n        if(Global.Setting.SkinConfig.isPurple)\r\n        {\r\n            this.bg1FontSize = this.BackgroundTxt1.fontSize ;\r\n            this.check1FontSize = this.CheckTxt1.fontSize;\r\n        }\r\n    }\r\n\r\n    close()\r\n    {\r\n        this.node.active = false\r\n    }\r\n    // update (dt) {}\r\n    public getGameData() {\r\n        return this.gameData;\r\n    }\r\n    public onInit(data: any) {\r\n        this.gameData = data;\r\n        this.initView()\r\n    }\r\n    initView() {\r\n\r\n        this.BackgroundTxt.fontSize = this.bgFontSize;\r\n        this.CheckTxt.fontSize = this.checkFontSize;\r\n\r\n        if(Global.Setting.SkinConfig.isPurple)\r\n        {\r\n            this.CheckTxt1.fontSize = this.check1FontSize;\r\n            this.BackgroundTxt1.fontSize = this.bg1FontSize;\r\n            this.BackgroundTxt.string =  cc.js.formatStr(this.ColorStr1,Global.Toolkit.removeEmoji(this.gameData.title));\r\n            this.BackgroundTxt1.string =  cc.js.formatStr(this.ColorStr2,Global.Toolkit.removeEmoji(this.gameData.title));\r\n            this.CheckTxt.string = cc.js.formatStr(this.CheckColorStr1,Global.Toolkit.removeEmoji(this.gameData.title));\r\n            this.CheckTxt1.string = cc.js.formatStr(this.CheckColorStr2,Global.Toolkit.removeEmoji(this.gameData.title));\r\n        }else if(Global.Setting.SkinConfig.isBlue){\r\n            this.BackgroundTxt.string =  this.gameData.title\r\n            this.CheckTxt.string = this.gameData.title\r\n        }else\r\n        {\r\n            this.BackgroundTxt.string =  Global.Toolkit.removeEmoji(this.gameData.title)\r\n            this.CheckTxt.string = Global.Toolkit.removeEmoji(this.gameData.title)\r\n        }\r\n \r\n\r\n        this.toggle.isChecked =false\r\n        this.toggle.uncheck()\r\n        this.SetUnReadActiveState(this.gameData.red_status === 0)\r\n\r\n        // if(this.gameData.title.length > 6)\r\n        // {\r\n        //     Global.Component.frameEnd(()=>{\r\n        //         if(!this.node.isValid)\r\n        //             return;\r\n        //         this.adjustLabelLength(this.BackgroundTxt, this.bgFontSize) \r\n        //         this.adjustLabelLength(this.CheckTxt, this.checkFontSize) \r\n        //         this.adjustLabelLength(this.BackgroundTxt1, this.bg1FontSize) \r\n        //         this.adjustLabelLength(this.CheckTxt1, this.check1FontSize) \r\n        //     })\r\n        // }\r\n    }\r\n\r\n    private adjustLabelLength(label, fontSize)\r\n    {\r\n        if(label == null)\r\n            return;\r\n        let maxLength = fontSize * this.maxCharCount\r\n        if(label.node.width <= maxLength)\r\n            return;\r\n        label.fontSize = Math.floor(maxLength / label.node.width * fontSize);\r\n    }\r\n\r\n    public SetBackgroundChecked(state:boolean)\r\n    {\r\n        this.CheckSprite.node.active = state\r\n        this.UnCheckSprite.node.active = !state\r\n      \r\n    }\r\n    public SetToggleChecked()\r\n    {\r\n        this.toggle.isChecked =true\r\n        this.toggle.check()\r\n      \r\n    }\r\n    public SetUnReadActiveState(state:boolean)\r\n    {\r\n        this.Unread.node.active = state\r\n    }\r\n}\r\n"]}