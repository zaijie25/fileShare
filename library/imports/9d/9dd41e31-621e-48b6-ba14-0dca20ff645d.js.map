{"version":3,"sources":["assets\\ddz\\ddz\\scripts\\subView\\DdzSelfPlayView.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import DdzBaseView from \"./DdzBaseView\";\r\nimport DdzPokerView from \"./DdzPokerView\";\r\nimport DdzPokerPool from \"../tool/DdzPokerPool\";\r\nimport { DdzAudioConst } from \"../data/DdzPathHelper\";\r\nimport DdzRuleConst, { DdzMode } from \"../data/DdzRuleConst\";\r\nimport DdzDriver from \"../DdzDriver\";\r\nimport DdzGameConst from \"../data/DdzGameConst\";\r\n\r\n/**\r\n * 出牌的view\r\n */\r\nexport class DdzSelfPlayView extends DdzBaseView {\r\n    private touchLayer: cc.Node;\r\n    private offsetX: number = -87.5;\r\n    private maxWidth: number;\r\n    private maxHeight: number;\r\n    private toucheEnable: boolean;\r\n    private startIndex: number;\r\n    private endIndex: number;\r\n    private targetPokerList: DdzPokerView[] = [];\r\n    private validPokers: DdzPokerView[] = [];\r\n    private handPokerNode: cc.Node;\r\n    private pokerValueList: number[] = [];\r\n    private get validPokersCount() { return this.validPokers.length; }\r\n    private pokerHandList: DdzPokerView[] = [];\r\n    private PokerPool: DdzPokerPool;\r\n    private handSpaceX = 45;\r\n\r\n    constructor(node: cc.Node) {\r\n        super();\r\n        this.PokerPool = DdzDriver.instance.PokerPool;\r\n        this.setNode(node);\r\n    }\r\n\r\n    protected initView() {\r\n        super.initView();\r\n        this.touchLayer = this.getChild('touchLayer');\r\n        this.touchLayer.width = cc.Canvas.instance.node.width;\r\n        DdzGameConst.addCommonClick(this.touchLayer, \"\", ()=>{\r\n            Global.Audio.playGameBundleSound(DdzAudioConst.audioCommonPath + DdzAudioConst.CancelSelect, true);\r\n            this.resetPokers();\r\n            DdzDriver.instance.PlayRuleHelper.resetRecommendGen();\r\n        }, this);\r\n        this.handPokerNode = this.getChild('handPoker');\r\n        this.initPokerHand();\r\n        this.initChooseFunction();\r\n    }\r\n\r\n    private initPokerHand() {\r\n        let count = 20;\r\n        let pokerArr = this.PokerPool.getItemArr(count);\r\n        let posArr = this.getIndexPosArr(count);\r\n        for (let i = 0; i < count; i++) {\r\n            let pos = posArr[i];\r\n            let poker = pokerArr[i];\r\n            poker.node.setParent(this.handPokerNode);\r\n            poker.setPokerPosition(pos);\r\n            poker.active = false;\r\n            this.pokerHandList.push(poker);\r\n        }\r\n    }\r\n\r\n    public initChooseFunction() {\r\n        if (this.pokerHandList.length <= 0)\r\n            return;\r\n        [this.maxWidth, this.maxHeight] = this.pokerHandList[0].getPokerSize();\r\n        this.handPokerNode.height = this.maxHeight + this.Define.ChooseOffsetY;\r\n        this.setValidPokers();\r\n    }\r\n\r\n    public readyForChoose(isReady: boolean) {\r\n        if (isReady) {\r\n            // handPokerLayout大小要固定\r\n            this.handPokerNode.on(cc.Node.EventType.TOUCH_START, this.touchStart, this);\r\n            this.handPokerNode.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);\r\n            this.handPokerNode.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this);\r\n            this.handPokerNode.on(cc.Node.EventType.TOUCH_CANCEL, this.touchEnd, this);\r\n        }\r\n        else {\r\n            this.handPokerNode.targetOff(this);\r\n        }\r\n    }\r\n\r\n    public getIndexPosArr(count: number, isWorld = false) {\r\n        let tmp = [];\r\n        for (let i = 0; i < count; i++) {\r\n            let pos = cc.v2((i - Math.ceil(count / 2 - 1)) * this.handSpaceX, 0);\r\n            if (isWorld)\r\n                pos = this.handPokerNode.convertToWorldSpaceAR(pos);\r\n            tmp.push(pos);\r\n        }\r\n        return tmp;\r\n    }\r\n\r\n    public layoutHandPokers() {\r\n        this.setValidPokers();\r\n        let count = this.validPokers.length;\r\n        let posArr = this.getIndexPosArr(count);\r\n        for (let i = 0; i < this.validPokers.length; i++) {\r\n            let poker = this.validPokers[i];\r\n            poker.setPokerPosition(posArr[i]);\r\n            poker.setPokerDealPosX();\r\n            poker.nowIndex = i;\r\n        }\r\n    }\r\n\r\n    public setGroupPokersValue(arr = []) {\r\n        this.pokerValueList = this.PokerHelper.sortPokerArr(arr);\r\n    }\r\n\r\n    public showDealPokerIndex(index: number, count: number) {\r\n        let posArr = this.getIndexPosArr(count);\r\n        this.pokerHandList[index].active = true;\r\n        this.pokerHandList[index].isFront = true;\r\n        this.pokerHandList[index].setPokerPosition(posArr[index]);\r\n        this.pokerHandList[index].setPokerDealPos();\r\n        if (this.pokerValueList[index])\r\n            this.pokerHandList[index].pokerValue = this.pokerValueList[index];\r\n    }\r\n\r\n    public showLandlordPoker(arr = []) {\r\n        this.pokerValueList = this.PokerHelper.sortPokerArr(this.pokerValueList.concat(arr));\r\n        let cfg = DdzRuleConst.ModeConfig[this.Context.mode];\r\n        let handCount = cfg.baseCount + cfg.leftCount;\r\n        // if (this.pokerHandList.length != 20) {\r\n        //     Logger.error('地主手牌数量异常');\r\n        //     return;\r\n        // }\r\n        this.resetPokers();\r\n        let posArr = this.getIndexPosArr(handCount);\r\n        for (let i = 0; i < this.pokerHandList.length; i++) {\r\n            if (i < handCount){\r\n                let poker = this.pokerHandList[i];\r\n                let value = this.pokerValueList[i];\r\n                poker.active = true;\r\n                poker.isFront = true;\r\n                poker.pokerValue = value;\r\n                poker.setPokerPosition(posArr[i]);\r\n                poker.setPokerDealPos();\r\n                if (arr.indexOf(value) > -1) {\r\n                    let pos = poker.node.position;\r\n                    poker.doPokerMove(pos, cc.v3(pos.x, pos.y + this.Define.ChooseOffsetY), 0.1);\r\n                }\r\n            }\r\n        }\r\n        this.setValidPokers();\r\n        Game.Component.scheduleOnce(() => {\r\n            for (let i = 0; i < this.pokerHandList.length; i++) {\r\n                let poker = this.pokerHandList[i];\r\n                poker.resetSelect();\r\n            }\r\n            this.Context.clearSelectPokerCache();\r\n        }, this.Define.FlyDzIcon);\r\n    }\r\n\r\n    // 每局牌变动（包括地主牌） 需要设置下validPokers\r\n    public setValidPokers() {\r\n        this.validPokers = [];\r\n        this.validPokers = this.pokerHandList.filter((poker) => {\r\n            return poker.checkPokerValid();\r\n        });\r\n        this.validPokers.forEach((poker, index) => {\r\n            poker.setPokerDealPosX();   // debug setPokerDealPos已选中牌会导致 y设置默认坐标错误，故只需设置setPokerDealPosX\r\n            poker.nowIndex = index;\r\n        });\r\n        this.showDzOwnerSign();\r\n    }\r\n\r\n    private touchStart(event) {\r\n        this.toucheEnable = true;\r\n        let touchPos = event.getLocation();\r\n        this.startIndex = this.getChoosePokerIndex(touchPos);\r\n        // console.error(\"touchStart\", this.startIndex);\r\n        if (this.startIndex > -1) {\r\n            this.targetPokerList = [];\r\n            this.targetPokerList.push(this.validPokers[this.startIndex]);\r\n        }\r\n        else {\r\n            this.toucheEnable = false;\r\n            this.resetPokers();\r\n        }\r\n    }\r\n\r\n    private touchMove(event) {\r\n        if (!this.toucheEnable)\r\n            return;\r\n        let touchPos = event.getLocation();\r\n        this.endIndex = this.getChoosePokerIndex(touchPos);\r\n        // console.error(\"touchMove\", touchPos.toString(), this.endIndex);\r\n        if (this.endIndex == -1) {\r\n            return;\r\n        }\r\n        if ((this.startIndex >= 0 && this.endIndex >= 0)) {\r\n            let [min, max] = [Math.min(this.startIndex, this.endIndex), Math.max(this.startIndex, this.endIndex)];\r\n            this.targetPokerList = [];\r\n            for (let i = 0; i < this.validPokers.length; i++) {\r\n                const poker = this.validPokers[i];\r\n                if (i <= max && i >= min) {\r\n                    this.targetPokerList.push(poker);\r\n                    poker.setDragSign(true);\r\n                }\r\n                else {\r\n                    poker.setDragSign(false);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private touchEnd(event) {\r\n        // console.error(\"touchEnd\", this.targetPokerList.length);\r\n        let touchPos = event.getLocation();\r\n        this.endIndex = this.getChoosePokerIndex(touchPos);\r\n        if (this.endIndex == -1) {   // 滑动区域外留出额外的有效区域\r\n            let curX = touchPos.x;\r\n            let startX = event.getStartLocation().x;\r\n            let delta = (curX - startX) > 0 ? 1 : -1;\r\n            this.endIndex = this.getChoosePokerIndex(cc.v2(touchPos.x - delta * this.Define.PokerSlideValidOffsetX, touchPos.y));\r\n        }\r\n        if (this.targetPokerList.length > 0) {\r\n            Global.Audio.playGameBundleSound(DdzAudioConst.audioCommonPath + DdzAudioConst.SelectPoker, true);\r\n        }\r\n        else {\r\n            Global.Audio.playGameBundleSound(DdzAudioConst.audioCommonPath + DdzAudioConst.CancelSelect, true);\r\n        }\r\n\r\n        let curArr = [];\r\n        this.targetPokerList.forEach(poker => {\r\n            curArr.push(poker.pokerValue);\r\n            poker.setDragSign(false);\r\n            if (this.endIndex > -1) {     // 结束落点不在牌上，本次滑动不处理\r\n                poker.onSelect(true);\r\n                if (poker.isSelect) {\r\n                    this.Context.addSelectPoker(poker.pokerValue, poker.nowIndex);\r\n                }\r\n                else {\r\n                    this.Context.removeSelectPoker(poker.pokerValue, poker.nowIndex);\r\n                }\r\n            }\r\n        })\r\n        // 检测选牌中包含顺子就指定\r\n        let wantMap = this.PlayRuleHelper.searchStraight(curArr);\r\n        if (wantMap && !Global.Toolkit.isEmptyObject(wantMap)) {\r\n            this.resetPokers();\r\n            for (let key in wantMap) {\r\n                if (wantMap[key]) {\r\n                    let poker = this.targetPokerList[Number(key)];\r\n                    if (poker && poker.checkPokerValid()) {\r\n                        if (!poker.isSelect) {\r\n                            poker.onSelect(true);\r\n                        }\r\n                        this.Context.addSelectPoker(poker.pokerValue, poker.nowIndex);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        this.onReset();\r\n    }\r\n\r\n    private onReset() {\r\n        this.toucheEnable = false;\r\n        this.startIndex = -1;\r\n        this.endIndex = -1;\r\n        this.targetPokerList = [];\r\n    }\r\n\r\n    private getChoosePokerIndex(pos: cc.Vec2) {\r\n        for (let i = 0; i < this.validPokersCount; i++) {\r\n            let pokerPos = this.validPokers[i].getWorldPosition();\r\n            let posX = pokerPos.x;\r\n            if (!this.validPokers[i].checkIsTouch(pos))     // 可以优化\r\n                continue;\r\n            if (i == this.validPokersCount - 1) {\r\n                if (pos.x > (posX - this.maxWidth / 2) && pos.x < (posX + this.maxWidth / 2)) {\r\n                    return i;\r\n                }\r\n            }\r\n            if (pos.x > (posX - this.maxWidth / 2) && pos.x < (posX + this.maxWidth / 2 + this.offsetX)) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    public resetPokers() {\r\n        this.validPokers.forEach(poker => {\r\n            poker.setDragSign(false);\r\n            if (poker.isSelect) {\r\n                poker.onSelect();\r\n            }\r\n        });\r\n        this.Context.clearSelectPokerCache();\r\n    }\r\n\r\n    public hideAllPokers() {\r\n        this.pokerHandList.forEach(poker => {\r\n            poker.active = false;\r\n            if (poker.isSelect) {\r\n                poker.onSelect();\r\n            }\r\n            poker.reset();\r\n        })\r\n    }\r\n\r\n    public onPlayPokers(selectMap = {}) {\r\n        for (let key in selectMap) {\r\n            if (selectMap[key]) {\r\n                let poker = this.validPokers[Number(key)];\r\n                if (poker && poker.checkPokerValid())\r\n                    poker.active = false;\r\n            }\r\n        }\r\n        this.layoutHandPokers();\r\n    }\r\n\r\n    public onPromptPokers(pokerMap = {}) {\r\n        this.resetPokers();\r\n        Global.Audio.playGameBundleSound(DdzAudioConst.audioCommonPath + DdzAudioConst.SelectPoker, true);\r\n        for (let key in pokerMap) {\r\n            if (pokerMap[key]) {\r\n                let poker = this.validPokers[Number(key)];\r\n                if (poker && poker.checkPokerValid()) {\r\n                    if (!poker.isSelect) {\r\n                        poker.onSelect(true);\r\n                    }\r\n                    this.Context.addSelectPoker(poker.pokerValue, poker.nowIndex);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public showDzOwnerSign() {\r\n        let dzLocalSeat = this.Context.get(this.Define.FieldDzLocSeat);\r\n        if (dzLocalSeat == 0 && this.validPokersCount > 0) {\r\n            this.validPokers[this.validPokers.length - 1].setDzOwner(true);\r\n        }\r\n    }\r\n\r\n    public getPokerArrMap(arr = []) {\r\n        let tmp = {};\r\n        this.validPokers.forEach((poker, index) => {\r\n            if (arr.indexOf(poker.pokerValue) > -1)\r\n                tmp[index] = poker.pokerValue;\r\n        });\r\n        return tmp;\r\n    }\r\n\r\n    /**\r\n     * 用于手动出牌和自动出牌临界状态时刷新手牌\r\n     */\r\n    public refreshHandPokersOnErr() {\r\n        this.Context.clearSelectPokerCache();\r\n        this.hideAllPokers();\r\n        let leftPokers = this.Context.getSelfHandPokers();\r\n        let count = leftPokers.length;\r\n        this.setGroupPokersValue(leftPokers);\r\n        leftPokers.forEach((value, index) => {\r\n            this.showDealPokerIndex(index, count);\r\n        })\r\n        this.layoutHandPokers();\r\n    }\r\n\r\n    public clearByRound() {\r\n        this.resetPokers();\r\n        this.hideAllPokers();\r\n        this.PlayRuleHelper.clearRecommend();\r\n    }\r\n\r\n    public clearByGame() {\r\n        this.readyForChoose(false);\r\n        this.clearByRound();\r\n    }\r\n}"]}