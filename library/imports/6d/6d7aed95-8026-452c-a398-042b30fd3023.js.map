{"version":3,"sources":["assets\\hall\\scripts\\framework\\module\\ModuleManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { ModuleBase } from \"./ModuleBase\";\r\nimport { JSUtil } from \"../../logic/core/tool/JSUtil\";\r\nimport WndBase from \"../../logic/core/ui/WndBase\";\r\n\r\nexport class ModuleManager {\r\n\r\n    loadSkinModuleCfg(cfg: string[]) {\r\n        if (!cfg || cfg.length == 0) {\r\n            Logger.error(\"loadSkinModuleCfg cfg == null\")\r\n            return;\r\n        }\r\n        for (let i = 0; i < cfg.length; i++) {\r\n            let moduleName = cfg[i];\r\n            JSUtil.importCls(moduleName).then((module)=>{\r\n                // console.error(\"loadModule \" + moduleName)\r\n                this.loadModule(new module())\r\n            })\r\n        }\r\n    }\r\n\r\n    loadModule(cfg: ModuleBase) {\r\n        let viewClass = cfg.viewClass\r\n        let modelClass = cfg.modelClass;\r\n        let children = cfg.children\r\n        let prefabPaths = cfg.prefabPaths\r\n        //先加载model\r\n        let model = null\r\n        let rootView = null\r\n        if (modelClass){\r\n            JSUtil.importCls(modelClass).then((modelModule) => {\r\n                model = modelModule\r\n                new modelModule()\r\n                return JSUtil.importCls(viewClass)\r\n            }).then((viewModule) => {\r\n                if (JSUtil.isChildClassOf(viewModule, WndBase)) {\r\n                    rootView = viewModule\r\n                    new viewModule()\r\n                    if (children && children.length > 0) {\r\n                        this.loadSubViews(children, viewClass)\r\n                    }\r\n                }\r\n            })\r\n        }else {\r\n            JSUtil.importCls(viewClass).then((viewModule) => {\r\n                if (JSUtil.isChildClassOf(viewModule, WndBase)) {\r\n                    rootView = viewModule\r\n                    new viewModule()\r\n                    if (children && children.length > 0) {\r\n                        this.loadSubViews(children, viewClass)\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    loadSubViews(views: ModuleBase[], parent: string = \"\") {\r\n        if (views && views.length > 0) {\r\n            for (let i = 0; i < views.length; i++) {\r\n                let subModelBase: ModuleBase = views[i]\r\n                let viewClass = subModelBase.viewClass\r\n                let modelClass = subModelBase.modelClass\r\n                let children = subModelBase.children\r\n                let prefabPaths = subModelBase.prefabPaths\r\n                if (modelClass) {\r\n                    JSUtil.importCls(modelClass).then((modelModule) => {\r\n                        new modelModule()\r\n                        return JSUtil.importCls(viewClass)\r\n                    }).then((viewModule) => {\r\n                        if (JSUtil.isChildClassOf(viewModule, WndBase)) {\r\n                            new viewModule()\r\n                        } else {\r\n                            let parentView = Global.UI.getWindow(parent)\r\n                            parentView.addView(viewClass, parentView.node, viewModule)\r\n                        }\r\n\r\n                        if (children && children.length > 0) {\r\n                            this.loadSubViews(children, viewClass)\r\n                        }\r\n                    })\r\n                } else {\r\n                    JSUtil.importCls(viewClass).then((viewModule) => {\r\n                        if (JSUtil.isChildClassOf(viewModule, WndBase)) {\r\n                            new viewModule()\r\n                        } else {\r\n                            let parentView = Global.UI.getWindow(parent)\r\n                            parentView.addView(viewClass, parentView.node, viewModule)\r\n                        }\r\n\r\n                        if (children && children.length > 0) {\r\n                            this.loadSubViews(children, viewClass)\r\n                        }\r\n                    })\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n}"]}