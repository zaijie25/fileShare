{"version":3,"sources":["assets\\hall\\scripts\\logic\\hallcommon\\model\\WaitingModel.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,gEAA2D;AAC3D,sDAAiD;AAEjD,wBAAwB;AACxB;IAA0C,gCAAS;IAAnD;QAAA,qEAsEC;QApEG,eAAe;QACR,+BAAyB,GAAG,2BAA2B,CAAA;QACvD,0BAAoB,GAAG,EAAE,CAAC;QAOzB,iBAAW,GAAY,EAAE,CAAA;;IA2DrC,CAAC;IAhEG,sBAAW,8BAAI;aAAf;YAEI,OAAO,cAAc,CAAC;QAC1B,CAAC;;;OAAA;IAIS,6BAAM,GAAhB;QAEI,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,qBAAW,CAAC,gBAAgB,EAAE,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,CAAA;QACvE,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,qBAAW,CAAC,gBAAgB,EAAE,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,CAAA;QACvE,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,qBAAW,CAAC,kBAAkB,EAAE,IAAI,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAA;IAChF,CAAC;IAGO,oCAAa,GAArB,UAAsB,GAAG,EAAE,OAAO,EAAE,KAAU,EAAE,OAAW,EAAC,UAAiB;QAAzC,sBAAA,EAAA,UAAU;QAAE,wBAAA,EAAA,WAAW;QAAC,2BAAA,EAAA,iBAAiB;QAEzE,2BAA2B;QAC3B,IAAG,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACrB,OAAO,GAAE,IAAI,CAAC,oBAAoB,CAAC;QAEvC,IAAI,WAAW,GAAG,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;QACvD,IAAG,IAAI,CAAC,WAAW,CAAC,MAAM,IAAI,CAAC,IAAI,WAAW,IAAI,IAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,EAC/E;YACI,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,eAAe,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAC,UAAU,CAAC,CAAC;SACvE;QACD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,yBAAyB,EAAE,OAAO,CAAC,CAAC;QACpD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC/B,CAAC;IAEO,oCAAa,GAArB,UAAsB,GAAG,EAAE,KAAa;QAAb,sBAAA,EAAA,aAAa;QAEpC,IAAG,KAAK,EACR;YACI,IAAI,CAAC,WAAW,GAAG,EAAE,CAAA;SACxB;aAED;YACI,KAAI,IAAI,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EACpD;gBACI,IAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,GAAG;oBACzB,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aACrC;SACJ;QACD,IAAG,IAAI,CAAC,WAAW,CAAC,MAAM,IAAI,CAAC,EAC/B;YACI,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;SACpC;IACL,CAAC;IAEO,uCAAgB,GAAxB;QAEI,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;IACrC,CAAC;IAEM,kCAAW,GAAlB;QAEI,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;IAC1B,CAAC;IAEM,qCAAc,GAArB;QACI,OAAO,IAAI,CAAC,WAAW,IAAI,EAAE,CAAC;IAClC,CAAC;IACL,mBAAC;AAAD,CAtEA,AAsEC,CAtEyC,mBAAS,GAsElD","file":"","sourceRoot":"/","sourcesContent":["import ModelBase from \"../../../framework/model/ModelBase\";\r\nimport GlobalEvent from \"../../core/GlobalEvent\";\r\n\r\n//控制网络loading界面显示和重连界面显示\r\nexport default class WaitingModel extends ModelBase\r\n{\r\n    //waiting自动关闭时间\r\n    public EVENT_UPDATE_WAITING_TIME = \"EVENT_UPDATE_WAITING_TIME\"\r\n    public DEFAULT_WAITING_TIME = 15;\r\n\r\n    public get Name()\r\n    {\r\n        return \"WaitingModel\";\r\n    }\r\n\r\n    private waitingList:string[] = []\r\n\r\n    protected onInit()\r\n    {\r\n        Global.Event.on(GlobalEvent.SHOW_NET_WAITING, this, this.onShowWaiting)\r\n        Global.Event.on(GlobalEvent.HIDE_NET_WAITING, this, this.onHideWaiting)\r\n        Global.Event.on(GlobalEvent.FORCE_HIDE_WAITING, this, this.forceHideWaiting)\r\n    }\r\n\r\n\r\n    private onShowWaiting(key, maxTime, value = \"\", minTime = 1,enableMask = true)\r\n    {\r\n        //cc.error(\"add key\", key);\r\n        if(isNaN(Number(maxTime)))\r\n            maxTime =this.DEFAULT_WAITING_TIME;\r\n\r\n        let waitingList = Global.UI.getWindow(\"WndNetWaiting\");\r\n        if(this.waitingList.length == 0 || waitingList == null || !waitingList.isLoaded)\r\n        {\r\n            Global.UI.show(\"WndNetWaiting\", maxTime, value, minTime,enableMask);\r\n        }\r\n        this.event(this.EVENT_UPDATE_WAITING_TIME, maxTime);\r\n        this.waitingList.push(key);\r\n    }\r\n\r\n    private onHideWaiting(key, force = false)\r\n    {\r\n        if(force)\r\n        {\r\n            this.waitingList = []\r\n        }\r\n        else\r\n        {\r\n            for(let i = this.waitingList.length - 1; i >= 0; i--)\r\n            {\r\n                if(this.waitingList[i] == key)\r\n                    this.waitingList.splice(i, 1);\r\n            }\r\n        }\r\n        if(this.waitingList.length == 0)\r\n        {\r\n            Global.UI.close(\"WndNetWaiting\");\r\n        }\r\n    }\r\n\r\n    private forceHideWaiting()\r\n    {\r\n        this.waitTimeOut();\r\n        Global.UI.close(\"WndNetWaiting\");\r\n    }\r\n\r\n    public waitTimeOut()\r\n    {\r\n        this.waitingList = [];\r\n    }\r\n\r\n    public getWaitingList() {\r\n        return this.waitingList || [];\r\n    }\r\n}"]}