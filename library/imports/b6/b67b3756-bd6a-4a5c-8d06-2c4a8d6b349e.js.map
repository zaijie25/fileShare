{"version":3,"sources":["assets\\hall\\scripts\\logic\\core\\component\\ScreenShakeAction.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;IAA+C,qCAAiB;IAS5D,2BAAY,QAAgB,EAAE,cAAsB,EAAE,cAAsB;QAA5E,YACI,iBAAO,SAGV;QAZD,SAAS;QACC,oBAAc,GAAY,IAAI,CAAC;QACzC,QAAQ;QACE,wBAAkB,GAAG,CAAC,CAAC;QACjC,QAAQ;QACE,wBAAkB,GAAG,CAAC,CAAC;QACjC,MAAM;QACI,cAAQ,GAAG,CAAC,CAAC;QAGnB,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,KAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAC,cAAc,EAAC,cAAc,CAAC,CAAC;;IAClE,CAAC;IAES,4CAAgB,GAA1B,UAA2B,QAAgB,EAAE,cAAsB,EAAE,cAAsB;QACvF,iBAAM,gBAAgB,WAAE,CAAC;QACzB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QAC3B,IAAI,CAAC,kBAAkB,GAAG,cAAc,CAAC;QACzC,IAAI,CAAC,kBAAkB,GAAG,cAAc,CAAC;IAC7C,CAAC;IAED,aAAa;IACH,6CAAiB,GAA3B,UAA4B,GAAW,EAAE,GAAW;QAChD,OAAO,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,GAAE,GAAG,GAAE,CAAC,CAAC,GAAG,GAAG,CAAC;IAC/C,CAAC;IAES,kCAAM,GAAhB,UAAiB,EAAE;QACf,IAAI,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,kBAAkB,CAAC,GAAG,EAAE,CAAC;QAC3F,IAAI,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,kBAAkB,CAAC,GAAG,EAAE,CAAC;QAC3F,IAAI,CAAC,SAAS,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAC,KAAK,CAAC,CAAC,CAAC,CAAA;IAC7E,CAAC;IAED,2CAAe,GAAf,UAAgB,MAAM;QAClB,iBAAM,eAAe,YAAC,MAAM,CAAC,CAAC;QAC9B,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC;IAC/C,CAAC;IAED,gCAAI,GAAJ;QACI,IAAI,CAAC,SAAS,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IACtD,CAAC;IACL,wBAAC;AAAD,CAzCA,AAyCC,CAzC8C,EAAE,CAAC,cAAc,GAyC/D","file":"","sourceRoot":"/","sourcesContent":["export default class ScreenShakeAction extends cc.ActionInterval{\r\n    // 节点初始位置\r\n    protected nodeInitialPos: cc.Vec2 = null;\r\n    //X轴抖动幅度\r\n    protected nodeShakeStrengthX = 0;\r\n    //Y轴抖动幅度\r\n    protected nodeShakeStrengthY = 0;\r\n    //抖动时间\r\n    protected duration = 0;\r\n    constructor(duration: number, shakeStrengthX: number, shakeStrengthY: number){\r\n        super();\r\n        this.duration = duration;\r\n        this.initWithDuration(duration,shakeStrengthX,shakeStrengthY);\r\n    }\r\n\r\n    protected initWithDuration(duration: number, shakeStrengthX: number, shakeStrengthY: number){\r\n        super.initWithDuration();\r\n        this.setDuration(duration);\r\n        this.nodeShakeStrengthX = shakeStrengthX;\r\n        this.nodeShakeStrengthY = shakeStrengthY;\r\n    }\r\n\r\n    // 获取两个数间的随机值\r\n    protected getRandomStrength(min: number, max: number){\r\n        return Math.random() * (max -min +1) + min;\r\n    }\r\n\r\n    protected update(dt){\r\n        var randX = this.getRandomStrength(-this.nodeShakeStrengthX, this.nodeShakeStrengthX) * dt;\r\n        var randY = this.getRandomStrength(-this.nodeShakeStrengthY, this.nodeShakeStrengthY) * dt;\r\n        this.getTarget().setPosition(this.nodeInitialPos.add(cc.v2(randX,randY)))\r\n    }\r\n\r\n    startWithTarget(target){\r\n        super.startWithTarget(target);\r\n        this.nodeInitialPos = target.getPosition();\r\n    }\r\n\r\n    stop(){\r\n        this.getTarget().setPosition(this.nodeInitialPos);\r\n    }\r\n}"]}