{"version":3,"sources":["assets\\hall\\scripts\\framework\\section\\SectionManager.ts"],"names":[],"mappings":";;;;;;AAEA;;GAEG;AACH;IAYI;QAVQ,cAAS,GAA2B,EAAE,CAAC;IAY/C,CAAC;IATD,sBAAkB,0BAAQ;aAA1B;YACI,IAAG,cAAc,CAAC,SAAS,IAAI,IAAI,EAAE;gBACjC,cAAc,CAAC,SAAS,GAAG,IAAI,cAAc,EAAE,CAAC;aACnD;YACD,OAAO,cAAc,CAAC,SAAS,CAAC;QACpC,CAAC;;;OAAA;IAMD;;;OAGG;IACI,mCAAU,GAAjB,UAAkB,WAAkB;QAChC,IAAG,WAAW,IAAI,IAAI,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,EAChD;YACI,MAAM,CAAC,KAAK,CAAC,4EAA4E,CAAC,CAAC;YAC3F,OAAO,IAAI,CAAC;SACf;QACD,OAAO,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,IAAI,CAAC;IAC/C,CAAC;IAEM,wCAAe,GAAtB,UAAuB,WAAkB;QAErC,IAAI,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;QAC1C,IAAG,CAAC,OAAO,CAAC,MAAM,EAClB;YACI,OAAO,CAAC,YAAY,EAAE,CAAC;YACvB,OAAO,CAAC,UAAU,EAAE,CAAC;YACrB,OAAO,CAAC,YAAY,EAAE,CAAC;YACvB,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC;SACzB;QACD,OAAO,CAAC,IAAI,EAAE,CAAA;IAClB,CAAC;IAEM,iCAAQ,GAAf,UAAgB,WAAkB,EAAE,OAAgB;QAChD,IAAG,OAAO,IAAI,IAAI,EAAE;YAChB,MAAM,CAAC,KAAK,CAAC,wDAAwD,CAAC,CAAC;YACvE,OAAO,KAAK,CAAC;SAChB;QACD,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,GAAG,OAAO,CAAC;QACtC,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,mCAAU,GAAjB,UAAkB,WAAkB;QAChC,IAAG,WAAW,IAAI,IAAI,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,EAChD;YACI,MAAM,CAAC,KAAK,CAAC,4EAA4E,CAAC,CAAC;YAC3F,OAAO,IAAI,CAAC;SACf;QACD,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC;IACvC,CAAC;IAEM,sCAAa,GAApB;QACI,KAAI,IAAI,GAAG,IAAI,IAAI,CAAC,SAAS,EAAE;YAC3B,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;SACxB;QACD,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACxB,CAAC;IAEL,qBAAC;AAAD,CAnEA,AAmEC,IAAA","file":"","sourceRoot":"/","sourcesContent":["import ISection from \"./ISection\";\r\n\r\n/**\r\n * 把整个游戏分成多个阶段,每个阶段的管理器\r\n */\r\nexport default class SectionManager\r\n{\r\n    private sctionMap:{[key:string]:ISection} = {};\r\n\r\n    private static _instance:SectionManager;\r\n    public static get Instance() {\r\n        if(SectionManager._instance == null) {\r\n            SectionManager._instance = new SectionManager();\r\n        }\r\n        return SectionManager._instance;\r\n    }\r\n\r\n    protected constructor() {\r\n\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param sectionName \r\n     */\r\n    public hasSection(sectionName:string) {\r\n        if(sectionName == null && sectionName.length < 1)\r\n        {\r\n            Logger.error(\"SectionManager::getSection() sectionName == null || sectionName.length < 1\");\r\n            return null;\r\n        }\r\n        return this.sctionMap[sectionName] != null;    \r\n    }\r\n\r\n    public callSectionInit(sectionName:string)\r\n    {\r\n        let section = this.sctionMap[sectionName];\r\n        if(!section.isInit)\r\n        {\r\n            section.declareModel();\r\n            section.declareWnd();\r\n            section.loadLanguage();\r\n            section.isInit = true;\r\n        }\r\n        section.init()\r\n    }\r\n\r\n    public register(sectionName:string, section:ISection) {\r\n        if(section == null) {\r\n            Logger.error(\"SectionManager::register() section == null, return!!!!\");\r\n            return false;\r\n        }\r\n        this.sctionMap[sectionName] = section;\r\n        return true;\r\n    }\r\n\r\n    public unregister(sectionName:string) {\r\n        if(sectionName == null && sectionName.length < 1)\r\n        {\r\n            Logger.error(\"SectionManager::unregister() sectionName == null || sectionName.length < 1\");\r\n            return null;\r\n        }\r\n        this.sctionMap[sectionName] = null;\r\n    }\r\n\r\n    public unregisterAll() {\r\n        for(let key in this.sctionMap) {\r\n            this.unregister(key);\r\n        }\r\n        this.sctionMap = {};\r\n    }\r\n\r\n}"]}