{"version":3,"sources":["assets\\hall\\scripts\\logic\\core\\ui\\ViewBase.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import EventDispatcher from \"../../../framework/event/EventDispatcher\";\r\nimport { DestoryType } from \"./WndBase\";\r\n\r\nexport default class ViewBase\r\n{\r\n    public node:cc.Node;\r\n\r\n    //子view的key  wnd不适用\r\n    public viewKey:string;\r\n\r\n    //private resPath :string\r\n    protected viewList:ViewBase[] = [];\r\n\r\n    \r\n    protected _subViewState \r\n    /**\r\n     * 子view的显示隐藏状态\r\n     */\r\n    public get subViewState()\r\n    {\r\n        return this._subViewState\r\n    }\r\n\r\n    /**\r\n     * 子view状态 true 显示 false 隐藏 \r\n     */\r\n    public set subViewState(value) {\r\n        if(this._subViewState == value)\r\n        {\r\n            return\r\n        }\r\n        this._subViewState = value\r\n        if (this.loadingState != LoadingState.Loaded || !cc.isValid(this.node)) {\r\n            return\r\n        }\r\n\r\n        this.node.active = value\r\n\r\n        if (value) {\r\n            this.onSubViewShow()\r\n        }\r\n        else {\r\n            this.onSubViewHide()\r\n        }\r\n    }\r\n\r\n    protected _loadingState:LoadingState = LoadingState.None\r\n\r\n\r\n    /**\r\n     * 子view加载状态\r\n     */\r\n    set loadingState (state:LoadingState)\r\n    {\r\n        /**\r\n         * 如果加载完成时subViewState为true则说明 需要显示\r\n         */\r\n        if(this.subViewState == true && state == LoadingState.Loaded)\r\n        {\r\n            this.onSubViewShow()\r\n            if(cc.isValid(this.node))\r\n            {\r\n                this.node.active = true\r\n            }\r\n            \r\n        }\r\n        this._loadingState = state\r\n    }\r\n\r\n     /**\r\n     * 子view加载状态\r\n     */\r\n    get loadingState()\r\n    {\r\n        return this._loadingState\r\n    }\r\n\r\n   \r\n\r\n    //内部事件  负责组件之间同信  wnd创建 传递给子view\r\n    protected internalEvent:EventDispatcher;\r\n\r\n    protected _active = false;\r\n    \r\n    public set active(value) {\r\n        this._active = value;\r\n        if (this.node && cc.isValid(this.node)) {\r\n            this.node.active = value;\r\n        }\r\n    }\r\n\r\n    public get active() {\r\n        return this._active;\r\n    }\r\n\r\n    public setNode(node:cc.Node)\r\n    {\r\n        if(node == null)\r\n            return;\r\n        this.node = node;\r\n        this.initView();\r\n    }\r\n\r\n    //界面加载完后初始化\r\n    protected initView()\r\n    {}\r\n    //面板打开回调\r\n    protected onOpen(args?:any[])\r\n    {}\r\n    //界面关闭时回调\r\n    protected onClose()\r\n    {}\r\n\r\n    //界面销毁\r\n    protected onDispose()\r\n    {}\r\n\r\n    protected onSubViewShow()\r\n    {\r\n       \r\n    }\r\n\r\n    protected onSubViewHide()\r\n    {\r\n       \r\n    }\r\n    \r\n\r\n    public getComponent<T extends cc.Component>(path:string, type:any):T\r\n    {\r\n        if(this.node == null)\r\n            return null;\r\n        if(path == \"\" || path == null)\r\n            return this.node.getComponent(type);\r\n        let node = cc.find(path, this.node);\r\n        if(node == null)\r\n            return null;\r\n        return node.getComponent(type);\r\n    }\r\n\r\n    public getChild(path:string):cc.Node\r\n    {\r\n        if (path === \"\"){\r\n            return this.node;\r\n        }\r\n        return cc.find(path, this.node);\r\n    }\r\n\r\n    protected addCommonClick(path:string, callback:Function, target?:any, transition = cc.Button.Transition.SCALE, time?:number)\r\n    {\r\n        return Global.UIHelper.addCommonClick(this.node, path, callback, target, transition, time);\r\n    }\r\n\r\n    public addView(key:string, node:cc.Node, viewClass, active = null)\r\n    {\r\n        let view = this.getView(key)\r\n        if( view != null)\r\n        {\r\n            Logger.error(\"重复注册子View\");\r\n            return view;\r\n        }\r\n        if(node == null)\r\n        {\r\n            Logger.error(\"没有给子View设置节点\");\r\n            return;\r\n        }\r\n        view = new viewClass();\r\n        view.internalEvent = this.internalEvent;\r\n        view.setNode(node);\r\n        view.loadingState = LoadingState.Loaded\r\n        view.viewKey = key;\r\n        this.viewList.push(view);\r\n\r\n        if(active != null)\r\n        {\r\n            view.subViewState = active;\r\n        }\r\n        return view\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param subViewPath key 跟预设资源的映射\r\n     * @param viewKeyTypeMap key 跟类型的预设\r\n     * @param parentNode 子view的父节点\r\n     */\r\n    initSubView(subViewPath,viewKeyTypeMap,parentNode) {\r\n        if(!subViewPath || !viewKeyTypeMap || !parentNode)\r\n        {\r\n            return\r\n        }\r\n        let frameLoadingKey = []\r\n        for (let key in subViewPath) {\r\n            if (subViewPath.hasOwnProperty(key)) {\r\n                frameLoadingKey.push(key)\r\n            }\r\n        }\r\n        return new Promise(resolve => {\r\n            let execute = async () => {\r\n                while (frameLoadingKey.length > 0) {\r\n                    let loadingKey = frameLoadingKey.shift()\r\n                    let path = null\r\n                    if (subViewPath.hasOwnProperty(loadingKey)) {\r\n                        path = subViewPath[loadingKey]\r\n                    }\r\n                    this[loadingKey] = await this.addSubView(loadingKey, viewKeyTypeMap[loadingKey],path,parentNode);\r\n                }\r\n                resolve()\r\n            };\r\n            // 运行执行函数\r\n            execute();\r\n        });\r\n\r\n    }\r\n\r\n    /**\r\n     * 初始化子View组件 不含node\r\n     */\r\n    public initSubViewClass(viewKeyTypeMap:any)\r\n    {\r\n        if(!viewKeyTypeMap)\r\n        {\r\n            return\r\n        }\r\n        for (let key in viewKeyTypeMap) {\r\n            if (viewKeyTypeMap.hasOwnProperty(key)) {\r\n                this[key] = this.initOneSubView(key,viewKeyTypeMap[key])\r\n            }\r\n        }\r\n    }\r\n\r\n    public initOneSubView(key,viewClass)\r\n    {\r\n        let view = this.getView(key)\r\n        if( view != null)\r\n        {\r\n            Logger.error(\"重复注册子View\");\r\n            return view;\r\n        }\r\n        view = new viewClass();\r\n        view.internalEvent = this.internalEvent;\r\n        view.viewKey = key;\r\n        this.viewList.push(view);\r\n        return view\r\n    }\r\n\r\n    /**\r\n     * 初始化子view含Node\r\n     * @param key viewKey\r\n     * @param viewClass 子view类\r\n     * @param path 预设资源路径\r\n     * @param parentNode 子view父节点\r\n     */\r\n    public async addSubView(key:string,viewClass,path:string,parentNode:cc.Node)\r\n    {\r\n        let view = this.getView(key)\r\n        if( view == null)\r\n        {\r\n            view = new viewClass();\r\n            view.internalEvent = this.internalEvent;\r\n            view.viewKey = key;\r\n            this.viewList.push(view);\r\n        }\r\n        view.loadingState = LoadingState.Loading\r\n        let node = await  this.getSubView(path) as cc.Node\r\n        if (!node) {\r\n            return null  \r\n        }\r\n        view.setNode(node)\r\n        node.active = false\r\n        parentNode.addChild(node)\r\n        view.loadingState = LoadingState.Loaded\r\n        return view\r\n    }\r\n\r\n    \r\n    /**\r\n     * \r\n     * @param path 加载子View的预设的资源路径\r\n     * @param viewKey 子view的viewKey\r\n     */\r\n    public  async getSubView(path:string)\r\n    {\r\n        if(!path)\r\n        {\r\n            return\r\n        }\r\n        return  await this.loadOneNode(path)\r\n    }\r\n   \r\n    loadOneNode(path) \r\n    {\r\n        return new Promise( resolve =>{\r\n            let execute = ()=>{\r\n                Global.ResourceManager.loadRes(path, (error, prefab) => {\r\n                    if (error != null) {\r\n                        Logger.error(path, \"加载失败\");\r\n                    }\r\n                    let node: cc.Node = cc.instantiate(prefab);\r\n                    if (cc.isValid(node)) {\r\n                        resolve(node) \r\n                    }\r\n                })\r\n            }\r\n            execute()\r\n        })\r\n       \r\n    }\r\n\r\n    public getView(key:string):ViewBase\r\n    {\r\n        for(let i = 0; i < this.viewList.length; i++)\r\n        {\r\n            if(this.viewList[i].viewKey == key)\r\n            {\r\n                return this.viewList[i];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public open(args?:any[])\r\n    {\r\n        if(!this.active)\r\n            return;\r\n        this.onOpen(args);\r\n    }\r\n\r\n    public tryOpen(args?:any[])\r\n    {\r\n        this.onOpen(args);\r\n    }\r\n\r\n    public dispose()\r\n    {\r\n        this.onDispose();\r\n        this.callAllView(\"onDispose\");\r\n        this.viewList = [];\r\n    }\r\n \r\n    \r\n\r\n    public resetState()\r\n    {\r\n\r\n    }\r\n    \r\n    /**\r\n     * 关闭本界面所有子view\r\n     * @param subView 显示的子view\r\n     */\r\n    closeAllSubView(subView?:ViewBase)\r\n    {\r\n        for(let i = 0; i < this.viewList.length; i++)\r\n        {\r\n            let view = this.viewList[i];\r\n            if(view)\r\n            {\r\n                view.subViewState = view == subView\r\n                view.realClose()\r\n            }\r\n        }\r\n    }\r\n\r\n    //所有子view调用方法\r\n    public callAllView(funcName:string, ...args)\r\n    {\r\n        for(let i = 0; i < this.viewList.length; i++)\r\n        {\r\n            let view = this.viewList[i];\r\n            if(view[funcName])\r\n            {\r\n                view[funcName].apply(view, args);\r\n            }\r\n            if(view)\r\n            {\r\n                view.callAllView(funcName,args)\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    realClose()\r\n    {\r\n        for(let i = 0; i < this.viewList.length; i++)\r\n        {\r\n            let view = this.viewList[i];\r\n            if(view)\r\n            {\r\n                view.subViewState = false\r\n                view.realClose()\r\n            }\r\n        }\r\n    }\r\n    \r\n\r\n\r\n    //调用单个组件方法\r\n    public callView(key:string, funcName:string, ...args)\r\n    {\r\n        let view = this.getView(key);\r\n        if(view == null)\r\n        {\r\n            Logger.error(\"找不到view\", key);\r\n            return null;\r\n        }\r\n        if(view[funcName])\r\n        {\r\n            return view[funcName].apply(view, args);\r\n        }\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport enum LoadingState\r\n{\r\n    None = 1,\r\n    Loading = 2,\r\n    Loaded = 3\r\n    \r\n}"]}