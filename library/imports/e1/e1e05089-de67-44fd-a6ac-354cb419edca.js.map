{"version":3,"sources":["assets\\hall\\scripts\\logic\\core\\game\\GameServer.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import EventDispatcher from \"../../../framework/event/EventDispatcher\";\r\nimport SocketHelper from \"./serverHelper/SocketHelper\";\r\nimport HandlerHelper from \"./serverHelper/HandlerHelper\";\r\nimport GameErrorHelper from \"./serverHelper/GameErrorHelper\";\r\nimport BaseServerHelper from \"./serverHelper/BaseServerHelper\";\r\nimport ReconnectHelper from \"./serverHelper/ReconnectHelper\";\r\nimport GameHeartBeatHelper from \"./serverHelper/GameHeartBeatHelper\";\r\nimport ServerRoutes, { ServerRouteInfo, ServerUrl } from \"../setting/ServerRoutes\";\r\nimport { HallErrorHelper } from \"../net/hall/HallErrorHandler\";\r\n// import * as ByteBuffer from \"bytebuffer\";\r\nimport CheckHelper from \"../net/hall/CheckHelper\";\r\nimport GameCommand from \"./CommandDefine\";\r\nimport CallbackHandlerHelper, { CallbackInfo } from \"./serverHelper/CallbackHandlerHelper\";\r\n\r\nenum MessageState\r\n{\r\n    IgnoreAll = 0,   //在收到自己leave  到发送enter之间  收到的协议全部忽略\r\n    PassSSSAndEnter = 1,   //只接收sss（正常流程）和    enter（主要处理enter失败） add wait_match(pvp进桌前匹配玩家)\r\n    PassAll = 2,    //接收所有协议\r\n}\r\n\r\n\r\nexport default class GameServer extends EventDispatcher\r\n{\r\n    //网络内部事件\r\n    public static Event_GameSocketMsg = \"Event_GameSocketMsg\";\r\n    public static Event_GameSocketOpen = \"Event_GameSocketOpen\";\r\n    public static Event_GameSocketClose = \"Event_GameSocketClose\";\r\n    //Protobuf协议\r\n    public static Event_GamePBSocketMsg = \"Event_GamePBSocketMsg\";\r\n    public static Event_GameSocketStartConnect = \"Event_GameSocketStartConnect\";\r\n    //sock重连请求\r\n    public static Event_GameSocketCallReconnect = \"Event_GameSocketReconnect\";\r\n\r\n    private handleHelperKey = \"handlerHelper\";\r\n    private socketHelperKey = \"socketHelper\";\r\n    private errorHelperKey = \"gameErrorHelper\";\r\n    private reconnectHelperKey = \"reconnectHelperKey\";\r\n    private heartBeatHelperKey = \"heartbeatHelperKey\";\r\n    private callbackHelperKey = \"callbackHelperKey\";\r\n\r\n    private helperMap = {};\r\n\r\n    //服务器使用数据\r\n    private dst:any = {};\r\n\r\n    //服务器使用\r\n    private mod:string;\r\n\r\n    private checker = 0;\r\n\r\n\r\n    //消息队列\r\n    private msgQueue = [];\r\n    //锁列表\r\n    private lockList = [];\r\n\r\n    public isRunning = false;\r\n\r\n    //服务器验证数据\r\n    private lastSN = -1;\r\n\r\n    public msgState:MessageState = MessageState.PassAll;\r\n\r\n    //通用协议错误处理 （业务逻辑错误）\r\n    private errorHelper: HallErrorHelper = new HallErrorHelper();\r\n\r\n    public checkHelper:CheckHelper = new CheckHelper(2);\r\n\r\n    public setup()\r\n    {\r\n        this.registHelper(this.socketHelperKey, new SocketHelper(this));\r\n        this.registHelper(this.handleHelperKey, new HandlerHelper(this));\r\n        this.registHelper(this.errorHelperKey, new GameErrorHelper(this));\r\n        this.registHelper(this.reconnectHelperKey, new ReconnectHelper(this));\r\n        this.registHelper(this.heartBeatHelperKey, new GameHeartBeatHelper(this));\r\n        this.registHelper(this.callbackHelperKey, new CallbackHandlerHelper(this));\r\n        this.on(GameServer.Event_GameSocketMsg, this, this.handleMsg);\r\n        this.on(GameServer.Event_GamePBSocketMsg, this, this.handlePbMsg)\r\n        this.on(GameServer.Event_GameSocketCallReconnect, this, this.clearData);\r\n    }\r\n\r\n    //注册定制协议处理函数\r\n    public registHandler(key:any, handler:any)\r\n    {\r\n        this.getHelper<HandlerHelper>(this.handleHelperKey).registHandler(key, handler);\r\n    }\r\n\r\n    //反注册定制协议处理函数\r\n    public unregistHandler(key:any) {\r\n        this.getHelper<HandlerHelper>(this.handleHelperKey).removeHandler(key);\r\n    }\r\n\r\n    //注册通用错误处理函数\r\n    public registDefaultHandler(key:any, handler:any)\r\n    {\r\n        this.getHelper<HandlerHelper>(this.handleHelperKey).registDefaultHandler(key, handler);\r\n    }\r\n\r\n    //注册定制错误处理\r\n    public registErrorHandler(errno:number, handler:Function)\r\n    {\r\n        this.getHelper<GameErrorHelper>(this.errorHelperKey).registErrorHandler(errno, handler);\r\n    }\r\n\r\n    public clearHandlers()\r\n    {\r\n        this.getHelper<HandlerHelper>(this.handleHelperKey).clearHandlers();\r\n        this.getHelper<CallbackHandlerHelper>(this.callbackHelperKey).clearCallbacks();\r\n    }\r\n\r\n    public run()\r\n    {\r\n        Game.Event.on(Game.EVENT_ADDMANUALLOCK, this, this.addManualLock);\r\n        Game.Event.on(Game.EVENT_ADDTIMELOCK, this, this.addTimeLock);\r\n        Game.Event.on(Game.EVENT_REMOVELOCK, this, this.removeLock);\r\n        Game.Event.on(Game.EVENT_UNSHFIT_MSGLIST, this, this.unshfitMsgList)\r\n        this.callHelper(\"run\");\r\n        this.isRunning = true;\r\n    }\r\n\r\n    public stop()\r\n    {\r\n        this.callHelper(\"clear\");\r\n        Game.Event.offAllByCaller(this);\r\n        this.checkHelper.clear();\r\n        this.lastSN = -1;\r\n        this.msgState = MessageState.PassAll;\r\n        this.msgQueue = [];\r\n        this.lockList = [];\r\n        this.mod = \"\";\r\n        this.dst = {}\r\n        this.isRunning = false;\r\n    }\r\n\r\n    private unshfitMsgList(msgList:any[])\r\n    {\r\n        if(msgList == null || msgList.length == 0)\r\n            return;\r\n        // for(let i = 0; i < msgList.length; i++)\r\n        // {\r\n        //     if(msgList[i]._param == null)\r\n        //     {\r\n        //         msgList[i] = {_param:msgList[i]};\r\n        //     }\r\n        // }\r\n        this.msgQueue.unshift.apply(this.msgQueue, msgList);\r\n    }\r\n\r\n    public stopGame()\r\n    {\r\n        this.isRunning = false;\r\n        this.lockList = [];\r\n        this.msgQueue = [];\r\n        this.lastSN = -1;\r\n        this.getHelper<SocketHelper>(this.socketHelperKey).clear();\r\n        this.getHelper<GameHeartBeatHelper>(this.heartBeatHelperKey).netInterval = 0;\r\n    }\r\n\r\n    /**\r\n     * 发送 内容为json格式的Socket消息\r\n     * @param cmd \r\n     * @param payload \r\n     */\r\n    public send(cmd:string, param?:any)\r\n    {\r\n        param = param || {}\r\n        let data = this.getSendParam(cmd);\r\n        data._param._para = param;\r\n        data._func = cmd;           // 服务器要求 水果机需要加上, 就统一加上\r\n        this.sendDirect(data);\r\n    }\r\n\r\n    /**\r\n     * 发送回调方式的socket请求\r\n     * @param cmd 协议名\r\n     * @param param 参数\r\n     * @param callback 回调\r\n     * @param errorCallback 错误时回调, 传空表示使用通用处理\r\n     * @param livingTime 生存时长s -1表不限生命周期\r\n     * @param inQueue 是否走队列\r\n     */\r\n    public sendWithCallback(cmd:string, param?:any, callback?: Function, errorCallback?: any, livingTime = -1, inQueue = true){\r\n        param = param || {};\r\n        let data = this.getSendParam(cmd);\r\n        data._param._para = param;\r\n        data._func = cmd;\r\n        let check = data._check;\r\n\r\n        let callbackInfo: CallbackInfo = {\r\n            key: check,\r\n            callback: callback,\r\n            errorCallback: errorCallback,\r\n            inQueue: inQueue,\r\n            live: livingTime,\r\n            cmd: cmd\r\n        }\r\n        this.getHelper<CallbackHandlerHelper>(this.callbackHelperKey).registCallback(check, callbackInfo);\r\n        this.sendDirect(data);\r\n    }\r\n\r\n    /**\r\n     * 发送 内容为protobuffer格式的Socket消息\r\n     * @param cmd \r\n     * @param payload \r\n     */\r\n    public sendPb(cmd, payload?:Uint8Array)\r\n    {\r\n        if (cmd.indexOf(\"*game*_\") == 0) {\r\n            cmd = cmd.replace(\"*game*_\", \"\");\r\n            cmd = Number(cmd);\r\n        }\r\n        this.getHelper<SocketHelper>(this.socketHelperKey).sendBuffer(cmd, payload)\r\n    }\r\n\r\n    /**\r\n     * 发送 内容为json格式的Http请求\r\n     * @param mod gameGameRoute返回的mod\r\n     * @param cmd 协议方法名\r\n     * @param param \r\n     * @param complete \r\n     * @param onError \r\n     */\r\n    public sendHttp(mod:string, cmd:string, param?:any, complete?, onError?) {\r\n        param = param || {};\r\n\r\n        let serverRoutes = Global.Setting.Urls.gameRoutes\r\n        if(serverRoutes == null)\r\n        {\r\n            Logger.error(\"gameRoutes is null 先请求GetGameRoute\");\r\n            serverRoutes = Global.Setting.Urls.hallRoutes;\r\n        }\r\n\r\n        let errorHandler = (netObj:any)=>{\r\n            if(onError) {\r\n                onError(netObj);\r\n            }\r\n            else {\r\n                //协议预处理\r\n                let handler = this.getHelper<HandlerHelper>(this.handleHelperKey).getHandler(\"*game*_404\");\r\n                if(handler) {\r\n                    //重新构建消息结构\r\n                    let msgParam = {\r\n                        _cmd: \"*game*_404\",\r\n                        _receiveTime: Date.now(),\r\n                        _para: {\r\n                            errNo: netObj._errno,\r\n                            errStr: netObj._errstr,\r\n                            errExt: netObj._errext || cmd,\r\n                        },\r\n                    }\r\n                    handler.Handle(msgParam);\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        this.sendWithServerRouteAndMod(serverRoutes.getRandRoute(), mod, cmd, param, complete, errorHandler);\r\n    }\r\n\r\n    /**\r\n     * 发送 内容为protobuffer格式的Http请求\r\n     * @param mod gameGameRoute返回的mod\r\n     * @param cmd 协议方法名\r\n     * @param param \r\n     * @param complete \r\n     * @param onError \r\n     */\r\n    public sendHttpPb(mod:string, cmd:string, buffer?:Uint8Array, complete?, onError?) {\r\n        let cmdId:number = 0;\r\n        if (cmd.indexOf(\"*game*_\") == 0) {\r\n            let num = cmd.replace(\"*game*_\", \"\");\r\n            cmdId = Number(num);\r\n        }\r\n        else {\r\n            cmdId = Number(cmd);\r\n        }\r\n        if(!cmdId) {\r\n            Logger.error(\"sendHttpPb() cmd 格式错误\");\r\n            return;\r\n        }\r\n\r\n        let size = buffer ? buffer.length : 0;\r\n        size += 4;\r\n        let bb = ByteBuffer.allocate(size, false, false);\r\n        bb.writeUint32(cmdId, 0);\r\n        if (buffer) {\r\n            bb.append(buffer, 4);\r\n        }\r\n\r\n        let serverRoutes = Global.Setting.Urls.gameRoutes\r\n        if(serverRoutes == null) {\r\n            Logger.error(\"gameRoutes is null 先请求GetGameRoute\");\r\n            serverRoutes = Global.Setting.Urls.hallRoutes;\r\n        }\r\n\r\n        let errorHandler = (netObj:any)=>{\r\n            if(onError) {\r\n                onError();\r\n            }\r\n            else {\r\n                //协议预处理\r\n                let handler = this.getHelper<HandlerHelper>(this.handleHelperKey).getHandler(\"*game*_404\");\r\n                if(handler) {\r\n                    //重新构建消息结构\r\n                    let msgParam = {\r\n                        _cmd: \"*game*_404\",\r\n                        _receiveTime: Date.now(),\r\n                        _para: {\r\n                            errNo: netObj._errno,\r\n                            errStr: netObj._errstr,\r\n                            errExt: netObj._errext || cmd,\r\n                        },\r\n                    }\r\n                    handler.Handle(msgParam);\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n\r\n        this.sendWithServerRouteAndMod(serverRoutes.getRandRoute(), mod, cmd, buffer, complete, errorHandler);\r\n        bb.clear();\r\n    }\r\n\r\n    /**\r\n     * 根据serverRoute mod  发送http协议，主要用于拉把类协议请求\r\n     * @param serverRoute 服务器返回的服务器地址信息\r\n     * @param mod 服务器路由\r\n     * @param cmd 协议方法名\r\n     * @param param\r\n     * @param complete \r\n     * @param onError \r\n     */\r\n    public sendWithServerRouteAndMod(serverRoute:ServerRouteInfo, mod:string, cmd:string, param:any, complete?, onError?) {\r\n        let serverUrl = serverRoute.getHttpUrlWithMod(mod);\r\n        let urlParam = Global.UrlUtil.getUrlCommonParam()\r\n        let suffix = \"?_func=\" + cmd + \"&\" + urlParam\r\n        let sendParam:any = {}\r\n        sendParam._param = param;\r\n        serverUrl.suffix = serverUrl.suffix + suffix\r\n        this.sendWithUrl(serverUrl, sendParam, complete, onError);\r\n    }\r\n\r\n    /**\r\n     * 通过url方式发送http请求\r\n     * @param url \r\n     * @param param \r\n     * @param complete \r\n     * @param onError \r\n     */\r\n    public sendWithUrl(serverUrl:ServerUrl, param:any, complete?:Function, onError?:Function) {\r\n        Global.Http.send(serverUrl, param, (msg:any)=>{\r\n            if(typeof(msg) == \"string\") {\r\n                let netObj = null;\r\n                try {\r\n                    netObj = JSON.parse(msg);\r\n                }\r\n                catch(e) {\r\n                    Logger.error(\"解析协议失败\", msg, e);\r\n                    return;\r\n                }\r\n\r\n                //消息打印\r\n                if(netObj._func != Game.Command.HeartBeat) {\r\n                    Logger.log(\"HttpMsg:\", msg);\r\n                }\r\n\r\n                //该协议只在游戏中使用\r\n                //如果在NoIgnoreWhenChangeSceneList 则忽略\r\n                if(!Global.SceneManager.inGame())\r\n                {\r\n                    Logger.error(\"gameserver http协议跨场景，丢弃\", serverUrl.getUrl());\r\n                    return;\r\n                }\r\n\r\n                //处理错误\r\n                if(!this.errorHelper.handleError(netObj, onError)) {\r\n                    if(netObj._errno != null) {\r\n                        let cmd:string = \"*game*_404\";\r\n\r\n                        //协议预处理\r\n                        let handler = this.getHelper<HandlerHelper>(this.handleHelperKey).getHandler(cmd);\r\n                        if(handler) {\r\n                            //重新构建消息结构\r\n                            let msgParam = {\r\n                                _cmd: cmd,\r\n                                _receiveTime: Date.now(),\r\n                                _para: {\r\n                                    errNo: netObj._errno,\r\n                                    errStr: netObj._errstr,\r\n                                    errExt: netObj._errext,\r\n                                },\r\n                            }\r\n                            handler.Handle(msgParam);\r\n                        }\r\n                    }\r\n                    return;\r\n                }\r\n\r\n                if(complete) {\r\n                    complete(netObj._param);\r\n                }\r\n                else {\r\n                    let cmd:string = netObj._func;\r\n\r\n                    //协议预处理\r\n                    let handler = this.getHelper<HandlerHelper>(this.handleHelperKey).getHandler(cmd);\r\n                    if(handler) {\r\n                        //重新构建消息结构\r\n                        let msgParam = {\r\n                            _cmd: cmd,\r\n                            _receiveTime: Date.now(),\r\n                            _para: netObj._param,\r\n                        }\r\n                        handler.Handle(msgParam);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                let buffer = new Uint8Array(msg);\r\n                //大字节序读取command\r\n                let command = ByteBuffer.wrap(buffer.slice(0, 4), false).readUint32(0);\r\n                let paraData = buffer.slice(4);\r\n\r\n                let cmd = \"*game*_\" + command;\r\n                this.handlePbMsg(cmd, paraData);\r\n            }\r\n        },\r\n        (msg:any)=>{\r\n\r\n            //该协议只在游戏中使用\r\n            //如果在NoIgnoreWhenChangeSceneList 则忽略\r\n            if(!Global.SceneManager.inGame())\r\n            {\r\n                Logger.error(\"gameserver http协议跨场景，丢弃\");\r\n                return;\r\n            }\r\n\r\n            let url:string = msg || \"\";\r\n            let funcName:string = \"\";\r\n            let start = url.indexOf(\"_func=\");\r\n            if(start != -1) {\r\n                let end = url.indexOf(\"&\", start + 6);\r\n                if(end != -1) {\r\n                    funcName = url.substring(start + 6, end)\r\n                }\r\n            }\r\n\r\n            //协议发送失败处理\r\n            if(onError) {\r\n                onError({_errno:-1, _errstr:\"网络连接超时，请检查后重试\", _errext:funcName});\r\n            }\r\n            else {\r\n                //处理错误\r\n                let cmd:string = \"*game*_404\";\r\n\r\n                //协议预处理\r\n                let handler = this.getHelper<HandlerHelper>(this.handleHelperKey).getHandler(cmd);\r\n                if(handler) {\r\n                    //重新构建消息结构\r\n                    let msgParam = {\r\n                        _cmd: cmd,\r\n                        _receiveTime: Date.now(),\r\n                        _para: {\r\n                            errNo: -1,\r\n                            errStr: \"网络连接异常，请检查后重试\",\r\n                            errExt: funcName,\r\n                        },\r\n                    }\r\n                    handler.Handle(msgParam);\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    public setDst(gt, chair)\r\n    {\r\n        this.dst._gt = gt;\r\n        this.dst._chair = chair;\r\n        // this.getHelper<GameHeartBeatHelper>(this.heartBeatHelperKey).setDst(gt, chair)\r\n    }\r\n\r\n    public clearDst()\r\n    {\r\n        this.dst = {}\r\n    }\r\n\r\n    public passAll()\r\n    {this.msgState = MessageState.PassAll;}\r\n\r\n    public ignoreAll()\r\n    {this.msgState = MessageState.IgnoreAll;}\r\n\r\n    public passSSSAndEnter()\r\n    {\r\n        this.msgState = MessageState.PassSSSAndEnter;\r\n        this.lastSN = -1;\r\n    }\r\n\r\n    public sendDirect(param)\r\n    {\r\n        this.getHelper<SocketHelper>(this.socketHelperKey).send(param);\r\n\r\n        if(param == null || param._param == null)\r\n            return;        \r\n        let key = Global.ReportTool.genGameKey(\"send\");\r\n        Global.ReportTool.ReportPublicDebugLog(key, param);\r\n    }\r\n\r\n    public sendHeartBeat()\r\n    {\r\n        this.getHelper<GameHeartBeatHelper>(this.heartBeatHelperKey).startHeartbeat();\r\n        this.getHelper<GameHeartBeatHelper>(this.heartBeatHelperKey).sendHeartBeat();\r\n    }\r\n\r\n    public stopHeartBeat()\r\n    {\r\n        this.getHelper<GameHeartBeatHelper>(this.heartBeatHelperKey).stopHeartBeat();\r\n    }\r\n\r\n    public getSendParam(cmd)\r\n    {\r\n        let data: any = {}\r\n        data._dst = this.dst;\r\n        data._param = {}\r\n        data._param._cmd = cmd;\r\n        data._mod = this.mod;\r\n        this.checkHelper.updateChecker();\r\n        if(cmd == Game.Command.HeartBeat)\r\n        {\r\n            this.checkHelper.recordHeartbeat();\r\n            data._check = this.checkHelper.getHeartBeatChecker(this.lastSN);\r\n        }\r\n        else\r\n        {\r\n            data._check = this.checkHelper.getNomalChecker();\r\n        }\r\n        this.updateChecker();\r\n        return data;\r\n    }\r\n\r\n    private updateChecker()\r\n    {\r\n        this.checker++;\r\n        if(this.checker > 100000)\r\n        {\r\n            this.checker = 0;\r\n        }\r\n    }\r\n\r\n    //链接服务器\r\n    //serverInfo  服务器配置信息  兼容单链接 和多链接\r\n    public connect(serverInfo:ServerRouteInfo, mod:string, pbmode = false, useFunc = true)\r\n    {\r\n        let url = \"\";\r\n        // if(pbmode)\r\n        // {\r\n        let serverUrl  = serverInfo.getPbSocketUrl(mod);\r\n        // }\r\n        // else\r\n        // {\r\n        //     url = serverInfo.getSocketUrl();\r\n        // }\r\n        this.mod = mod;\r\n\r\n        let suffix = this.getSocketSuffix(useFunc);\r\n        serverUrl.suffix = serverUrl.suffix + suffix;\r\n        url = Global.UrlUtil.dealWebSocketUrl(serverUrl)\r\n        let cerPath = serverUrl.cerPath\r\n        // url = this.getSocketUrl(url, pbmode);\r\n        //url = this.getSocketUrl(url, true);\r\n        this.getHelper<SocketHelper>(this.socketHelperKey).connect(url, serverInfo, pbmode, this.mod, suffix,cerPath);\r\n    }\r\n\r\n    //获取心跳网络延时\r\n    public getNetCost()\r\n    {\r\n        if(!this.checkHelper)\r\n            return 0;\r\n        return this.checkHelper.getNetCost();\r\n    }\r\n\r\n\r\n    public callHelper(funcName, param?)\r\n    {\r\n        for(let key in this.helperMap)\r\n        {\r\n            if(this.helperMap[key][funcName])\r\n                this.helperMap[key][funcName](param)\r\n        }\r\n    }\r\n\r\n    public getSocketUrl(url:ServerUrl, useFunc = false)\r\n    {\r\n        let urlParam = Global.UrlUtil.getUrlCommonParam()\r\n        url.suffix = url.suffix + \"?\"+ urlParam\r\n        if(useFunc)\r\n        {\r\n            url.suffix += \"&_func=event\";\r\n        }\r\n        return url;\r\n    }\r\n\r\n    public getSocketSuffix(useFunc = false)\r\n    {\r\n        let urlParam = Global.UrlUtil.getUrlCommonParam()\r\n        let suffix = \"?\" + urlParam\r\n        if(useFunc)\r\n        {\r\n            suffix += \"&_func=event\";\r\n        }\r\n        return suffix;\r\n    }\r\n\r\n \r\n    private registHelper(key:string, helper:BaseServerHelper)\r\n    {\r\n        if(this.helperMap[key] != null)\r\n        {\r\n            Logger.error(\"重复注册helper\");\r\n        }\r\n        this.helperMap[key] = helper;\r\n    }\r\n\r\n    private getHelper<T extends BaseServerHelper>(key):T\r\n    {\r\n        if(!this.helperMap[key])\r\n            return null;\r\n        return this.helperMap[key] as T;\r\n    }\r\n\r\n\r\n    public clearData()\r\n    {\r\n        this.msgQueue = [];\r\n        this.lockList = [];\r\n        this.lastSN = -1;\r\n        this.getHelper<GameHeartBeatHelper>(this.heartBeatHelperKey).stopHeartBeat();\r\n    }\r\n\r\n    private handlePbMsg(cmd, netData)\r\n    {\r\n        let _check = netData._check;\r\n        let callbackInfo = this.getHelper<CallbackHandlerHelper>(this.callbackHelperKey).getCallback(_check);\r\n        if (callbackInfo){\r\n            let callback: any = callbackInfo.callback;\r\n            if(callback && callback.decodePb)       // 数据格式还有问题, 未使用验证先注释\r\n            {\r\n                // let para = callback.decodePb(netData);\r\n                // //如果是错误命令 有可能会返回空\r\n                // if(para == null)\r\n                //     return;\r\n                // let packData:any = {}\r\n                // packData._cmd = cmd;\r\n                // packData._para = para;\r\n                // Logger.log(\"receive PbMsg: \" + JSON.stringify(packData));\r\n                // if(callbackInfo.inQueue)\r\n                //     this.msgQueue.push(packData);\r\n                // else{\r\n                //     callback(packData);\r\n                //     this.getHelper<CallbackHandlerHelper>(this.callbackHelperKey).removeCallback(_check);\r\n                // }\r\n            }\r\n        }\r\n        else{\r\n            let handler = this.getHelper<HandlerHelper>(this.handleHelperKey).getHandler(cmd);\r\n            if(handler && handler.decodePb)\r\n            {\r\n                let para = handler.decodePb(netData);\r\n                //如果是错误命令 有可能会返回空\r\n                if(para == null)\r\n                    return;\r\n                let packData:any = {}\r\n                packData._cmd = cmd;\r\n                packData._para = para;\r\n                Logger.log(\"receive PbMsg: \" + JSON.stringify(packData));\r\n\r\n                if(handler.checkInQueue && handler.checkInQueue(packData))\r\n                    this.msgQueue.push(packData);\r\n                else\r\n                    handler.Handle(packData);\r\n            }\r\n        }\r\n    }\r\n\r\n    private filterMsg(netData)\r\n    {\r\n        if(netData == null || netData._param == null)\r\n            return false;\r\n        //过滤全部协议\r\n        if(this.msgState == MessageState.IgnoreAll)\r\n            return false;\r\n        //除了session和enter 全部过滤\r\n        if(this.msgState == MessageState.PassSSSAndEnter)\r\n        {\r\n            // if(netData._param._cmd == null)\r\n            //     return false;\r\n            // return netData._param._cmd == Game.Command.Session || netData._param._cmd == Game.Command.Enter;\r\n            return netData._param._cmd == Game.Command.Session || netData._param._cmd == Game.Command.Enter || netData._param._cmd == Game.Command.WaitMatch;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    private handleMsg(netData)\r\n    {\r\n        if(!this.filterMsg(netData))\r\n        {\r\n            Logger.error(\"filter msg\", JSON.stringify(netData));\r\n            return ;\r\n        }\r\n\r\n        if (netData == null || netData == undefined) {\r\n            Logger.error(\"netData == null！！！！！！！\");\r\n            return;\r\n        }\r\n\r\n        this.preHandleMsg(netData);\r\n\r\n        let _check = netData._check;\r\n        let callbackInfo = this.getHelper<CallbackHandlerHelper>(this.callbackHelperKey).getCallback(_check);\r\n        if (callbackInfo && callbackInfo.errorCallback && netData._param && netData._param._errno){\r\n            callbackInfo.errorCallback(netData._param);\r\n            return;\r\n        }\r\n\r\n        let errorHelper = this.getHelper<GameErrorHelper>(this.errorHelperKey);\r\n\r\n        if(!errorHelper.handleSysError(netData))\r\n            return;\r\n\r\n        //检查sn  \r\n        if(!this.checkSN(netData))\r\n        {\r\n            this.lastSN = -1;\r\n            //sn验证不通过需要强制重连\r\n            Game.Event.event(Game.EVENT_CALL_RECONNECT);\r\n            return;\r\n        }\r\n\r\n        if(!errorHelper.handleCmdError(netData))\r\n            return;\r\n        \r\n        if(!errorHelper.handleLogicError(netData))\r\n            return;\r\n\r\n        let cmd = netData._param._cmd\r\n\r\n\r\n        //心跳逻辑处理\r\n        if(cmd == Game.Command.HeartBeat)\r\n        {\r\n            let key = Global.ReportTool.genGameKey(\"recv_he1\");\r\n            Global.ReportTool.ReportPublicDebugLog(key, netData);\r\n\r\n            this.checkHelper.refreshCostTime(netData._check)\r\n            this.getHelper<GameHeartBeatHelper>(this.heartBeatHelperKey).HandleHeartBeat(netData);\r\n\r\n            let serverTime = netData._param._times;\r\n            if (serverTime)\r\n                Game.Component.doChecker(serverTime);\r\n            return;\r\n        }\r\n\r\n        let key = Global.ReportTool.genGameKey(\"recv\");\r\n        Global.ReportTool.ReportPublicDebugLog(key, netData);\r\n\r\n        netData._param._receiveTime = Date.now();\r\n\r\n        //协议预处理\r\n        if (callbackInfo){          // 回调方式处理\r\n            if(callbackInfo.inQueue)\r\n                this.msgQueue.push(netData);\r\n            else{\r\n                callbackInfo.callback(netData._param);\r\n                this.getHelper<CallbackHandlerHelper>(this.callbackHelperKey).removeCallback(_check);\r\n            }\r\n        }\r\n        else{           // 消息方式处理\r\n            let handler = this.getHelper<HandlerHelper>(this.handleHelperKey).getHandler(cmd);\r\n            if(handler)\r\n            {\r\n                if(handler.checkInQueue && handler.checkInQueue(netData._param))\r\n                    this.msgQueue.push(netData._param);\r\n                else\r\n                    handler.Handle(netData._param);\r\n            }\r\n        }\r\n    }\r\n\r\n    private preHandleMsg(netData)\r\n    {\r\n        //收到enter和session后 协议正常接收   这里不检查错误，错误处理放到后面处理  add pvp匹配协议\r\n        if(netData._param._cmd == Game.Command.Enter || netData._param._cmd == Game.Command.Session || netData._param._cmd == Game.Command.WaitMatch)\r\n        {\r\n            this.passAll();\r\n            return;\r\n        }\r\n        if(netData._param._cmd == Game.Command.Leave)\r\n        {\r\n            //收到自己leave 并且 没有错误 则不接受后续协议，需要等下次enter\r\n            if(Game.Context && Game.Context.selfSrc\r\n                && Game.Context.selfSrc == netData._param._src\r\n                && (netData._param._errno == null || netData._param._errno == 0))\r\n                this.ignoreAll();\r\n        }\r\n\r\n    }\r\n\r\n    public onUpdate(dt)\r\n    {\r\n        this.checkHelper.onUpdate(dt);\r\n        if(!this.isRunning)\r\n            return;\r\n        this.callHelper(\"onUpdate\", dt)\r\n        this.updateLock(dt);\r\n        while(this.msgQueue.length > 0)\r\n        {\r\n            if(this.hasLock())\r\n                return;\r\n            let msg = this.msgQueue.shift();\r\n            let callbackInfo = this.getHelper<CallbackHandlerHelper>(this.callbackHelperKey).getCallback(msg._check);\r\n            if (callbackInfo && callbackInfo.callback){\r\n                callbackInfo.callback(msg._param);          // 回调式的需要_check找到对应的, 需要传外层的数据\r\n                this.getHelper<CallbackHandlerHelper>(this.callbackHelperKey).removeCallback(msg._check);\r\n            }\r\n            else{\r\n                let handler = this.getHelper<HandlerHelper>(this.handleHelperKey).getHandler(msg._cmd);\r\n                if(handler != null)\r\n                {\r\n                    handler.Handle(msg);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private hasLock()\r\n    {\r\n        return this.lockList.length > 0;\r\n    }\r\n\r\n    private checkSN(msg)\r\n    {\r\n        let sn = msg._sn;\r\n\r\n        Logger.log(\"===lastSN:\" + this.lastSN + \"   curSN:\" + sn);\r\n        if(sn == 0)    //sn为0  跳过检测   主要处理 900  901 等错误\r\n            return true;\r\n        if (!this.lastSN || this.lastSN < 0) {\r\n            this.lastSN = sn;\r\n            return true;\r\n        }\r\n        if (this.lastSN + 1 != sn) {\r\n            Logger.error(\"lastSN:\" + this.lastSN + \"   curSN:\" + sn);\r\n            Global.ReportTool.ReportClientError(\"SnError\",\r\n            {\r\n                \"lastSN\":this.lastSN,\r\n                \"serSn\":sn,\r\n                \"check\":msg._check,\r\n                \"param\":msg._param,\r\n                \"appid\":Global.Setting.appId,\r\n                \"uid\":Global.PlayerData.uid,\r\n            })\r\n            return false;\r\n        }\r\n        this.lastSN = sn;\r\n        return true;\r\n    }\r\n\r\n    \r\n    private addTimeLock(key:string, time:number)\r\n    {\r\n        time = time || 0\r\n        Logger.log(\"time lock\", key, time);\r\n        let lockInfo = LockInfo.create(key, 0, time);\r\n        this.lockList.push(lockInfo);\r\n    }\r\n\r\n    private addManualLock(key)\r\n    {\r\n        let lockInfo = LockInfo.create(key, 1);\r\n        this.lockList.push(lockInfo);\r\n    }\r\n\r\n\r\n    private removeLock(key)\r\n    {\r\n        //一次只清理一条\r\n        for(let i = 0; i < this.lockList.length; i++)\r\n        {\r\n            let lock = this.lockList[i];\r\n            if(lock.key == key)\r\n            {\r\n                this.lockList.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private updateLock(dt)\r\n    {\r\n        for(let i = this.lockList.length - 1; i >= 0; i--)\r\n        {\r\n            this.lockList[i].time -= dt;\r\n            if(this.lockList[i].time <= 0)\r\n            {\r\n                let lock = this.lockList[i];\r\n                if(lock.type == 1)\r\n                {\r\n                    Logger.error(\"Manual Lock 解锁超时\", lock.key)\r\n                }\r\n                this.lockList.splice(i, 1);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass LockInfo\r\n{\r\n    public static lockTimeout = 6;\r\n    public key:string;\r\n    public time:number;\r\n    public type:number;    //0 timelock  1 manuallock\r\n\r\n    public static create(key, type, time?)\r\n    {\r\n        let info = new LockInfo();\r\n        info.key = key;\r\n        if(type == 0)\r\n            info.time = time;\r\n        else\r\n            info.time = LockInfo.lockTimeout;\r\n        return info;\r\n    }\r\n\r\n}"]}