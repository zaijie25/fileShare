{"version":3,"sources":["assets\\hall\\scripts\\logic\\core\\net\\hall\\HallServer.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import EventDispatcher from \"../../../../framework/event/EventDispatcher\";\r\nimport { NetLogin, NetOnline, NetVerifyCode, NetCheckVersion, NetClientLog } from \"./NetEvent\";\r\nimport { HallErrorHelper, HttpNetExtraData } from \"./HallErrorHandler\";\r\nimport HallHeartBeatHelper from \"./HallHeartbeatHelper\";\r\nimport HallBroadcastHelper from \"./HallBroadcastHelper\";\r\nimport GlobalEvent from \"../../GlobalEvent\";\r\nimport { NetAppface } from \"../../../core/net/hall/NetEvent\";\r\nimport CheckHelper from \"./CheckHelper\";\r\nimport { SceneType } from \"../../scene/SceneManager\";\r\nimport { ReportTool } from \"../../tool/ReportTool\";\r\nimport ServerRoutes, { ServerRouteInfo } from \"../../setting/ServerRoutes\";\r\nimport { ParallelReqLine } from \"../../../../framework/net/http/HttpProxy\";\r\n//大厅网络管理器\r\nexport default class HallServer extends EventDispatcher {\r\n\r\n    private USEWS = false;\r\n\r\n    private NoWaitingNetList = []\r\n\r\n    //切场景后不丢弃的协议\r\n    private NoIgnoreWhenChangeSceneList = []\r\n\r\n    //心跳协议传递\r\n    public static EVENT_INTERNAL_ONHEARTBEAT = \"OnHeartBeat\";\r\n    //更新msgseq\r\n    public static EVENT_INTERNAL_UPDATEMSGSEQ = \"updateMsgSeq\";\r\n\r\n    //组件通信\r\n    private internalEvent: EventDispatcher;\r\n    //通用协议错误处理 （业务逻辑错误）\r\n    private errorHelper: HallErrorHelper = new HallErrorHelper;\r\n    //心跳组件\r\n    public heartbeatHelper: HallHeartBeatHelper;\r\n    //广播组件\r\n    private broadcastHelper: HallBroadcastHelper;\r\n\r\n    public checkHelper = new CheckHelper(1);\r\n    //数据缓存\r\n    private dataCache:any={};\r\n\r\n    private checkInerval = 1000;\r\n    private timeID = null;\r\n\r\n\r\n    public setup() {\r\n        this.internalEvent = new EventDispatcher();\r\n        this.heartbeatHelper = new HallHeartBeatHelper(this, this.internalEvent);\r\n        this.broadcastHelper = new HallBroadcastHelper(this, this.internalEvent);\r\n        this.initNoWaitingList();\r\n        this.initNoIgnoreWhenChangeSceneList();\r\n    }\r\n\r\n    public clearAllCache()\r\n    {\r\n        this.dataCache = {}\r\n    }\r\n\r\n    private initNoWaitingList()\r\n    {\r\n        //货币信息\r\n        this.NoWaitingNetList.push(NetAppface.GetUserPoint);\r\n        //获取玩家信息\r\n        this.NoWaitingNetList.push(NetAppface.GetUserInfo);\r\n        //重连信息\r\n        this.NoWaitingNetList.push(NetAppface.QuaryState);\r\n        //上传信息\r\n        this.NoWaitingNetList.push(NetAppface.PostIpInfo);\r\n        //心跳\r\n        this.NoWaitingNetList.push(NetOnline.HeartBeat);\r\n        //日志\r\n        this.NoWaitingNetList.push(NetClientLog.ClientLogReq);\r\n        //app信息\r\n        this.NoWaitingNetList.push(NetClientLog.DownloadAppInfo);\r\n    }\r\n\r\n    private initNoIgnoreWhenChangeSceneList()\r\n    {\r\n        \r\n        //心跳\r\n        this.NoIgnoreWhenChangeSceneList.push(NetOnline.HeartBeat);\r\n    }\r\n\r\n    //过滤不显示loading的界面\r\n    private checkNetNoWating(extraData:HttpNetExtraData)\r\n    {\r\n        return this.NoWaitingNetList.indexOf(extraData.funcName) > -1;\r\n    }\r\n\r\n\r\n    public sendLogin(func: string, param: any, onComplete?: Function, errorHandler?: Function, showWaiting = true) {\r\n        //let url = Global.Setting.Urls.globalUrl + NetLogin.mod;\r\n        if(!param.device)\r\n            param.device = Global.Toolkit.genDeviceInfo();\r\n\r\n        let serverRoutes = Global.Setting.Urls.globalRoutes;\r\n        let paramPrefix = Global.UrlUtil.getUrlParamCommonPrefex()\r\n        let suffix = \"/login/\"+ paramPrefix + NetLogin.mod +\"?\" + Global.UrlUtil.getLoginCommonParam();\r\n        //let url = serverRoute.getUrl() + suffix;\r\n        let serverData = this.getMsgParam(NetLogin.mod, func, param, true);\r\n        let extraData = this.createNetExtraData(serverRoutes, suffix, func, serverData, onComplete, errorHandler, showWaiting,0,false,false);\r\n        this.sendInternal(extraData);\r\n    }\r\n\r\n    public sendVerifyCode(func: string, param: any, onComplete?: Function, errorHandler?: Function, showWaiting = true) {\r\n        //let url = Global.Setting.Urls.globalUrl + NetVerifyCode.mod;\r\n        if(!param.device)\r\n            param.device = Global.Toolkit.genDeviceInfo();\r\n        let serverRoutes = Global.Setting.Urls.globalRoutes;\r\n        let paramPrefix = Global.UrlUtil.getUrlParamCommonPrefex()\r\n        let suffix =  \"/login/\" + paramPrefix + NetVerifyCode.mod +\"?\" + Global.UrlUtil.getLoginCommonParam();\r\n        let serverData = this.getMsgParam(NetVerifyCode.mod, func, param, true);\r\n        let extraData = this.createNetExtraData(serverRoutes, suffix, func, serverData, onComplete, errorHandler, showWaiting);\r\n        this.sendInternal(extraData);\r\n    }\r\n\r\n    public sendCheckVersion(func: string, param: any, onComplete?: Function, errorHandler?: Function, showWaiting = true) {\r\n        //let url = Global.Setting.Urls.forceUpateUrl;\r\n        let serverRoutes = Global.Setting.Urls.globalRoutes;\r\n        let paramPrefix = Global.UrlUtil.getUrlParamCommonPrefex()\r\n        let suffix =  \"/login/\"+ paramPrefix+\"checkversion\" +\"?\" + Global.UrlUtil.getLoginCommonParam();\r\n        let serverData = this.getMsgParam(NetCheckVersion.mod, func, param, true);\r\n\r\n        let extraData = this.createNetExtraData(serverRoutes, suffix, func, serverData, onComplete, errorHandler, showWaiting,0,false,false);\r\n        this.sendInternal(extraData);\r\n        \r\n    }\r\n\r\n    public sendPostInstallApp(func: string, param: any, onComplete?: Function, errorHandler?: Function, showWaiting = true) {\r\n        //let url = Global.Setting.Urls.forceUpateUrl;\r\n        let serverRoutes = Global.Setting.Urls.globalRoutes;\r\n        let paramPrefix = Global.UrlUtil.getUrlParamCommonPrefex()\r\n        let suffix =  \"/login/\"+ paramPrefix + \"checkversion\" +\"?\" + Global.UrlUtil.getLoginCommonParam();\r\n        let serverData = this.getMsgParam(NetLogin.mod, func, param, true);\r\n        let extraData = this.createNetExtraData(serverRoutes, suffix, func, serverData, onComplete, errorHandler, showWaiting);\r\n        this.sendInternal(extraData);\r\n    }\r\n\r\n    public sendClientLog(func: string, param: any, onComplete?: Function, errorHandler?: Function, showWaiting = true) {\r\n        //let url = Global.Setting.Urls.logUrl;\r\n        let serverRoutes = Global.Setting.Urls.globalRoutes;\r\n        let paramPrefix = Global.UrlUtil.getUrlParamCommonPrefex()\r\n        let suffix = \"/login/\"+paramPrefix+\"clientlog\" + \"?\" + Global.UrlUtil.getLoginCommonParam();\r\n        let serverData = this.getMsgParam(\"\", func, param, true);\r\n        let extraData = this.createNetExtraData(serverRoutes, suffix, func, serverData, onComplete, errorHandler, showWaiting);\r\n        this.sendInternal(extraData);\r\n    }\r\n\r\n    //大厅内http协议请求\r\n    //errorHandler  模块定制错误处理  返回true 则继续执行， false丢弃\r\n    public send(mod: string, key: string, param: any, onComplete?: Function, errorHandler?: Function, showWaiting = true, cache=0, extra:string = \"\") {\r\n        let serverRoutes = Global.Setting.Urls.hallRoutes;\r\n        let suffix = Global.Setting.Urls.hallUrlSuffix;\r\n        let serverData = this.getMsgParam(mod, key, param);\r\n        suffix = cc.js.formatStr(suffix, mod, key);\r\n        suffix += extra;\r\n        let extraData = this.createNetExtraData(serverRoutes, suffix, key, serverData, onComplete, errorHandler, showWaiting, cache);\r\n        this.sendInternal(extraData);\r\n    }\r\n\r\n\r\n    public sendHeartBeat(mod: string, key: string, param: any, onComplete?: Function, errorHandler?: Function, showWaiting = true, cache=0, extra:string = \"\"){\r\n        let serverRoutes = Global.Setting.Urls.hallRoutes;\r\n        let suffix = Global.Setting.Urls.hallUrlSuffix;\r\n        let serverData = this.getMsgParam(mod, key, param);\r\n        suffix = cc.js.formatStr(suffix, mod, key);\r\n        suffix += extra;\r\n        let isNeedParallelReq = false\r\n        let parallelReqKey = Global.Http.parallelReqKey\r\n        let heartbeatReq = parallelReqKey.heartbeat\r\n        if (heartbeatReq && (heartbeatReq.isReq == false)){\r\n            isNeedParallelReq = true;\r\n            heartbeatReq.isReq = true;\r\n            heartbeatReq.reqLines = []\r\n            Logger.error(\"sendheartbeat isNeedParallelReq = true\")\r\n        }\r\n        if (isNeedParallelReq){\r\n            for (let i =0 ;i<serverRoutes.serverInfoList.length;i++){\r\n                let curRoute = serverRoutes.serverInfoList[i]\r\n                let url = curRoute.getUrl()\r\n                if (curRoute.checkSelfIsOK()){\r\n                    let lineInfo = new ParallelReqLine\r\n                    lineInfo.lineIndex = i;\r\n                    lineInfo.startTime = (new Date()).valueOf()\r\n                    lineInfo.host = curRoute.host\r\n                    let extraData = this.createNetExtraDataByUrl(serverRoutes, url,suffix, key, serverData, onComplete, errorHandler, showWaiting, cache,true,i);\r\n                    lineInfo.url = extraData.url.getUrl()\r\n                    heartbeatReq.reqLines.push(lineInfo)\r\n                    this.sendInternal(extraData);\r\n                }else {\r\n                    if (url.printSelf){\r\n                        Logger.error(\"route checkSelf Is not OK \" + url.printSelf())\r\n                    }\r\n                }\r\n                \r\n            }\r\n        }else {\r\n            let extraData = this.createNetExtraData(serverRoutes, suffix, key, serverData, onComplete, errorHandler, showWaiting, cache);\r\n            this.sendInternal(extraData);\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    //大厅内http协议请求  不重连\r\n    public sendWithNoRetry(mod: string, key: string, param: any, onComplete?: Function, errorHandler?: Function, showWaiting = false, cache=0, extra:string = \"\") {\r\n        let serverRoutes = Global.Setting.Urls.hallRoutes;\r\n        let suffix = Global.Setting.Urls.hallUrlSuffix;\r\n        let serverData = this.getMsgParam(mod, key, param);\r\n        suffix = cc.js.formatStr(suffix, mod, key);\r\n        suffix += extra;\r\n        let extraData = this.createNetExtraData(serverRoutes, suffix, key, serverData, onComplete, errorHandler, showWaiting, cache);\r\n        extraData.retryTotalTime = 0;\r\n        this.sendInternal(extraData);\r\n    }\r\n\r\n    public sendAiteLogin(func: string, param: any, onComplete?: Function, errorHandler?: Function, showWaiting = true) {\r\n        //let url = Global.Setting.Urls.globalUrl + NetLogin.mod;\r\n        if(!param.device)\r\n            param.device = Global.Toolkit.genDeviceInfo();\r\n        let serverRoutes = Global.Setting.Urls.globalRoutes;\r\n        let paramPrefix = Global.UrlUtil.getUrlParamCommonPrefex()\r\n        let suffix =\"/login/\" + paramPrefix + \"other\"+\"?\" + Global.UrlUtil.getLoginCommonParam();\r\n        let serverData = this.getMsgParam(NetLogin.mod, func, param, true);\r\n        let extraData = this.createNetExtraData(serverRoutes, suffix, func, serverData, onComplete, errorHandler, showWaiting);\r\n        this.sendInternal(extraData);\r\n    }\r\n\r\n\r\n    public onUpdate(dt) {\r\n        this.heartbeatHelper.onUpdate(dt);\r\n        this.checkHelper.onUpdate(dt);\r\n    }\r\n\r\n    public run() {\r\n        this.heartbeatHelper.run();\r\n    }\r\n\r\n    public stop() {\r\n        this.clearAllCache();\r\n        this.heartbeatHelper.stop();\r\n    }\r\n\r\n    public setSession(session) {\r\n        this.heartbeatHelper.setSession(session);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n     * @param sessionInfo \r\n     * {\r\n     *      _gid:xxxx,\r\n     *      _gsc:\"default\",\r\n     *      _glv:\"l0\"\r\n     * }\r\n     */\r\n    public setGameOnlineInfo(sessionInfo)\r\n    {\r\n        if(sessionInfo == null)\r\n            this.heartbeatHelper.setSession(null);\r\n        else\r\n            this.heartbeatHelper.setSession({_para:sessionInfo});\r\n    }\r\n\r\n    public clearCache(mod: string, key: string, param: any){\r\n        // let url = cc.js.formatStr(Global.Setting.Urls.hallHttpUrl, mod, key);\r\n        let cParam = this.getMsgParam(mod, key, param);\r\n        let ckey= key +\"_\"+ this.getParamStr(cParam);\r\n        this.dataCache[ckey] = null;\r\n    }\r\n    private sendInternal(extraData?: HttpNetExtraData, isRetry = false,isChangeServer = false) {\r\n        if(extraData == null)\r\n            return;\r\n        if(extraData.cache != 0 && this.dataCache  ){\r\n            let key=extraData.funcName +\"_\"+ this.getParamStr(extraData.param);\r\n            let cache = this.dataCache[key];\r\n            if(cache && cache.time && cache.msg){\r\n                let Dates = new Date()\r\n                if (extraData.cache<=10000){\r\n                     //按时效缓存, 并且在有效期内, \r\n                     if(Dates.getTime() - cache.time.getTime()  < extraData.cache * 1000){\r\n                        this.onMessage(cache.msg, extraData)\r\n                        return\r\n                    }else{\r\n                        this.dataCache[key]=null;\r\n                    }\r\n                }else if(extraData.cache == 10001){\r\n                    //按天缓存, 并且在有效期内, 只需要检查月和日就好了.没那么倒霉还跨年\r\n                    if(Dates.getMonth() == cache.time.getMonth() && Dates.getDate() == cache.time.getDate()){\r\n                        this.onMessage(cache.msg, extraData)\r\n                        return \r\n                    }else{\r\n                        this.dataCache[key]=null;\r\n                    }\r\n\r\n                }\r\n           }\r\n        }\r\n        // Logger.log(\"isRetry = \" + isRetry)\r\n        // Logger.log(\"isChangeServer = \" + isChangeServer)\r\n        // Logger.log(\"extraData.showWaiting = \" + extraData.showWaiting )\r\n        \r\n        if (extraData.showWaiting && !isRetry) {\r\n            let waittingTips = null\r\n            if (extraData.funcName == NetAppface.GetConfig){\r\n                waittingTips = \"连接中\"\r\n                Global.Event.event(GlobalEvent.SHOW_NET_WAITING, extraData.funcName,15,waittingTips,1,false);\r\n            }\r\n            else\r\n            {\r\n                Global.Event.event(GlobalEvent.SHOW_NET_WAITING, extraData.funcName,15,waittingTips,1,extraData.enableMask);\r\n            }\r\n        }\r\n\r\n        if (isChangeServer && extraData.funcName != NetOnline.HeartBeat){\r\n            Global.Event.event(GlobalEvent.FORCE_HIDE_WAITING);\r\n            let loadingStr = \"重连中\"\r\n            if (extraData.funcName == NetAppface.GetConfig){\r\n                loadingStr = \"重连中\"\r\n                Global.Event.event(GlobalEvent.SHOW_NET_WAITING, extraData.funcName,15,loadingStr+ extraData.serverRoutes.curIndex,1,false);\r\n            }\r\n            else\r\n            {\r\n                Global.Event.event(GlobalEvent.SHOW_NET_WAITING, extraData.funcName,15,loadingStr+ extraData.serverRoutes.curIndex,1,extraData.enableMask);\r\n            }\r\n            \r\n        }\r\n\r\n        this.checkHelper.updateChecker();\r\n        if(extraData.funcName == NetOnline.HeartBeat)\r\n        {\r\n            this.checkHelper.recordHeartbeat(extraData.url);\r\n            extraData.param._check = this.checkHelper.getHeartBeatChecker();\r\n        }\r\n        else\r\n        {\r\n            extraData.param._check = this.checkHelper.getNomalChecker();\r\n        }\r\n        if(!cc.sys.isNative&&window.location.search!=\"\"){\r\n            let temp = window.location.search.substr(1);\r\n            extraData.url.address = temp;\r\n            extraData.url.addressHost = temp;\r\n            extraData.url.realHost = temp;\r\n        }\r\n        extraData.url.suffix = Global.UrlUtil.refreshSuffixRetryTime(extraData.url.suffix, extraData.retryTimes);\r\n        Logger.error(`发送了消息${extraData.url.getUrl()}=========`+ JSON.stringify(extraData.param));\r\n        Global.Http.send(extraData.url, extraData.param, (msg) => {\r\n        //Global.Http.sendWithServerRoute(extraData.serverRoutes.getCurRoute() ,extraData.suffix, extraData.param, (msg) => {\r\n           if( this.onMessage(msg, extraData) && extraData.cache != 0){\r\n                let key=extraData.funcName +\"_\"+ this.getParamStr(extraData.param);\r\n                let cache:any= {}\r\n                cache.time = new Date();\r\n                cache.msg = msg;\r\n                this.dataCache[key] = cache;\r\n           }\r\n        }, () => {\r\n                this.onMessageError(extraData);\r\n            });\r\n    }\r\n\r\n\r\n    private getParamStr(param)\r\n    {\r\n        if(!param._param)\r\n            return \"\";\r\n        return JSON.stringify(param._param);\r\n    }\r\n\r\n    //指定当前线路url\r\n    private createNetExtraDataByUrl(serverRoutes,url, suffix, funcName, serverData, onComplete, errorHandler, showWating, cache=0,isParallelReq = false,lineIndex = 0,enableMask = true){\r\n        if(serverRoutes == null)\r\n        {\r\n            Logger.error(\"serverroutes is null\", funcName, suffix);\r\n            return;\r\n        }\r\n        let extraData = new HttpNetExtraData();\r\n        extraData.param = serverData;\r\n        extraData.onComplete = onComplete;\r\n        extraData.errorHandler = errorHandler;\r\n        extraData.funcName = funcName;\r\n        extraData.serverRoutes = serverRoutes;\r\n        extraData.suffix = suffix;\r\n        extraData.isParallelReq = isParallelReq\r\n        extraData.lineIndex = lineIndex\r\n        extraData.enableMask = enableMask\r\n        \r\n        if (isParallelReq){\r\n            extraData.retryTotalTime = 1\r\n        }else {\r\n            //线路至少重试三次\r\n            extraData.retryTotalTime = serverRoutes.length > 3? serverRoutes.length : 3;\r\n        }\r\n        \r\n        extraData.sendInGame = Global.SceneManager.inGame();\r\n        extraData.url = url\r\n        if (url){\r\n            url.suffix = url.suffix + suffix\r\n        }\r\n        extraData.showWaiting = showWating;\r\n        extraData.cache = cache;\r\n        if(this.checkNetNoWating(extraData))\r\n            extraData.showWaiting = false;\r\n        return extraData;\r\n    }\r\n\r\n    private createNetExtraData(serverRoutes, suffix, funcName, serverData, onComplete, errorHandler, showWating, cache=0,isParallelReq = false,enableMask = true) {\r\n        if(serverRoutes == null)\r\n        {\r\n            Logger.error(\"serverroutes is null\", funcName, suffix);\r\n            return;\r\n        }\r\n        let url = null\r\n        let curRoute = serverRoutes.getCurRoute();\r\n        //加了盾，有可能当前还没初始化成功,手动切换一次线路\r\n        if (curRoute){\r\n            if (curRoute.checkSelfIsOK()){\r\n                let serverUrl = curRoute.getUrl()\r\n                url = serverUrl\r\n            }else {\r\n                let routesLen = serverRoutes.getRouteLen()\r\n                if (routesLen > 1){\r\n                    let nextRoute = serverRoutes.getAnotherRoute()\r\n                    if (nextRoute && nextRoute.checkSelfIsOK()){\r\n                        Logger.error(\"extraData.url changeToAnotherRoute\");\r\n                        let serverUrl = nextRoute.getUrl()\r\n                        url = serverUrl\r\n                    }else {\r\n                        Logger.error(\"extraData.url nextRoute is null or not ok !!!\");\r\n                        let canUseRoute = serverRoutes.getCanUseRoute()\r\n                        if (canUseRoute){\r\n                            let serverUrl = canUseRoute.getUrl()\r\n                            url = serverUrl\r\n                        }else {\r\n                            Logger.error(\"extraData.url canUseRoute = null\");\r\n                        }\r\n                        \r\n                    }\r\n                }else if(routesLen == 1) {\r\n                    // Logger.error(\"extraData.url routesLen = 1\");\r\n                    let serverUrl = curRoute.getUrl()\r\n                    url = serverUrl\r\n                }else {\r\n                    Logger.error(\"extraData.url routesLen = 0 \");\r\n                }\r\n            }\r\n        }else {\r\n            Logger.error(\"extraData.url curRoute is null !!!\");\r\n        }\r\n        \r\n        let  extraData = this.createNetExtraDataByUrl(serverRoutes, url,suffix, funcName, serverData, onComplete, errorHandler, showWating, cache,isParallelReq,0,enableMask)\r\n        return extraData\r\n        \r\n    }\r\n\r\n    //处理并发请求\r\n    public dealParallelReq(extraData,isSuccess){\r\n        if (extraData.isParallelReq){\r\n            Logger.error(\"dealParallelReq  isSuccess \" + isSuccess)\r\n            let lineIndex = extraData.lineIndex\r\n            let heartBeatParallelReq = Global.Http.parallelReqKey.heartbeat\r\n            if (heartBeatParallelReq){\r\n                if (heartBeatParallelReq.isRsp == false){\r\n                    heartBeatParallelReq.isRsp = true;\r\n                }\r\n\r\n                let reqLines = heartBeatParallelReq.reqLines\r\n                if (reqLines && reqLines.length > 0){\r\n                    let isParallelReqEnd = true;\r\n                    for (let i = 0;i < reqLines.length ; i++){\r\n                        let line = reqLines[i]\r\n                        if (line.lineIndex == lineIndex){\r\n                            if (isSuccess){\r\n                                line.repFlag = 1\r\n                            }else {\r\n                                line.repFlag = 2\r\n                            }\r\n                            line.endTime = (new Date()).valueOf()\r\n                            line.reqTime = line.endTime - line.startTime\r\n                        }else {\r\n                            if (line.repFlag == 0){\r\n                                isParallelReqEnd = false\r\n                            }\r\n                        }\r\n                    }\r\n                    //并发请求结束，判断最优线路，并合并上报每个线路的情况\r\n                    if (isParallelReqEnd){\r\n                        Logger.error(\"dealParallelReq  isParallelReqEnd == true\")\r\n                        let successLines = []\r\n                        for (let i =0;i<reqLines.length;i++){\r\n                            let line = reqLines[i]\r\n                            if (line.repFlag == 1){\r\n                                successLines.push(line)\r\n                            }\r\n                        }\r\n                        if (successLines.length > 0){\r\n                            successLines.sort((a,b)=>{return a.reqTime - b.reqTime})\r\n                            let firstLine = successLines[0]\r\n                            Global.Setting.Urls.sortHallRoutes(firstLine.lineIndex)\r\n                        }\r\n                        \r\n                    \r\n                        let reportParams = []\r\n                        for (let i =0;i<reqLines.length;i++){\r\n                            let line = reqLines[i]\r\n                            let reportParam = { \"success\": line.repFlag == 1,\"htime\":line.reqTime,\"host\":line.host,\"key\":\"heartbeat\",\"url\": line.url}\r\n                            reportParams.push(reportParam)\r\n                        }\r\n                        let reportKey = ReportTool.REPORT_TYPE_PARALLEL_REQ\r\n                        Global.ReportTool.ReportPublicClientLog(reportKey, reportParams)\r\n                    }\r\n \r\n                }\r\n                \r\n            }\r\n        }\r\n    }\r\n\r\n    private onMessageError(extraData: HttpNetExtraData) {\r\n        extraData.retryTimes++;\r\n        let isChangeServer = false\r\n        //心跳、登录相关、getConfig请求异常，触发切换线路\r\n        if(extraData.funcName == NetOnline.HeartBeat \r\n            || extraData.suffix.indexOf(\"login\") > -1\r\n            || extraData.funcName == NetAppface.GetConfig\r\n            || extraData.funcName == NetAppface.GetGameList\r\n            || extraData.funcName == NetAppface.GetGameRoute\r\n            || extraData.funcName == NetCheckVersion.checkversion)\r\n            {\r\n                Logger.error(\"change server \");\r\n                isChangeServer = true\r\n                extraData.serverRoutes.changeToAnotherRoute();\r\n            }\r\n        //心跳不重连\r\n        if(extraData.funcName == NetOnline.HeartBeat)\r\n        {\r\n            this.dealParallelReq(extraData,false)\r\n            return;\r\n        }\r\n\r\n        extraData.refreshUrl();\r\n        //小于重连次数 则重新发送\r\n        if (extraData.retryTimes < extraData.retryTotalTime) {\r\n            //防止断网时回调太快\r\n            setTimeout(()=>{this.sendInternal(extraData, true,isChangeServer);}, 500)\r\n            return;\r\n        }\r\n        else {\r\n            let isShowErrorDialog = true;\r\n            if (extraData.showWaiting || extraData.funcName == NetAppface.GetGameRoute) {\r\n                Global.Event.event(GlobalEvent.FORCE_HIDE_WAITING);\r\n                let returnFunc = () => {\r\n                    Game.Event.event(Game.EVENT_FORCE_LEAVE_GAME);\r\n                    extraData.retryTimes = 0;\r\n                    setTimeout(()=>{this.sendInternal(extraData, true,isChangeServer);}, 500)\r\n                }\r\n                \r\n                if (extraData.suffix.indexOf(\"login\") > -1 || extraData.funcName == NetCheckVersion.checkversion)\r\n                {\r\n                    //判断盾是否初始化完成，手动等待盾初始化完成然后再重试\r\n                    if (Global.AppDun.checkIsDunLoading()){\r\n                        Logger.error(\"checkIsDunLoading true\")\r\n                        isShowErrorDialog = false;\r\n                        Global.Event.event(GlobalEvent.SHOW_NET_WAITING, extraData.funcName,15,\"重连中\",1,extraData.enableMask);\r\n                        this.startTimer(returnFunc)\r\n                    }\r\n                }else if (extraData.funcName == NetAppface.GetGameRoute){\r\n                    //重写重试方法\r\n                    returnFunc = ()=>{\r\n                        Logger.error(\"NetAppface.GetGameRoute 网络连接超时，请检查后重试\")\r\n                    }\r\n                }\r\n                if (isShowErrorDialog){\r\n                    Global.UI.showSingleBox(\"网络连接超时，请检查后重试\", returnFunc, returnFunc)\r\n                }\r\n            }\r\n            if(extraData.errorHandler && isShowErrorDialog)\r\n            {\r\n                extraData.errorHandler({_errno:-1, _errstr:\"网络连接超时，请检查后重试\"})\r\n            }\r\n            //@todo  通用错误处理  弹窗或者上报\r\n        }\r\n    }\r\n\r\n    private startTimer(callback) {\r\n        clearInterval(this.timeID);\r\n        let count = 0\r\n        this.timeID = setInterval(() => {\r\n            count ++;\r\n            if (!Global.AppDun.checkIsDunLoading()){\r\n                clearInterval(this.timeID);\r\n                if (callback){\r\n                    callback()\r\n                }\r\n            }else {\r\n                // 10s 自动超时\r\n                if (count >=10){\r\n                    Logger.error(\"check dun loading startTimer timout\")\r\n                    clearInterval(this.timeID);\r\n                    if (callback){\r\n                        callback()\r\n                    }\r\n                }\r\n            }\r\n        }, this.checkInerval);\r\n    }\r\n\r\n\r\n    private onMessage(msg, extraData: HttpNetExtraData) {\r\n        let serverObj = null;\r\n        let content = null\r\n        if(extraData.funcName == NetOnline.HeartBeat || extraData.funcName == NetAppface.GetConfig || extraData.funcName == NetAppface.GetGameList || extraData.funcName == NetAppface.GetGameRoute)\r\n        {\r\n            // Logger.log(\"sort hall routes \");\r\n            Global.Setting.Urls.sortHallRoutes()\r\n            if (extraData.funcName == NetOnline.HeartBeat){\r\n                this.dealParallelReq(extraData,true)\r\n            }\r\n                \r\n        }else if (extraData.suffix.indexOf(\"login\") > -1 || extraData.funcName == NetCheckVersion.checkversion){\r\n            // Logger.log(\"sort login routes \");\r\n            Global.Setting.Urls.sortLoginRoutes()\r\n        }\r\n        try {\r\n            // Logger.error(\"onMessage url = \" + extraData.url.getUrl())\r\n            // Logger.error(\"onMessage msg = \" + msg)\r\n            \r\n            content = Global.AESUtil.decodeMsg(msg);\r\n            if (content == \"\") {\r\n                Logger.error(\"解析协议失败\", msg, extraData.url.getUrl());\r\n            }\r\n            serverObj = JSON.parse(content);\r\n        }\r\n        catch (e) {\r\n            this.onMessageError(extraData);\r\n            Logger.error(\"解析JSON失败\", msg, extraData.url.getUrl(), e && e.message);\r\n            let reportParam0 = {\"msg\":msg,\"url\":extraData.url,\"exception\":e && e.message}\r\n            Global.ReportTool.ReportClientError(ReportTool.REPORT_TYPE_JSON_ERROR,reportParam0)\r\n            return;\r\n        }\r\n\r\n        if (serverObj._func != NetOnline.HeartBeat)\r\n        {\r\n            Logger.error(`收到服务器的回复${serverObj._func}=`+ JSON.stringify(serverObj._param));\r\n        } \r\n        else\r\n        {\r\n            if(serverObj && serverObj._param)\r\n                this.checkHelper.refreshCostTime(serverObj._check);\r\n        }\r\n\r\n        //@todo 显示放到onComplete之后  防止onComplete再调用waiting界面闪烁\r\n        //@notice getGameRoute 产品提需求去掉loading，但是重连还要显示出来，特殊处理\r\n        if (extraData.showWaiting || extraData.funcName == NetAppface.GetGameRoute) {\r\n            Global.Event.event(GlobalEvent.HIDE_NET_WAITING, extraData.funcName);\r\n        }\r\n\r\n        //判断协议场景是否一致  登录和大厅算一个场景\r\n        //如果在NoIgnoreWhenChangeSceneList 则忽略\r\n        if(extraData.sendInGame != Global.SceneManager.inGame() && this.NoIgnoreWhenChangeSceneList.indexOf(extraData.funcName) < 0)\r\n        {\r\n            Logger.error(\"http协议跨场景，丢弃\", extraData.url);\r\n            return;\r\n        }\r\n\r\n\r\n        if (!this.errorHelper.handleError(serverObj, extraData.errorHandler))\r\n            return;\r\n\r\n        //@todo  协议预处理\r\n\r\n        if (extraData.onComplete != null) {\r\n            extraData.onComplete(serverObj._param);\r\n        }\r\n        else {\r\n            //没有回调 默认用事件的形式派发处处\r\n            if (serverObj._func && serverObj._func != \"\") {\r\n                this.event(serverObj._func, serverObj._param);\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n\r\n\r\n    //自定义errorHandler 可以处理完定制的  再执行通用的\r\n    public tryHandleError(serverData) {\r\n        return this.errorHelper.tryHandleError(serverData);\r\n    }\r\n\r\n    //获取心跳网络延时\r\n    public getNetCost()\r\n    {\r\n        if(!this.checkHelper)\r\n            return 0;\r\n        return this.checkHelper.getNetCost();\r\n    }\r\n\r\n    private getMsgParam(mod: string, func: string, param: any, useMode = false, check = \"\") {\r\n        let msg: any = {}\r\n        if (useMode) {\r\n            msg._mod = mod\r\n            msg._func = func;\r\n        }\r\n        msg._param = param ? param : {}\r\n        msg._check = check\r\n        return msg;\r\n    }\r\n\r\n\r\n    /**\r\n     * 拉把协议发送接口\r\n     * @param mod gameGameRoute返回的mod\r\n     * @param key 协议方法名\r\n     * @param param \r\n     * @param complete \r\n     * @param onError \r\n     */\r\n    public sendLabaMsg(mod,key, param, complete, onError)\r\n    {\r\n        let serverRoutes = Global.Setting.Urls.gameRoutes\r\n        if(serverRoutes == null)\r\n        {\r\n            Logger.error(\"gameRoutes is null 先请求GetGameRoute\");\r\n            serverRoutes = Global.Setting.Urls.hallRoutes;\r\n        }\r\n        this.sendWithServerRouteAndMod(serverRoutes.getRandRoute(), mod, key, param, complete, onError);\r\n    }\r\n\r\n    /**\r\n     * 根据serverRoute mod  发送http协议，主要用于拉把类协议请求\r\n     * @param serverRoute 服务器返回的服务器地址信息\r\n     * @param mod 服务器路由\r\n     * @param key 协议方法名\r\n     * @param param     \r\n     * @param complete \r\n     * @param onError \r\n     */\r\n    public sendWithServerRouteAndMod(serverRoute:ServerRouteInfo, mod, key, param, complete, onError)\r\n    {\r\n        let serverUrl = serverRoute.getHttpUrlWithMod(mod);\r\n        let urlParam = Global.UrlUtil.getUrlCommonParam()\r\n        let suffix = \"?_func=\" + key + \"&\" + urlParam\r\n        let sendParam:any = {}\r\n        sendParam._param = param;\r\n        serverUrl.suffix = serverUrl.suffix + suffix\r\n        this.sendWithUrl(serverUrl, sendParam, complete, onError, key);\r\n    }\r\n\r\n\r\n    //通过url方式\r\n    public sendWithUrl(url, param, complete, onError, key = \"\")\r\n    {\r\n        Global.Http.send(url, param, (msg)=>\r\n        {\r\n            let content = Global.AESUtil.decodeMsg(msg);\r\n            if (content == \"\") {\r\n                Logger.error(\"解析协议失败\", msg, url);\r\n                return ;\r\n            }\r\n    \r\n            let serverObj = null;\r\n            try {\r\n                serverObj = JSON.parse(content);\r\n            }\r\n            catch (e) {\r\n                Logger.error(\"解析JSON失败\", msg, url, e && e.message);\r\n                return;\r\n            }\r\n\r\n            //该协议只在游戏中使用\r\n            //如果在NoIgnoreWhenChangeSceneList 则忽略\r\n            if(!Global.SceneManager.inGame() && this.NoIgnoreWhenChangeSceneList.indexOf(key) < 0)\r\n            {\r\n                Logger.error(\"game http协议跨场景，丢弃\", url);\r\n                return;\r\n            }\r\n\r\n            //处理错误\r\n            if(!this.errorHelper.handleError(serverObj, onError))\r\n                return;\r\n\r\n            if(complete)\r\n                complete(serverObj._param);\r\n        }, ()=>\r\n        {\r\n            //协议发送失败处理\r\n            if(onError)\r\n            {\r\n                onError({_errno:-1, _errstr:\"网络连接超时，请检查后重试\"});\r\n            }\r\n        })\r\n    }\r\n\r\n    //大厅内http协议请求url\r\n    public getHallSendUrl(mod: string, key: string, param?: any, onComplete?: Function, errorHandler?: Function, showWaiting = true, cache=0, extra:string = \"\") {\r\n        let serverRoutes = Global.Setting.Urls.hallRoutes;\r\n        let suffix = Global.Setting.Urls.hallUrlSuffix;\r\n        let serverData = this.getMsgParam(mod, key, param);\r\n        suffix = cc.js.formatStr(suffix, mod, key);\r\n        suffix += extra;\r\n        let extraData = this.createNetExtraData(serverRoutes, suffix, key, serverData, onComplete, errorHandler, showWaiting, cache);\r\n        let url = extraData.url\r\n        let sendUrl = url.getUrl()\r\n        return sendUrl;\r\n    }\r\n}"]}