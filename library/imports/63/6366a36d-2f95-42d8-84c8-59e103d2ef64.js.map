{"version":3,"sources":["assets\\hall\\scripts\\logic\\core\\net\\chat\\ListItem.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["/******************************************\r\n * @author kL <klk0@qq.com>\r\n * @date 2019/6/6\r\n * @doc 列表Item组件.\r\n * 说明：\r\n *      1、此组件须配合List组件使用。（配套的配套的..）\r\n * @end\r\n ******************************************/\r\nconst { ccclass, property, disallowMultiple, menu, executionOrder } = cc._decorator;\r\n\r\nimport List from './List';\r\n\r\nenum SelectedType {\r\n    NONE = 0,\r\n    TOGGLE = 1,\r\n    SWITCH = 2,\r\n}\r\n\r\n@ccclass\r\n@disallowMultiple()\r\n@menu('自定义组件/List Item')\r\n@executionOrder(-5001)          //先于List\r\nexport default class ListItem extends cc.Component {\r\n    //图标\r\n    @property({ type: cc.Sprite, tooltip: CC_DEV && '图标' })\r\n    icon: cc.Sprite = null;\r\n    //标题\r\n    @property({ type: cc.Node, tooltip: CC_DEV && '标题' })\r\n    title: cc.Node = null;\r\n    //选择模式\r\n    @property({\r\n        type: cc.Enum(SelectedType),\r\n        tooltip: CC_DEV && '选择模式'\r\n    })\r\n    selectedMode: SelectedType = SelectedType.NONE;\r\n    //被选标志\r\n    @property({\r\n        type: cc.Node, tooltip: CC_DEV && '被选标志',\r\n        visible() { return this.selectedMode > SelectedType.NONE }\r\n    })\r\n    selectedFlag: cc.Node = null;\r\n    //被选择的SpriteFrame\r\n    @property({\r\n        type: cc.SpriteFrame, tooltip: CC_DEV && '被选择的SpriteFrame',\r\n        visible() { return this.selectedMode == SelectedType.SWITCH }\r\n    })\r\n    selectedSpriteFrame: cc.SpriteFrame = null;\r\n    //未被选择的SpriteFrame\r\n    _unselectedSpriteFrame: cc.SpriteFrame = null;\r\n    //自适应尺寸\r\n    @property({\r\n        tooltip: CC_DEV && '自适应尺寸（宽或高）',\r\n    })\r\n    adaptiveSize: boolean = false;\r\n    //选择\r\n    _selected: boolean = false;\r\n    set selected(val: boolean) {\r\n        this._selected = val;\r\n        if (!this.selectedFlag)\r\n            return;\r\n        switch (this.selectedMode) {\r\n            case SelectedType.TOGGLE:\r\n                this.selectedFlag.active = val;\r\n                break;\r\n            case SelectedType.SWITCH:\r\n                let sp: cc.Sprite = this.selectedFlag.getComponent(cc.Sprite);\r\n                if (sp)\r\n                    sp.spriteFrame = val ? this.selectedSpriteFrame : this._unselectedSpriteFrame;\r\n                break;\r\n        }\r\n    }\r\n    get selected() {\r\n        return this._selected;\r\n    }\r\n    //按钮组件\r\n    private _btnCom: any;\r\n    get btnCom() {\r\n        if (!this._btnCom)\r\n            this._btnCom = this.node.getComponent(cc.Button);\r\n        return this._btnCom;\r\n    }\r\n    //依赖的List组件\r\n    public list: List;\r\n    //是否已经注册过事件\r\n    private _eventReg = false;\r\n    //序列id\r\n    public listId: number;\r\n\r\n    onLoad() {\r\n        // //没有按钮组件的话，selectedFlag无效\r\n        // if (!this.btnCom)\r\n        //     this.selectedMode == SelectedType.NONE;\r\n        //有选择模式时，保存相应的东西\r\n        if (this.selectedMode == SelectedType.SWITCH) {\r\n            let com: cc.Sprite = this.selectedFlag.getComponent(cc.Sprite);\r\n            this._unselectedSpriteFrame = com.spriteFrame;\r\n        }\r\n    }\r\n\r\n    onDestroy() {\r\n        this.node.off(cc.Node.EventType.SIZE_CHANGED, this._onSizeChange, this);\r\n    }\r\n\r\n    _registerEvent() {\r\n        if (!this._eventReg) {\r\n            if (this.btnCom && this.list.selectedMode > 0) {\r\n                this.btnCom.clickEvents.unshift(this.createEvt(this, 'onClickThis'));\r\n            }\r\n            if (this.adaptiveSize) {\r\n                this.node.on(cc.Node.EventType.SIZE_CHANGED, this._onSizeChange, this);\r\n            }\r\n            this._eventReg = true;\r\n        }\r\n    }\r\n\r\n    _onSizeChange() {\r\n        this.list._onItemAdaptive(this.node);\r\n    }\r\n    /**\r\n     * 创建事件\r\n     * @param {cc.Component} component 组件脚本\r\n     * @param {string} handlerName 触发函数名称\r\n     * @param {cc.Node} node 组件所在node（不传的情况下取component.node）\r\n     * @returns cc.Component.EventHandler\r\n     */\r\n    createEvt(component: cc.Component, handlerName: string, node: cc.Node = null) {\r\n        if (!component.isValid)\r\n            return;//有些异步加载的，节点以及销毁了。\r\n        component['comName'] = component['comName'] || component.name.match(/\\<(.*?)\\>/g).pop().replace(/\\<|>/g, '');\r\n        let evt = new cc.Component.EventHandler();\r\n        evt.target = node || component.node;\r\n        evt.component = component['comName'];\r\n        evt.handler = handlerName;\r\n        return evt;\r\n    }\r\n\r\n    showAni(aniType: number, callFunc: Function, del: boolean) {\r\n        let acts: any[];\r\n        switch (aniType) {\r\n            case 0: //向上消失\r\n                acts = [\r\n                    cc.scaleTo(.2, .7),\r\n                    cc.moveBy(.3, 0, this.node.height * 2),\r\n                ];\r\n                break;\r\n            case 1: //向右消失\r\n                acts = [\r\n                    cc.scaleTo(.2, .7),\r\n                    cc.moveBy(.3, this.node.width * 2, 0),\r\n                ];\r\n                break;\r\n            case 2: //向下消失\r\n                acts = [\r\n                    cc.scaleTo(.2, .7),\r\n                    cc.moveBy(.3, 0, this.node.height * -2),\r\n                ];\r\n                break;\r\n            case 3: //向左消失\r\n                acts = [\r\n                    cc.scaleTo(.2, .7),\r\n                    cc.moveBy(.3, this.node.width * -2, 0),\r\n                ];\r\n                break;\r\n            default: //默认：缩小消失\r\n                acts = [\r\n                    cc.scaleTo(.3, .1),\r\n                ];\r\n                break;\r\n        }\r\n        if (callFunc || del) {\r\n            acts.push(cc.callFunc(() => {\r\n                if (del) {\r\n                    this.list._delSingleItem(this.node);\r\n                    for (let n: number = this.list.displayData.length - 1; n >= 0; n--) {\r\n                        if (this.list.displayData[n].id == this.listId) {\r\n                            this.list.displayData.splice(n, 1);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                callFunc();\r\n            }));\r\n        }\r\n        this.node.runAction(cc.sequence(acts));\r\n    }\r\n\r\n    onClickThis() {\r\n        this.list.selectedId = this.listId;\r\n    }\r\n\r\n}\r\n"]}