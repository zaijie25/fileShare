{"version":3,"sources":["assets\\hall\\scripts\\framework\\libs\\cryptoTs\\mode\\BlockCipherMode.ts"],"names":[],"mappings":";;;;;;;AACA,uEAAsE;AAEtE;IAAA;IAsCA,CAAC;IAjCG;;;;;;;;;OASG;IACW,+BAAe,GAA7B,UAA8B,MAAmB,EAAE,EAAiB;QAChE,0FAA0F;QAC1F,IAAM,cAAc,GAAQ,IAAI,CAAC,SAAS,CAAC;QAE3C,OAAO,IAAI,cAAc,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;IAC1C,CAAC;IAED;;;;;;;;;OASG;IACW,+BAAe,GAA7B,UAA8B,MAAmB,EAAE,EAAiB;QAChE,0FAA0F;QAC1F,IAAM,cAAc,GAAQ,IAAI,CAAC,SAAS,CAAC;QAE3C,OAAO,IAAI,cAAc,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;IAC1C,CAAC;IApCa,yBAAS,GAAQ,mDAAwB,CAAC;IAE1C,yBAAS,GAAQ,mDAAwB,CAAC;IAmC5D,sBAAC;CAtCD,AAsCC,IAAA;AAtCqB,0CAAe","file":"","sourceRoot":"/","sourcesContent":["import { BlockCipher } from '../lib/BlockCipher';\r\nimport { BlockCipherModeAlgorithm } from './BlockCipherModeAlgorithm';\r\n\r\nexport abstract class BlockCipherMode {\r\n    public static Encryptor: any = BlockCipherModeAlgorithm;\r\n\r\n    public static Decryptor: any = BlockCipherModeAlgorithm;\r\n\r\n    /**\r\n     * Creates this mode for encryption.\r\n     *\r\n     * @param cipher A block cipher instance.\r\n     * @param iv The IV words.\r\n     *\r\n     * @example\r\n     *\r\n     *     var mode = CBC.createEncryptor(cipher, iv.words);\r\n     */\r\n    public static createEncryptor(cipher: BlockCipher, iv: Array<number>): BlockCipherModeAlgorithm {\r\n        // workaround for typescript not being able to create a abstract creator function directly\r\n        const encryptorClass: any = this.Encryptor;\r\n\r\n        return new encryptorClass(cipher, iv);\r\n    }\r\n\r\n    /**\r\n     * Creates this mode for decryption.\r\n     *\r\n     * @param cipher A block cipher instance.\r\n     * @param iv The IV words.\r\n     *\r\n     * @example\r\n     *\r\n     *     var mode = CBC.createDecryptor(cipher, iv.words);\r\n     */\r\n    public static createDecryptor(cipher: BlockCipher, iv: Array<number>): BlockCipherModeAlgorithm {\r\n        // workaround for typescript not being able to create a abstract creator function directly\r\n        const decryptorClass: any = this.Decryptor;\r\n\r\n        return new decryptorClass(cipher, iv);\r\n    }\r\n}"]}