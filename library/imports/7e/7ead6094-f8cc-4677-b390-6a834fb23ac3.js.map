{"version":3,"sources":["assets\\hall\\scripts\\logic\\core\\ui\\WndBase.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import EventDispatcher from \"../../../framework/event/EventDispatcher\";\r\nimport ViewBase from \"./ViewBase\";\r\nimport UIAnimComponent from \"../component/UIAnimComponent\";\r\n\r\nexport enum LoadingState {\r\n    None = 0,\r\n    Loading = 1,\r\n    Loaded = 2,\r\n}\r\n\r\nexport enum DestoryType {\r\n    None = 0,   //不销毁资源\r\n    Now = 1,    //关闭界面立即销毁资源\r\n    ChangeScene = 2,    //切场景时清理资源\r\n    Persist = 3 ,//持久化节点\r\n}\r\n\r\nexport default class WndBase extends ViewBase implements IAnimWnd {\r\n    //加载状态\r\n    public loadingState: LoadingState = LoadingState.None;\r\n    //销毁类型\r\n    public destoryType:DestoryType = DestoryType.ChangeScene;\r\n    //层级\r\n    public layer: string;\r\n    //动画类型\r\n    public animType: string;\r\n\r\n    //界面名称\r\n    public name: string;\r\n    //资源路径\r\n    public resPath: string;\r\n\r\n    public args: any[] = null;\r\n\r\n    //只有popup层有效\r\n    public showBg = true;\r\n\r\n    \r\n\r\n    //弹窗界面背景\r\n    public commonBg: cc.Node;\r\n    //通用弹窗组件\r\n    public animComp: UIAnimComponent;\r\n\r\n    //是否正在播动画\r\n    public isRuningAnim;\r\n\r\n    //是否初始化成功（拉取数据）\r\n    protected isInited = false;\r\n\r\n    //是否需要先拉拉取数据再显示弹窗\r\n    public isNeedDelay = false;\r\n\r\n    //当节点打开切场景的时候，界面不销毁，转移到持久化节点\r\n    public putToPersistWhenVisible = false;\r\n\r\n\r\n    \r\n\r\n    constructor() {\r\n        super();\r\n        this.internalEvent = new EventDispatcher();\r\n        this.onInit();\r\n        this.registToUIManager();\r\n    }\r\n\r\n    protected onInit() { }\r\n\r\n    protected registToUIManager() {\r\n        Global.UI.registUI(this);\r\n    }\r\n\r\n\r\n    //界面显示之前调用  负责初始化\r\n    public prepare() { }\r\n\r\n    public afterOpen() { }\r\n\r\n    public reshow() {\r\n        this.onReshow();\r\n    }\r\n\r\n    protected onReshow() { }\r\n\r\n\r\n    public close() {\r\n        Global.UI.close(this.name);\r\n    }\r\n\r\n\r\n    public realClose()\r\n    {\r\n        this.resetState()\r\n        this.onClose();\r\n        this.closeAllSubView()\r\n        // this.callAllView(\"realClose\");\r\n    }\r\n\r\n    public get isLoaded() {\r\n        return this.loadingState == LoadingState.Loaded;\r\n    }\r\n\r\n    public get isLoading() {\r\n        return this.loadingState == LoadingState.Loading;\r\n    }\r\n\r\n    public openAnimFinish() { }\r\n\r\n    public afterAnimFinish() { }\r\n\r\n    public closeAnimFinish() {\r\n        this.active = false;\r\n        if (this.commonBg)\r\n            this.commonBg.active = false;\r\n        this.onCloseAnimFinish();\r\n\r\n        if(this.destoryType == DestoryType.Now)\r\n        {\r\n\r\n            Global.UI.dispose(this.name)\r\n            if (this.node != null && cc.isValid(this.node)) {\r\n                this.node.removeFromParent(true);\r\n                this.node.destroy();\r\n                this.node = null;\r\n            }\r\n            Global.ResourceManager.releaseCache(this.resPath, null);\r\n            this.loadingState = LoadingState.None;\r\n        }\r\n    }\r\n\r\n\r\n    public releaseRes()\r\n    {\r\n        if(this.destoryType == DestoryType.ChangeScene)\r\n        {\r\n            Logger.error(\"release\", this.resPath)\r\n            Global.ResourceManager.releaseCache(this.resPath, null);\r\n            this.loadingState = LoadingState.None;\r\n        }\r\n    }\r\n\r\n\r\n    protected onCloseAnimFinish() {\r\n    }\r\n\r\n    public OnDataPrepared() {\r\n        Global.Event.event(GlobalEvent.HIDE_NET_WAITING, this.name)\r\n        if (this.active == true) {\r\n            return\r\n        }\r\n        this.isInited = true\r\n        if (this.isInited &&  this.isNeedDelay ) {\r\n            this.active = true;\r\n            this.animComp.bg = this.commonBg;\r\n            this.animComp.ui = this.node;\r\n            this.animComp.target = this;\r\n            this.animComp.doPopupOpenAnim();\r\n        }\r\n    }\r\n\r\n    public resetState()\r\n    {\r\n        this.isInited = false\r\n    }\r\n\r\n\r\n\r\n    //在持久化节点打开，退出游戏时，切场景之前打开\r\n    public onOpenPersist(){\r\n\r\n    }\r\n     //在持久化节点关闭，进入游戏时，切场景之后\r\n    public onClosePersist(){\r\n\r\n    }\r\n\r\n    //在持久化节点下，改变active\r\n    public set activeInPersistNode(value){\r\n        if(this._active == value)\r\n            return;\r\n        this._active = value;\r\n        this.node.active = value;\r\n        if(value){\r\n            this.onOpenPersist()\r\n        } else {\r\n            this.onClosePersist()\r\n        }\r\n    }\r\n}   "]}