{"version":3,"sources":["assets\\ddz\\ddz\\scripts\\handlers\\DdzSyncHandler.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,mDAA8C;AAC9C,qDAAuD;AAEvD,uDAAsD;AACtD,0CAAqC;AAErC;IAAyC,uCAAc;IAAvD;;IAUA,CAAC;IATa,yCAAW,GAArB,UAAsB,GAAG;QAErB,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;IACjC,CAAC;IAES,qCAAO,GAAjB,UAAkB,GAAG;QAEjB,mBAAS,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC;IACnC,CAAC;IACL,0BAAC;AAAD,CAVA,AAUC,CAVwC,wBAAc,GAUtD;AAVY,kDAAmB;AAahC;IAAuC,qCAAc;IAArD;;IAKA,CAAC;IAJa,uCAAW,GAArB,UAAsB,GAAG;QAErB,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,KAAK,CAAC;IAClC,CAAC;IACL,wBAAC;AAAD,CALA,AAKC,CALsC,wBAAc,GAKpD;AALY,8CAAiB;AAO9B;IAA2C,yCAAc;IAAzD;;IA4BA,CAAC;IA3Ba,uCAAO,GAAjB,UAAkB,GAAG;QAArB,iBA0BC;QAzBG,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QACnD,IAAI,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC;QACrC,IAAI,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC;QACrC,IAAI,SAAS,IAAI,SAAS,GAAG,CAAC,EAAC;YAC3B,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,EAAC;gBAC5C,MAAM,CAAC,KAAK,CAAC,mBAAmB,CAAC,6BAAa,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;gBAC3D,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;aACpD;SACJ;QACD,IAAI,SAAS,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,EAAC;YAClC,SAAS,CAAC,OAAO,CAAC,UAAA,IAAI;gBAClB,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC;gBACxB,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;gBACrB,IAAI,SAAS,GAAG,KAAI,CAAC,SAAS,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC3D,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC;gBAC9B,IAAG,MAAM,IAAI,MAAM,IAAI,IAAI,EAAC;oBACxB,QAAQ;oBACR,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,gBAAgB,EAAE,mBAAS,CAAC,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAI,SAAS;oBACrH,KAAI,CAAC,MAAM,CAAC,UAAU,CAAC,SAAS,EAAE,gBAAgB,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;iBAC5E;qBACG;oBACA,KAAI,CAAC,MAAM,CAAC,UAAU,CAAC,SAAS,EAAE,UAAU,EAAE,IAAI,EAAE,8BAAe,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;iBAChF;YACL,CAAC,CAAC,CAAC;SACN;IACL,CAAC;IACL,4BAAC;AAAD,CA5BA,AA4BC,CA5B0C,wBAAc,GA4BxD;AA5BY,sDAAqB","file":"","sourceRoot":"/","sourcesContent":["import DdzBaseHandler from \"./DdzBaseHandler\";\r\nimport { DdzGameActState } from \"../data/DdzGameConst\";\r\nimport DdzRuleConst from \"../data/DdzRuleConst\";\r\nimport { DdzAudioConst } from \"../data/DdzPathHelper\";\r\nimport DdzDriver from \"../DdzDriver\";\r\n\r\nexport class DdzSyncBeginHandler extends DdzBaseHandler{\r\n    protected refreshData(msg)\r\n    {\r\n        this.context.syncMode = true;\r\n    }\r\n\r\n    protected execute(msg)\r\n    {\r\n        DdzDriver.instance.beginSync();\r\n    }\r\n}\r\n\r\n\r\nexport class DdzSyncEndHandler extends DdzBaseHandler{\r\n    protected refreshData(msg)\r\n    {\r\n        this.context.syncMode = false;\r\n    }\r\n}\r\n\r\nexport class DdzSyncRefreshHandler extends DdzBaseHandler{\r\n    protected execute(msg){\r\n        this.context.updateMarkerData(msg._para.out_cards);\r\n        let userPlays = msg._para.user_plays;\r\n        let bombCount = msg._para.bomb_count;\r\n        if (bombCount && bombCount > 0){\r\n            if (!this.context.get(this.Define.FieldBombBgm)){\r\n                Global.Audio.playGameBundleMusic(DdzAudioConst.Bgm2, true);\r\n                this.context.set(this.Define.FieldBombBgm, true);\r\n            }\r\n        }\r\n        if (userPlays && userPlays.length > 0){\r\n            userPlays.forEach(user => {\r\n                let pokers = user.cards;\r\n                let type = user.type;\r\n                let localSeat = this.SitHelper.serverSToLocalN(user.chair);\r\n                let isPlay = user.status == 1;\r\n                if(isPlay && pokers && type){\r\n                    // 已出牌显示\r\n                    this.context.set(this.Define.FieldOnOutPokers, DdzDriver.instance.PlayRuleHelper.getPokersType(pokers));    // 需要按顺序来\r\n                    this.mainUI.callPlayer(localSeat, 'showPlayPokers', true, pokers, false);\r\n                }\r\n                else{\r\n                    this.mainUI.callPlayer(localSeat, 'setState', true, DdzGameActState.Play, 0);\r\n                }\r\n            });\r\n        }\r\n    }\r\n}"]}