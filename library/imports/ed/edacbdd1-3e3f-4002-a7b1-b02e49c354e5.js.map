{"version":3,"sources":["assets\\hall\\scripts\\logic\\hallcommon\\model\\RankModel.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,gEAA2D;AAC3D,yDAA0D;AAE1D;IAAuC,6BAAS;IAAhD;QAAA,qEAkEC;QA/DW,aAAO,GAAgC,EAAE,CAAA;;IA+DrD,CAAC;IA9Da,0BAAM,GAAhB;IAEA,CAAC;IAED;;OAEG;IACI,+BAAW,GAAlB,UAAmB,SAAiB,EAAE,IAAa;QAAnD,iBA4CC;QA3CG,IAAG,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,SAAS,CAAC,EAClD;YACI,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,iBAAiB,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC;YACtE,OAAM;SACT;QACD,IAAG,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,SAAS,CAAC,EAC1C;YACI,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,IAAI,QAAQ,EAAE,CAAA;SAC3C;QACD,IAAI,IAAI,EAAE;YACN,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC;YAC9C,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,KAAK,EAAE;gBAClF,MAAM,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,CAAA;gBAC1B,OAAO;aACV;YAED,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,CAAC;SAClC;aAAM;YACH,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC;SACpC;QACD,IAAI,KAAK,GAAG;YACR,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,IAAI;YACpC,MAAM,EAAE,SAAS;SACpB,CAAA;QACD,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,qBAAU,CAAC,GAAG,EAAE,qBAAU,CAAC,YAAY,EAAE,KAAK,EAAE,UAAC,GAAG;YACvE,KAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,IAAI,GAAG,CAAC;YACjD,IAAI,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;YACpB,IAAI,IAAI,GAAG,GAAG,CAAC,aAAa,IAAI,EAAE,CAAC;YACnC,IAAI,CAAC,IAAI,EAAE;gBACP,OAAO;aACV;YACD,IAAI,IAAI,IAAI,CAAC,EAAE;gBACX,KAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC;gBACnC,KAAI,CAAC,KAAK,CAAC,SAAS,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAC;aAChD;iBACI;gBACD,IAAI,KAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,IAAI,GAAG,IAAI;oBACnC,OAAO;gBACX,KAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,aAAa,GAAG,KAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;gBACrG,KAAI,CAAC,KAAK,CAAC,SAAS,CAAC,cAAc,EAAE,KAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;aACpF;QAEL,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;IACxB,CAAC;IAED,sBAAW,2BAAI;aAAf;YACI,OAAO,WAAW,CAAC;QACvB,CAAC;;;OAAA;IAEM,yBAAK,GAAZ;QAEI,IAAI,CAAC,OAAO,GAAG,EAAE,CAAA;IACrB,CAAC;IA/Da,wBAAc,GAAG,gBAAgB,CAAC;IAClC,2BAAiB,GAAG,mBAAmB,CAAC;IAgE1D,gBAAC;CAlED,AAkEC,CAlEsC,mBAAS,GAkE/C;kBAlEoB,SAAS;AAoE9B;IAAA;QACW,SAAI,GAAG,CAAC,CAAA;QACR,UAAK,GAAG,CAAC,CAAA;QACT,SAAI,GAAQ,IAAI,CAAA;IAC3B,CAAC;IAAD,eAAC;AAAD,CAJA,AAIC,IAAA","file":"","sourceRoot":"/","sourcesContent":["import ModelBase from \"../../../framework/model/ModelBase\";\r\nimport { NetAppface } from \"../../core/net/hall/NetEvent\";\r\n\r\nexport default class RankModel extends ModelBase {\r\n    public static UpdateRankData = \"UpdateRankData\";\r\n    public static RefreshScrollview = \"RefreshScrollview\";\r\n    private dataMap: { [key: number]: RankData } = {}\r\n    protected onInit() {\r\n\r\n    }\r\n    public msg: any;\r\n    /**\r\n     * rank_type 1 今日盈亏榜 2财富榜 3周排行榜 4 流水日佣金榜 5 税收周佣金榜 6佣金排行榜总榜\r\n     */\r\n    public reqRankInfo(rank_type: number, next: boolean) {\r\n        if(!next && this.dataMap.hasOwnProperty(rank_type))\r\n        {\r\n            this.event(RankModel.RefreshScrollview, this.dataMap[rank_type].data);\r\n            return\r\n        }\r\n        if(!this.dataMap.hasOwnProperty(rank_type))\r\n        {\r\n            this.dataMap[rank_type] = new RankData()\r\n        }\r\n        if (next) {\r\n            let data = this.dataMap[rank_type].data || {};\r\n            if (data.pointRankList && data.pointRankList.length >= this.dataMap[rank_type].total) {\r\n                Global.UI.fastTip(\"无更多信息\")\r\n                return;\r\n            }\r\n\r\n            this.dataMap[rank_type].page++;\r\n        } else {\r\n            this.dataMap[rank_type].page = 0;\r\n        }\r\n        let param = {\r\n            \"page\": this.dataMap[rank_type].page,\r\n            \"type\": rank_type\r\n        }\r\n        Global.HallServer.send(NetAppface.mod, NetAppface.GetPointRank, param, (res) => {\r\n            this.dataMap[rank_type].total = res.total || 100;\r\n            let page = res.page;\r\n            let list = res.pointRankList || [];\r\n            if (!list) {\r\n                return;\r\n            }\r\n            if (page == 0) {\r\n                this.dataMap[rank_type].data = res;\r\n                this.event(RankModel.RefreshScrollview, res);\r\n            }\r\n            else {\r\n                if (this.dataMap[rank_type].page > page)\r\n                    return;\r\n                this.dataMap[rank_type].data.pointRankList = this.dataMap[rank_type].data.pointRankList.concat(list);\r\n                this.event(RankModel.UpdateRankData, this.dataMap[rank_type].data.pointRankList);\r\n            }\r\n\r\n        }, null, false, 60);\r\n    }\r\n\r\n    public get Name() {\r\n        return \"RankModel\";\r\n    }\r\n\r\n    public clear()\r\n    {\r\n        this.dataMap = {}\r\n    }\r\n\r\n}\r\n\r\nclass RankData {\r\n    public page = 0\r\n    public total = 0\r\n    public data :any = null\r\n}"]}