{"version":3,"sources":["assets\\hall\\scripts\\logic\\core\\game\\serverHelper\\SocketHelper.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import GameServer from \"../GameServer\";\r\nimport { NetSocket } from \"../../../../framework/net/socket/NetSocket\";\r\nimport BaseServerHelper from \"./BaseServerHelper\";\r\nimport { ServerRouteInfo } from \"../../setting/ServerRoutes\";\r\n// import * as ByteBuffer from \"bytebuffer\";\r\n\r\nexport default class SocketHelper extends BaseServerHelper\r\n{\r\n    private socket:NetSocket;\r\n    private url:string;\r\n    private cerPath:string;\r\n    private msgList = [];\r\n    private bufferList = [];\r\n\r\n    public serverRoute:ServerRouteInfo;\r\n\r\n    private mod:string = \"\";\r\n    private suffix:string = \"\";\r\n    private _sendCount = 0;\r\n\r\n    protected onInit()\r\n    {\r\n        this.server.on(GameServer.Event_GameSocketCallReconnect, this, this.callReconnect)\r\n    }\r\n\r\n    private callReconnect()\r\n    {\r\n        this.msgList = [];\r\n        if(Global.Setting.Urls.gameRoutes)\r\n        {\r\n            Global.Setting.Urls.gameRoutes.changeToAnotherRoute();\r\n            let route = Global.Setting.Urls.gameRoutes.getCurRoute();\r\n            if(route == null)\r\n            {\r\n                if(Global.Setting.Urls.hallRoutes)\r\n                {\r\n                    Global.Setting.Urls.hallRoutes.changeToAnotherRoute();\r\n                    Logger.error(\"change socket url\")\r\n                }\r\n                route = Global.Setting.Urls.hallRoutes.getCurRoute();\r\n            }\r\n            if(route != null)\r\n            {\r\n                let serverUrl = route.getPbSocketUrl(this.mod);\r\n                serverUrl.suffix= serverUrl.suffix + this.suffix;\r\n                this.url = Global.UrlUtil.dealWebSocketUrl(serverUrl)\r\n                this.cerPath = serverUrl.cerPath\r\n                // 更新最新serverroute\r\n                this.serverRoute = route;\r\n            }\r\n            Logger.error(\"change socket url\");\r\n        }\r\n        this.connect(this.url, this.serverRoute, this.socket.usePb, this.mod, this.suffix,this.cerPath);\r\n    }\r\n\r\n\r\n    public connect(url:string, serverRoute:ServerRouteInfo, pbMode = false, mod = \"\", suffix = \"\",cerPath = \"\")\r\n    {\r\n        if (!url || url == \"\")\r\n            return;\r\n        this.mod = mod;\r\n        this.suffix = suffix;\r\n        this.serverRoute = serverRoute;\r\n        this.clear();\r\n        this.url = url;\r\n        this.cerPath = cerPath;\r\n        this.socket = new NetSocket(url, serverRoute,cerPath);\r\n        this.socket.init(this, this.onSocketMsg, this.onSocketOpen, this.onSocketError, this.onSocketClose, pbMode);\r\n        this.socket.connect();\r\n        this.server.event(GameServer.Event_GameSocketStartConnect);\r\n        Logger.log(\"connect url:\", url);\r\n    }\r\n\r\n    public send(msgObj, now = false)\r\n    {\r\n        // if(this.socket == null || !this.socket.isConnected && !now)\r\n        // {\r\n        //     this.msgList.push(content);\r\n        //     return;\r\n        // }\r\n        //如果是now  并且socket没初始化 直接丢弃\r\n        if(this.socket && this.socket.isConnected)\r\n        {\r\n            this._sendCount++;\r\n            msgObj.c = this._sendCount\r\n            let content = JSON.stringify(msgObj);\r\n            // Logger.error(\"socket send = \" + content)\r\n            let encrptedMsg = content\r\n            if (this.url && (this.url.startsWith(\"wss\") == false )&& content){\r\n                encrptedMsg = Global.AESUtil.aesEncrptMsg(content)\r\n            }\r\n            \r\n            this.socket.send(encrptedMsg);\r\n        }\r\n            \r\n    }\r\n\r\n    public sendBuffer(cmd, buffer:Uint8Array, now = false)\r\n    {\r\n        let size = buffer ? buffer.length : 0;\r\n        size += 4;\r\n        let bb = ByteBuffer.allocate(size, false, false);\r\n        bb.writeUint32(cmd, 0);\r\n        if (buffer) {\r\n            bb.append(buffer, 4);\r\n        }\r\n        if(this.socket == null || !this.socket.isConnected && !now)\r\n        {\r\n            Logger.error('push buffer in queue');\r\n            this.bufferList.push(bb);\r\n            return;\r\n        }\r\n        //如果是now  并且socket没初始化 直接丢弃\r\n        if(this.socket && this.socket.isConnected)\r\n        {\r\n            this.socket.send(bb.buffer);\r\n            bb.clear();\r\n        }\r\n    }\r\n\r\n    public sendBufferDirect(bb:ByteBuffer)\r\n    {\r\n        this.socket.send(bb.buffer);\r\n        bb.clear();\r\n    }\r\n\r\n    public clear()\r\n    {\r\n\r\n        if(this.socket)\r\n        {\r\n            for(let i = 0; i < this.msgList.length; i++)\r\n            {\r\n                this.send(this.msgList[i], true);\r\n            }\r\n            for(let i = 0; i < this.bufferList.length; i++)\r\n            {\r\n                this.sendBufferDirect(this.bufferList[i]);\r\n            }\r\n            this.socket.cleanSocket();\r\n            // //丢弃socket引用，防止leave发送完立刻断socket 导致消息发布出去\r\n            // let socket = this.socket;\r\n            // socket.cleanCallback();\r\n            // setTimeout(() => {\r\n            //     socket.cleanSocket();    \r\n            // }, 1000);\r\n            \r\n            this.socket = null;\r\n        }\r\n        this.msgList = [];\r\n        this.bufferList = [];\r\n        this._sendCount = 0\r\n    }\r\n\r\n\r\n    private onSocketOpen()\r\n    {\r\n        Logger.log(\"socket open:\", this.url);\r\n        this.server.event(GameServer.Event_GameSocketOpen);\r\n        Game.Event.event(Game.EVENT_SOCKET_OPEN);\r\n        Global.Setting.Urls.sortGameRoutes()\r\n\r\n        let serverUrl = this.getServerUrl();\r\n        if(serverUrl)\r\n            Global.ReportTool.markSocketSuccess(serverUrl, 0);\r\n        \r\n    }\r\n\r\n\r\n    private getServerUrl()\r\n    {\r\n        if(Global.Setting.Urls.gameRoutes)\r\n        {\r\n            let route = Global.Setting.Urls.gameRoutes.getCurRoute();\r\n            if(route == null)\r\n                route = Global.Setting.Urls.hallRoutes.getCurRoute();\r\n            if(route)\r\n            {\r\n                let serverUrl = route.getPbSocketUrl(this.mod);\r\n                if(serverUrl)\r\n                   return serverUrl;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    private onSocketMsg(msg)\r\n    {\r\n     \r\n        if(typeof(msg) == \"string\")\r\n        {\r\n            this.handleStringMsg(msg);\r\n        }\r\n        else\r\n        {\r\n            this.handlePbMsg(msg);\r\n        }\r\n    }\r\n\r\n    private handleStringMsg(msg)\r\n    {\r\n        let netObj = null;\r\n        try\r\n        {\r\n            let decode = Global.AESUtil.decodeMsg(msg);\r\n            netObj = JSON.parse(decode);\r\n        }\r\n        catch(e)\r\n        {\r\n            Logger.error(\"解析协议失败\", msg, e);\r\n            return;\r\n        }\r\n        if(netObj._param && netObj._param._cmd != Game.Command.HeartBeat)\r\n            Logger.log(\"SocketMsg:\", msg);\r\n        this.server.event(GameServer.Event_GameSocketMsg, netObj);\r\n    }\r\n\r\n    private handlePbMsg(msg)\r\n    {\r\n        let buffer = new Uint8Array(msg);\r\n        //大字节序读取command\r\n        let command = ByteBuffer.wrap(buffer.slice(0, 4), false).readUint32(0);\r\n        let paraData = buffer.slice(4);\r\n\r\n        command = \"*game*_\" + command;\r\n        this.server.event(GameServer.Event_GamePBSocketMsg, command, paraData);\r\n    }\r\n\r\n    private onSocketClose()\r\n    {\r\n        this.server.event(GameServer.Event_GameSocketClose);\r\n        Game.Event.event(Game.EVENT_SOCKET_CLOSE);\r\n    }\r\n\r\n    private onSocketError()\r\n    {\r\n        let serverUrl = this.getServerUrl();\r\n        if(serverUrl)\r\n            Global.ReportTool.markSocketFailed(serverUrl, -1);\r\n        this.server.event(GameServer.Event_GameSocketClose);\r\n        Game.Event.event(Game.EVENT_SOCKET_ERROR);\r\n        Game.Event.event(Game.EVENT_CALL_RECONNECT);\r\n    }\r\n\r\n    public onUpdate(dt)\r\n    {\r\n        if(!this.socket || !this.socket.isConnected)\r\n            return;\r\n        if(this.msgList.length > 0)\r\n        {\r\n            for(let i = 0; i < this.msgList.length; i++)\r\n            {\r\n                this.socket.send(this.msgList[i]);\r\n            }\r\n            this.msgList = [];\r\n        }\r\n    }\r\n}"]}