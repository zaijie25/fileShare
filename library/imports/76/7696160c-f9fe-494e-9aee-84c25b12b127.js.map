{"version":3,"sources":["assets\\hall\\scripts\\logic\\hall\\ui\\Spread\\WndCommissionlist.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,oDAA+C;AAC/C,wDAAmD;AAEnD,4DAA6D;AAE7D;IAA+C,qCAAO;IAAtD;QAAA,qEAkFC;QA9EG,cAAQ,GAAU,EAAE,CAAC;QACrB,iBAAW,GAAG,IAAI,CAAA;;IA6EtB,CAAC;IAxEa,kCAAM,GAAhB;QACI,IAAI,CAAC,IAAI,GAAG,mBAAmB,CAAC;QAChC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,EAAE,CAAC,QAAQ,CAAC;QAChC,IAAI,CAAC,OAAO,GAAG,yCAAyC,CAAC;IAE7D,CAAC;IAES,oCAAQ,GAAlB;QACI,IAAI,CAAC,WAAW,GAAgB,MAAM,CAAC,YAAY,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;QAC5E,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC;QAChD,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC;QAClD,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAA;QAC9C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,8BAA8B,CAAC,CAAA;QAC7D,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,yBAAyB,CAAC,CAAA;QAC3D,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAA;QAC3C,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,KAAK,CAAA;QAC1B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAA;QAC1C,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,KAAK,CAAA;QAC7B,IAAI,CAAC,YAAY,EAAE,CAAC;IAExB,CAAC;IAGS,kCAAM,GAAhB,UAAiB,IAAI;QACjB,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,qBAAU,CAAC,iBAAiB,EAAE,IAAI,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAA;QAC/E,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,KAAK,CAAA;QAC5B,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,EAAE;YAClC,OAAO;SACV;QACD,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAA;IACnC,CAAC;IACD,6CAAiB,GAAjB,UAAkB,IAAS;QACvB,IAAI,IAAI,IAAI,IAAI,EAAE;YACd,MAAM,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CAAA;YACxB,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAA;YACzB,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,KAAK,CAAA;YAC7B,OAAM;SACT;QACD,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,KAAK,CAAA;QAC1B,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAA;QAE5B,IAAI,GAAG,GAAe,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC;QACtC,IAAI,KAAK,GAAG,GAAG,CAAC,MAAM,CAAC;QAEvB,IAAI,CAAC,OAAO,EAAE,CAAA;QAEd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;YAC5B,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;YACnC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACzB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YACjC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;SACnD;IAEL,CAAC;IAES,mCAAO,GAAjB;QACI,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,qBAAU,CAAC,gBAAgB,EAAE,IAAI,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAA;IACnF,CAAC;IAES,qCAAS,GAAnB;QACI,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAA;QACzB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACvB,CAAC;IACO,wCAAY,GAApB;QAEI,IAAI,CAAC,QAAQ,GAAG,IAAI,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC3D,CAAC;IACM,mCAAO,GAAd;QACI,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACxC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACvB,CAAC;IACL,wBAAC;AAAD,CAlFA,AAkFC,CAlF8C,iBAAO,GAkFrD;;AACD;IAAkC,uCAAQ;IACtC,6BAAoB,QAAiB;QAArC,YACI,iBAAO,SACV;QAFmB,cAAQ,GAAR,QAAQ,CAAS;;IAErC,CAAC;IAES,wCAAU,GAApB;QACI,OAAO,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACzC,CAAC;IAES,uCAAS,GAAnB,UAAoB,IAAa;QAC7B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IACzB,CAAC;IACL,0BAAC;AAAD,CAbA,AAaC,CAbiC,kBAAQ,GAazC","file":"","sourceRoot":"/","sourcesContent":["import WndBase from \"../../../core/ui/WndBase\";\r\nimport PoolBase from \"../../../core/tool/PoolBase\";\r\nimport SpreadModel from \"../../../hallcommon/model/SpreadModel\";\r\nimport { NetAppface } from \"../../../core/net/hall/NetEvent\";\r\n\r\nexport default class WndCommissionlist extends WndBase {\r\n    copyItem: any;\r\n    contentNode: any;\r\n    itemPool: AwardRecordItemPool;\r\n    nodeList: any[] = [];\r\n    SpreadModel = null\r\n    noTips: cc.Node\r\n    titleNode: cc.Node\r\n\r\n\r\n    protected onInit() {\r\n        this.name = \"WndCommissionlist\";\r\n        this.layer = Global.UI.PopLayer;\r\n        this.resPath = \"hall/prefabs/ui/SpreadUI/Commissionlist\";\r\n\r\n    }\r\n\r\n    protected initView() {\r\n        this.SpreadModel = <SpreadModel>Global.ModelManager.getModel(\"SpreadModel\");\r\n        this.node.width = cc.Canvas.instance.node.width;\r\n        this.node.height = cc.Canvas.instance.node.height;\r\n        this.addCommonClick(\"close\", this.close, this)\r\n        this.copyItem = this.getChild(\"ScrollView/view/content/item\")\r\n        this.contentNode = this.getChild(\"ScrollView/view/content\")\r\n        this.noTips = this.getChild(\"noListTipsSk\")\r\n        this.noTips.active = false\r\n        this.titleNode = this.getChild(\"topTitle\")\r\n        this.titleNode.active = false\r\n        this.initItemPool();\r\n\r\n    }\r\n\r\n\r\n    protected onOpen(data) {\r\n        this.SpreadModel.on(NetAppface.GetSelfReadRecord, this, this.RefreshScrollView)\r\n        this.copyItem.active = false\r\n        if (data == null || data.length == 0) {\r\n            return;\r\n        }\r\n        this.RefreshScrollView(data[0])\r\n    }\r\n    RefreshScrollView(data: any) {\r\n        if (data == null) {\r\n            Global.UI.fastTip(\"无数据\")\r\n            this.noTips.active = true\r\n            this.titleNode.active = false\r\n            return\r\n        }\r\n        this.noTips.active = false\r\n        this.titleNode.active = true\r\n\r\n        let arr: Array<any> = data.list || [];\r\n        let count = arr.length;\r\n\r\n        this.recycle()\r\n\r\n        for (let j = 0; j < count; j++) {\r\n            let node = this.itemPool.getItem();\r\n            this.nodeList.push(node);\r\n            node.active = true;\r\n            node.setParent(this.contentNode);\r\n            node.getComponent(\"AwardCommiItem\").Init(arr[j])\r\n        }\r\n\r\n    }\r\n\r\n    protected onClose() {\r\n        this.SpreadModel.off(NetAppface.GetDayAgentCommi, this, this.RefreshScrollView)\r\n    }\r\n\r\n    protected onDispose() {\r\n        this.itemPool.resetPool()\r\n        this.nodeList = [];\r\n    }\r\n    private initItemPool() {\r\n\r\n        this.itemPool = new AwardRecordItemPool(this.copyItem);\r\n    }\r\n    public recycle() {\r\n        this.itemPool.recycleAll(this.nodeList);\r\n        this.nodeList = [];\r\n    }\r\n}\r\nclass AwardRecordItemPool extends PoolBase {\r\n    constructor(private copyNode: cc.Node) {\r\n        super();\r\n    }\r\n\r\n    protected createItem() {\r\n        return cc.instantiate(this.copyNode);\r\n    }\r\n\r\n    protected resetItem(node: cc.Node) {\r\n        node.active = false;\r\n        node.setParent(null);\r\n    }\r\n}"]}