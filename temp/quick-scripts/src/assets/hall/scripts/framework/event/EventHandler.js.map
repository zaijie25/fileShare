{"version":3,"sources":["assets\\hall\\scripts\\framework\\event\\EventHandler.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["export default class EventHandler\r\n{\r\n    private static _pool:any[] = [];\r\n    private static _gid = 0;\r\n    public caller:any;\r\n    public method:Function;\r\n    public args:[];\r\n    public once:boolean;\r\n    public id:number;\r\n\r\n    public setTo(caller, method, args, once)\r\n    {\r\n        EventHandler._gid++;\r\n        this.id = EventHandler._gid;\r\n        this.caller = caller;\r\n        this.method = method;\r\n        this.args = args;\r\n        this.once = once;\r\n        return this;\r\n    }\r\n\r\n    constructor(caller, method, args, once)\r\n    {\r\n        this.setTo(caller, method, args, once);\r\n    }\r\n\r\n\r\n    public clear()\r\n    {\r\n        this.caller = null;\r\n        this.args = null;\r\n        this.method = null;\r\n    }\r\n\r\n    public recover()\r\n    {\r\n        if(this.id > 0)\r\n        {\r\n            this.id = 0;\r\n            this.clear();\r\n            EventHandler._pool.push(this);\r\n        }\r\n    }\r\n\r\n\r\n    public run()\r\n    {\r\n        if(this.method == null)\r\n            return null;\r\n        //防止handler被使用后重新复制  避免被回收\r\n        let oldId = this.id;\r\n        let result = this.method.apply(this.caller, this.args);\r\n        oldId === this.id && this.once && this.recover();\r\n        return result;\r\n    }\r\n\r\n    public runWith(data) {\r\n        if (this.method == null) return null;\r\n        let oldId = this.id;\r\n        if (data == null)\r\n            var result = this.method.apply(this.caller, this.args);\r\n        //args 为空  data不是数组\r\n        else if (!this.args && !data.unshift) result= this.method.call(this.caller, data);\r\n        //args不为空\r\n        else if (this.args) result = this.method.apply(this.caller, this.args.concat(data));\r\n        //args 为空 data 为数组\r\n        else result = this.method.apply(this.caller, data);\r\n        oldId === this.id && this.once && this.recover();\r\n        return result;\r\n    }\r\n\r\n    public static create(caller, method:Function, args:[] = null, once:Boolean = true)\r\n    {\r\n        if (this._pool.length) return this._pool.pop().setTo(caller, method, args, once);\r\n        return new EventHandler(caller, method, args, once);\r\n    }\r\n}"]}