{"version":3,"sources":["assets\\hall\\scripts\\framework\\fsm\\Fsm.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import FsmState from \"./FsmState\";\r\n\r\nexport default class Fsm\r\n{\r\n    public name:string;\r\n    public stateMap = {}\r\n    public currentState:FsmState;\r\n    public isDestroyed = false;\r\n\r\n    public get isRunning()\r\n    {\r\n        return this.currentState != null;\r\n    }\r\n\r\n    public registState(state:FsmState)\r\n    {\r\n        if(state == null)\r\n            return;\r\n        let key = state.type;\r\n        if(this.stateMap[key] != null)\r\n        {\r\n            Logger.log(\"重复注册状态机:\" + key)\r\n            return;\r\n        }\r\n        this.stateMap[key] = state;\r\n        state.onInit(this);\r\n        this.isDestroyed = false;\r\n    }\r\n\r\n    public removeState(key)\r\n    {\r\n        if(!this.hasState(key))\r\n            return;\r\n        let state = this.getState(key);\r\n        if(state == this.currentState)\r\n        {\r\n            Logger.log(\"正在运行的state不能移除\");\r\n            return;\r\n        }\r\n        state.onDestory();\r\n        this.stateMap[key] = null;\r\n    }\r\n\r\n\r\n    public changeState(key)\r\n    {\r\n        let state = this.getState(key);\r\n        if(state == null)\r\n        {\r\n            Logger.log(\"找不到状态\"); \r\n            return;\r\n        }\r\n        if(this.currentState != null)\r\n        {\r\n            this.currentState.onLeave();\r\n        }\r\n        this.currentState = state;\r\n        state.onEnter();\r\n    }        \r\n\r\n\r\n    public start(key)\r\n    {\r\n        if(this.isRunning)\r\n            return;\r\n        let state = this.getState(key);\r\n        if(state == null)\r\n            return;\r\n        this.currentState = state;\r\n        this.currentState.onEnter()\r\n    }\r\n\r\n\r\n    public getState(key):FsmState\r\n    {\r\n        return this.stateMap[key];\r\n    }\r\n\r\n    public hasState(key)\r\n    {\r\n        return this.stateMap[key] != null;\r\n    }\r\n\r\n\r\n    public onUpdate()\r\n    {\r\n        if(this.currentState == null)\r\n            return;\r\n        this.currentState.onUpdate();\r\n    }\r\n\r\n    //发送状态机事件  只有当前状态机响应\r\n    public fireEvent(type, ...args)\r\n    {\r\n        if(this.currentState != null)\r\n        {\r\n            this.currentState.onEvent(type, args);\r\n        }\r\n    }\r\n\r\n    public shutDown()\r\n    {\r\n        if(this.currentState != null)\r\n        {\r\n            this.currentState.onLeave();\r\n            this.currentState = null;\r\n        }\r\n        for(let key in this.stateMap)\r\n        {\r\n            this.stateMap[key].onDestory()\r\n        }\r\n        this.stateMap = {};\r\n        this.isDestroyed = true;\r\n    }\r\n}"]}