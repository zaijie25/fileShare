{"version":3,"sources":["assets\\hall\\scripts\\framework\\libs\\cryptoTs\\mode\\BlockCipherModeAlgorithm.ts"],"names":[],"mappings":";;;;;;;AAGA;IAOI,kCAAmB,MAAmB,EAAE,EAAiB;QACrD,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;IAC1B,CAAC;IAED;;;;;;;;;OASG;IACI,uCAAI,GAAX,UAAY,MAAmB,EAAE,EAAkB;QAC/C,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;IAClB,CAAC;IAGL,+BAAC;AAAD,CA3BA,AA2BC,IAAA;AA3BqB,4DAAwB","file":"","sourceRoot":"/","sourcesContent":["import { BlockCipher } from '../lib/BlockCipher';\r\nimport { BlockCipherMode } from './BlockCipherMode';\r\n\r\nexport abstract class BlockCipherModeAlgorithm {\r\n    public _cipher!: BlockCipher;\r\n\r\n    public _iv: Array<number> | undefined;\r\n\r\n    public __creator: ((cipher: BlockCipher, iv: number[]) => BlockCipherMode) | undefined;\r\n\r\n    public constructor(cipher: BlockCipher, iv: Array<number>) {\r\n        this.init(cipher, iv);\r\n    }\r\n\r\n    /**\r\n     * Initializes a newly created mode.\r\n     *\r\n     * @param cipher A block cipher instance.\r\n     * @param iv The IV words.\r\n     *\r\n     * @example\r\n     *\r\n     *     var mode = CBC.Encryptor.create(cipher, iv.words);\r\n     */\r\n    public init(cipher: BlockCipher, iv?: Array<number>) {\r\n        this._cipher = cipher;\r\n        this._iv = iv;\r\n    }\r\n\r\n    public abstract processBlock(words: Array<number>, offset: number): void;\r\n}"]}