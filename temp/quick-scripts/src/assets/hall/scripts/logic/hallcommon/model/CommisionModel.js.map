{"version":3,"sources":["assets\\hall\\scripts\\logic\\hallcommon\\model\\CommisionModel.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import ModelBase from \"../../../framework/model/ModelBase\";\r\nimport { NetAppface } from \"../../core/net/hall/NetEvent\";\r\n\r\n\r\nexport default class CommisionModel extends ModelBase{\r\n   \r\n   \r\n    public get Name()\r\n    {\r\n        return \"CommisionModel\";\r\n    }\r\n\r\n    /**\r\n     * 红点控制\r\n     */\r\n    private _redFlag:boolean = false\r\n\r\n    public set redSwitch(flag)\r\n    {\r\n        this._redFlag = flag\r\n        \r\n    }\r\n\r\n    public get redSwitch()\r\n    {\r\n       return this._redFlag\r\n    }\r\n\r\n    public commisionList = null\r\n\r\n    public commisionInfoTable :{ [key: number]: any } ={} \r\n\r\n    public static UpdateScrollview = \"UpdateScrollview\";\r\n    public static UpdateleftView = \"UpdateleftView\";\r\n    public static GetCommisionAward = \"GetCommisionAward\";\r\n\r\n    public static UpdateData : \"UpdateData\"\r\n\r\n    protected onInit() {\r\n\r\n    }\r\n\r\n    /**\r\n     * 请求所有任务列表\r\n     */\r\n    public reqGetCommisionAllList()\r\n    {\r\n        Global.HallServer.send(NetAppface.mod, NetAppface.GetTaskActivityAllList, {}, (msg) => {\r\n            this.commisionList = msg.data\r\n            this.event(CommisionModel.UpdateleftView,msg.data)\r\n        },this.CommisionModelErrorFunc.bind(this),false)\r\n           \r\n\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param type 请求任务数据\r\n     */\r\n    public reqGetCommisionInfo(type)\r\n    {\r\n        // Global.Event.event(GlobalEvent.SHOW_NET_WAITING,\"requestTaskInfo\")\r\n        let param = {}\r\n        param[\"global_task_type\"] = type\r\n        Global.HallServer.send(NetAppface.mod, NetAppface.GetMyTaskActivityInfo, param, (msg) => {\r\n            this.commisionInfoTable[type] = msg\r\n            // Global.Event.event(GlobalEvent.HIDE_NET_WAITING,\"requestTaskInfo\")\r\n            this.event(CommisionModel.UpdateScrollview,msg)\r\n        },this.CommisionModelErrorFunc.bind(this),false)\r\n           \r\n\r\n    }\r\n\r\n    /**\r\n     * 领取任务奖励\r\n     * @param type 任务类型\r\n     * @param id 任务id\r\n     */\r\n    public reqGetCommisionAward(type,id)\r\n    {\r\n        let param = {}\r\n        param[\"task_id\"] = id\r\n        Global.HallServer.send(NetAppface.mod, NetAppface.GetMyTaskActivityReward, param, (msg) => {\r\n            this.updataCommisionData(type,id)\r\n            this.event(CommisionModel.GetCommisionAward,{\"task_reward\":msg.task_reward,\"task_id\":id,\"global_task_type\":type})\r\n        },this.CommisionModelErrorFunc.bind(this),false)\r\n           \r\n\r\n    }\r\n   \r\n\r\n    private CommisionModelErrorFunc(data: any) {\r\n        if (data._errstr != null) {\r\n            Global.UI.fastTip(data._errstr + \"\");\r\n            //Global.UI.fastTip(data._errstr + \"[\" + data._errno + \"]\");\r\n        }\r\n    }\r\n\r\n    public GetCommisionInfoByType(type: number) {\r\n        if (this.commisionInfoTable.hasOwnProperty(type)) {\r\n            return this.commisionInfoTable[type]\r\n        }\r\n        return null\r\n    }\r\n    /**\r\n     * 根据任务类型检查该项任务是否有可以领取的\r\n     * @param type 任务类型\r\n     */\r\n    public checkIsAnyCommisionCanGet(type)\r\n    {\r\n        if (!this.commisionInfoTable.hasOwnProperty(type)) {\r\n            return false\r\n        }\r\n        let commisionData = this.commisionInfoTable[type].data\r\n        for (let index = 0; index < commisionData.length; index++) {\r\n            let element = commisionData[index];\r\n            if(element.task_status == 1)\r\n            {\r\n                return true\r\n            }\r\n        }\r\n        return false\r\n    }\r\n    /**\r\n     * 领取后根据任务类型和id刷新本地数据\r\n     * @param type 任务类型\r\n     * @param id  任务id\r\n     */\r\n    private updataCommisionData(type,id)\r\n    {\r\n        if (!this.commisionInfoTable.hasOwnProperty(type)) {\r\n            return\r\n        }\r\n        let commisionReduce = false;        //本地维护任务数量\r\n        let commisionData = this.commisionInfoTable[type].data\r\n        for (let index = 0; index < commisionData.length; index++) {\r\n            let element = commisionData[index];\r\n            if(element.task_id == id)\r\n            {   \r\n                commisionReduce =true;\r\n                element.task_status = 2;\r\n                break;\r\n            }\r\n        }\r\n        if(commisionReduce){\r\n            let subItem = this.commisionList.find((item)=>{\r\n                return item.global_task_type == type;\r\n            })\r\n            if(subItem != null){\r\n                subItem.task_num -= 1;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public checkShowHallRedSpot()\r\n    {\r\n        if(!this.commisionList)\r\n        {\r\n            this.redSwitch = false\r\n            return false\r\n        }\r\n        for (let index = 0; index < this.commisionList.length; index++) {\r\n            let element = this.commisionList[index];\r\n            // if(element.global_task_type == 7){//屏蔽掉游戏活跃\r\n            //     continue;\r\n            // }\r\n            if(element.task_num > 0)\r\n            {\r\n                this.redSwitch = true\r\n                return true\r\n            }\r\n        }\r\n        this.redSwitch = false\r\n        return false\r\n    }\r\n\r\n    public resetData()\r\n    {\r\n        this.commisionList = null\r\n        this.commisionInfoTable = {}\r\n    }\r\n\r\n    \r\n    \r\n    \r\n}"]}