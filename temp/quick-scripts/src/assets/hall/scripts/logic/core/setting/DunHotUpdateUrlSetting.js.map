{"version":3,"sources":["assets\\hall\\scripts\\logic\\core\\setting\\DunHotUpdateUrlSetting.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import ServerRoutes, { ServerRouteInfo, ServerUrl } from \"./ServerRoutes\";\r\n\r\nexport default class DunHotUpdateUrlSetting {\r\n    private _hotUpdateServerRoutes:ServerRoutes\r\n\r\n    private _payServerRoutes:ServerRoutes\r\n\r\n    private _hotUpdateRouteCfg:any;\r\n\r\n    private _payRouteCfg:any;\r\n    private _dunType = 0\r\n\r\n    constructor(){\r\n        this._hotUpdateServerRoutes = new ServerRoutes();\r\n        this._payServerRoutes = new ServerRoutes();\r\n    }\r\n\r\n    public get hotUpdateUrl(){\r\n        let curRoute = this._hotUpdateServerRoutes.getCurRoute()\r\n        let serverRoutes = this.hotUpdateServerRoutes\r\n        let url :ServerUrl = null\r\n        if (curRoute){\r\n            if (curRoute.checkSelfIsOK()){\r\n                let serverUrl = curRoute.getUrl()\r\n                url = serverUrl\r\n                this.curDunType = curRoute.lo_type\r\n            }else {\r\n                let routesLen = serverRoutes.getRouteLen()\r\n                if (routesLen > 1){\r\n                    let nextRoute :ServerRouteInfo = serverRoutes.getAnotherRoute()\r\n                    if (nextRoute && nextRoute.checkSelfIsOK()){\r\n                        Logger.error(\"extraData.url changeToAnotherRoute\");\r\n                        let serverUrl = nextRoute.getUrl()\r\n                        url = serverUrl\r\n                        this.curDunType = nextRoute.lo_type\r\n                    }else {\r\n                        Logger.error(\"extraData.url nextRoute is null or not ok !!!\");\r\n                        let canUseRoute:ServerRouteInfo = serverRoutes.getCanUseRoute()\r\n                        if (canUseRoute){\r\n                            let serverUrl :ServerUrl = canUseRoute.getUrl()\r\n                            url = serverUrl\r\n                            this.curDunType = canUseRoute.lo_type\r\n                        }else {\r\n                            Logger.error(\"extraData.url canUseRoute = null\");\r\n                        }\r\n                        \r\n                    }\r\n                }else if(routesLen == 1) {\r\n                    // Logger.error(\"extraData.url routesLen = 1\");\r\n                    let serverUrl = curRoute.getUrl()\r\n                    this.curDunType = curRoute.lo_type\r\n                    url = serverUrl\r\n                }else {\r\n                    Logger.error(\"extraData.url routesLen = 0 \");\r\n                }\r\n            }\r\n        }else {\r\n            Logger.error(\"extraData.url curRoute is null !!!\");\r\n        }\r\n        if (url && url.getUrl()){\r\n           \r\n            return url.getUrl();\r\n        }\r\n        return null\r\n    } \r\n\r\n    public get payeUrl(){\r\n        let curRoute = this._payServerRoutes.getCurRoute()\r\n        let serverRoutes = this._payServerRoutes\r\n        let url :ServerUrl = null\r\n        if (curRoute){\r\n            if (curRoute.checkSelfIsOK()){\r\n                let serverUrl = curRoute.getUrl()\r\n                url = serverUrl\r\n            }else {\r\n                let routesLen = serverRoutes.getRouteLen()\r\n                if (routesLen > 1){\r\n                    let nextRoute :ServerRouteInfo = serverRoutes.getAnotherRoute()\r\n                    if (nextRoute && nextRoute.checkSelfIsOK()){\r\n                        Logger.error(\"extraData.url changeToAnotherRoute\");\r\n                        let serverUrl = nextRoute.getUrl()\r\n                        url = serverUrl\r\n                    }else {\r\n                        Logger.error(\"extraData.url nextRoute is null or not ok !!!\");\r\n                        let canUseRoute:ServerRouteInfo = serverRoutes.getCanUseRoute()\r\n                        if (canUseRoute){\r\n                            let serverUrl :ServerUrl = canUseRoute.getUrl()\r\n                            url = serverUrl\r\n                        }else {\r\n                            Logger.error(\"extraData.url canUseRoute = null\");\r\n                        }\r\n                        \r\n                    }\r\n                }else if(routesLen == 1) {\r\n                    // Logger.error(\"extraData.url routesLen = 1\");\r\n                    let serverUrl = curRoute.getUrl()\r\n                    url = serverUrl\r\n                }else {\r\n                    Logger.error(\"extraData.url routesLen = 0 \");\r\n                }\r\n            }\r\n        }else {\r\n            Logger.error(\"extraData.url curRoute is null !!!\");\r\n        }\r\n        if (url && url.getUrl()){\r\n           \r\n            return url.getUrl();\r\n        }\r\n        return null\r\n    } \r\n\r\n    public switchRoute()\r\n    {\r\n        if(this._hotUpdateServerRoutes)\r\n        {\r\n            this._hotUpdateServerRoutes.changeToAnotherRoute()\r\n        }\r\n    }\r\n\r\n\r\n    public get hotUpdateRouteCfg(){\r\n        return this._hotUpdateRouteCfg;\r\n    }\r\n\r\n    \r\n    public get payRouteCfg(){\r\n        return this._payRouteCfg;\r\n    }\r\n\r\n    public get curDunType()\r\n    {\r\n       return this._dunType\r\n    }\r\n\r\n    public set curDunType(val)\r\n    {\r\n        if(!val)\r\n        {\r\n            val = 0\r\n        }\r\n        this._dunType = val\r\n    }\r\n\r\n   \r\n\r\n    public set hotUpdateRouteCfg(cfg:any){\r\n        this._hotUpdateRouteCfg = cfg;\r\n        \r\n        if(!this._hotUpdateServerRoutes)\r\n        {\r\n            this._hotUpdateServerRoutes = new ServerRoutes();\r\n        }\r\n        this._hotUpdateServerRoutes.cleanRoutes()\r\n        this._hotUpdateServerRoutes.parse(cfg)\r\n    }\r\n\r\n\r\n    public set payRouteCfg(cfg:any){\r\n        this._payRouteCfg = cfg;\r\n        \r\n        if(!this._payServerRoutes)\r\n        {\r\n            this._payServerRoutes = new ServerRoutes();\r\n        }\r\n        this._payServerRoutes.cleanRoutes()\r\n        this._payServerRoutes.parse(cfg)\r\n    }\r\n\r\n\r\n\r\n\r\n    public get hotUpdateServerRoutes(){\r\n        return this._hotUpdateServerRoutes\r\n    }\r\n\r\n    public set hotUpdateServerRoutes(route:ServerRoutes){\r\n        this._hotUpdateServerRoutes = route;\r\n    }\r\n    \r\n}"]}