{"version":3,"sources":["assets\\hall\\scripts\\logic\\core\\component\\AdmissionBoxComp.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import GameBasePool from \"../tool/GameBasePool\";\r\nimport PoolBase from \"../tool/PoolBase\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class AdmissionBoxComp extends cc.Component {\r\n    private showNode: cc.Node;\r\n\r\n    //当前是否播放入场通告\r\n    private isPlaying: boolean = false;\r\n\r\n    //轮询Timer\r\n    private checkTimer = null;\r\n\r\n    //消息缓存队列\r\n    private msgDataCacheList = [];\r\n    //消息队列缓存长度限制\r\n    private listLengthLimit = 8;\r\n\r\n    //所有优先级的总长度\r\n    private totalLenghLimit = 10;\r\n\r\n    private layout: cc.Node;\r\n\r\n    private ItemPool: copyPool;\r\n\r\n    onLoad() {\r\n        this.showNode = cc.find(\"showNode\", this.node)\r\n        this.layout = cc.find(\"Layout\", this.node)\r\n        this.layout.active = false;\r\n        this.node.opacity = 0;\r\n        this.ItemPool = new copyPool(cc.find(\"pool\", this.node), this.layout)\r\n    }\r\n\r\n    updateUseInfo(str: cc.Label) {\r\n        let lab = \"</color><color=#00ff00>\" + str + \"</color><color=#ffffff>\"\r\n        return lab;\r\n    }\r\n\r\n    public init() {\r\n        this.startTimer();\r\n    }\r\n\r\n    //界面销毁\r\n    protected onDestroy() {\r\n        this.stopTimer();\r\n    }\r\n\r\n    onEnable() {\r\n        this.isPlaying = false;\r\n        this.reset()\r\n        this.startTimer();\r\n    }\r\n\r\n    onDisable() {\r\n        this.stopTimer();\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.checkTimer == null) {\r\n            this.checkTimer = setInterval(this.checkMsgList.bind(this), 100);\r\n            Global.Event.on(GlobalEvent.VIPADMISSION, this, this.addMsgData);\r\n        }\r\n    }\r\n\r\n    stopTimer() {\r\n        if (this.checkTimer) {\r\n            Global.Event.off(GlobalEvent.VIPADMISSION, this, this.addMsgData);\r\n            clearInterval(this.checkTimer);\r\n            this.checkTimer = null;\r\n        }\r\n    }\r\n\r\n    reset() {\r\n        this.node.stopAllActions();\r\n        this.isPlaying = false;\r\n    }\r\n\r\n    private checkMsgList() {\r\n        try {\r\n            if (!this.node || !this.node.isValid)\r\n                return;\r\n            if (this.isPlaying) return;\r\n\r\n            if (this.msgDataCacheList.length == 0) {\r\n                this.node.opacity = 0;\r\n                return;\r\n            }\r\n            var data = this.msgDataCacheList.shift();\r\n            var msgStr = \"\";\r\n            var msgVip = 0;\r\n            if (data.nickname != null) {\r\n                let name = data.name;//玩家名字\r\n                let vip = data.vip;//玩家等级\r\n                msgStr = this.updateUseInfo(name);\r\n                msgVip = vip;\r\n            } else {\r\n                msgStr = data.name;\r\n                msgVip = data.vip;\r\n            }\r\n            this.playAnim(true, msgVip, msgStr);\r\n        } catch (error) {\r\n        }\r\n    }\r\n\r\n    private playAnim(play: boolean, vip: number, name: string) {\r\n        if (play) {\r\n            let node = this.getItem(vip, name)\r\n            Global.Component.scheduleOnce(() => {\r\n                this.recoveryItem(node)\r\n            }, 3)\r\n            this.isPlaying = true;\r\n            this.node.opacity = 255;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 新建一个预制体\r\n     * @param vip \r\n     * @param name \r\n     */\r\n    private getItem(vip: number, name: string) {\r\n        let node = this.ItemPool.getItem();\r\n        let vipSp = cc.find(\"vipSp\", node).getComponent(cc.Sprite)\r\n        let nameLab = cc.find(\"name\", node).getComponent(cc.RichText)\r\n        let vipSk1 = cc.find(\"vipsmall1\", vipSp.node)\r\n        let vipSk2 = cc.find(\"vipsmall2\", vipSp.node)\r\n        if (nameLab) {\r\n            //设置richtext的属性\r\n            nameLab.node.anchorX = 0;\r\n            nameLab.node.anchorY = this.node.anchorY;\r\n            nameLab.horizontalAlign = cc.macro.TextAlignment.LEFT;\r\n            nameLab.fontSize = 26;\r\n            nameLab.useSystemFont = true;\r\n            nameLab.fontFamily = \"Microsoft Yahei\";\r\n            nameLab.maxWidth = 0;\r\n            nameLab.lineHeight = this.node.height;\r\n            nameLab.handleTouchEvent = true;\r\n            nameLab.string = name;\r\n        }\r\n        if (vipSp) {\r\n            var atlasString = \"hall/texture/admissionBox/admissionBox_Atlas\";\r\n            Global.ResourceManager.loadAutoAtlas(vipSp, atlasString, \"v\" + vip.toString(), null, false);\r\n            if (vip >= 7 && vip < 10) {\r\n                vipSk1.active = true;\r\n            } else if (vip >= 10) {\r\n                vipSk2.active = true;\r\n            }\r\n            else {\r\n                vipSk1.active = false;\r\n                vipSk2.active = false;\r\n            }\r\n        }\r\n        node.y = 0;\r\n        node.active = true;\r\n        node.setParent(this.showNode)\r\n        return node\r\n    }\r\n\r\n    /**回收 */\r\n    private recoveryItem(reitem: cc.Node) {\r\n        reitem.active = false;\r\n        this.isPlaying = false;\r\n        this.ItemPool.recycleItem(reitem);\r\n    }\r\n\r\n    private addMsgData(msg: any) {\r\n        this.addMsgItem(msg);\r\n    }\r\n\r\n    /**\r\n     * 添加数据\r\n     * @param data {\r\n            msg,\r\n            type,\r\n     * }\r\n     */\r\n    protected addMsgItem(data: any) {\r\n        if (this.node == null || !this.node.isValid) {\r\n            this.stopTimer();\r\n            return;\r\n        }\r\n        //缓存数量大于10 任何消息都丢\r\n        if (this.msgDataCacheList.length >= this.totalLenghLimit) {\r\n            return;\r\n        }\r\n        //当数据大于8时，优先插入高优先级数据\r\n        if (this.msgDataCacheList.length >= this.listLengthLimit) {\r\n            if (data.clientPriority != null && data.clientPriority == 0 && data.nickname != null) {\r\n                return;\r\n            }\r\n        }\r\n        this.msgDataCacheList.push(data);\r\n    }\r\n}\r\n\r\nclass copyPool extends PoolBase {\r\n    constructor(private rootNode: cc.Node, private copyNode: cc.Node) {\r\n        super();\r\n    }\r\n    protected get preCount() {\r\n        return 60;\r\n    }\r\n\r\n    protected get everyCount() {\r\n        return 30;\r\n    }\r\n\r\n    protected createItem() {\r\n        let node: cc.Node = cc.instantiate(this.copyNode);\r\n        node.active = true;\r\n        return node;\r\n    }\r\n\r\n    protected resetItem(node: cc.Node) {\r\n        node.active = false;\r\n        node.setParent(null);\r\n    }\r\n    public recycleAll(arr: Array<any>) {\r\n        super.recycleAll(arr);\r\n    }\r\n}\r\n"]}