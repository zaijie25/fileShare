{"version":3,"sources":["assets\\hall\\scripts\\logic\\core\\net\\hall\\HallErrorHandler.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import ServerRoutes, { ServerUrl } from \"../../setting/ServerRoutes\";\r\n\r\nexport class HttpNetExtraData\r\n{\r\n    //外部可配置信息\r\n    //链接超时  暂时先不用\r\n    public timeout:3000;\r\n    //失败后是否显示提示\r\n    public showErrorTips = false;\r\n    //重连总次数  默认为3\r\n    public retryTotalTime = 3;\r\n\r\n\r\n    //routes\r\n    public serverRoutes:ServerRoutes;\r\n    //url后缀\r\n    public suffix;\r\n    //协议名称\r\n    public funcName:string;\r\n    //重连逻辑使用\r\n    public url:ServerUrl;\r\n    //重试次数\r\n    public retryTimes = 0;\r\n    public param:any;\r\n    public onComplete:Function;\r\n    public errorHandler:Function;\r\n    //是否显示waiting界面\r\n    public showWaiting = false;\r\n\r\n    public sendInGame = null;\r\n\r\n    //是否并行请求\r\n    public isParallelReq = false;\r\n    //线路no\r\n    public lineIndex = 0\r\n    /**\r\n     * 是否启用waiting界面的mask\r\n     */\r\n    public enableMask = true\r\n\r\n\r\n    //缓存机制\r\n    public cache:number = 0; //0: 不缓存, 1-10000: 按秒时效, 10001:按天缓存\r\n\r\n    public refreshUrl()\r\n    {\r\n        let url = this.serverRoutes.getCurRoute().getUrl()\r\n        let suffix = Global.UrlUtil.refreshSuffixOperTime(this.suffix)\r\n        this.suffix = suffix\r\n        url.suffix = url.suffix + suffix\r\n        this.url = url;\r\n    }\r\n    \r\n}\r\n\r\n\r\nexport class HallErrorHelper\r\n{\r\n    //登录失败\r\n    private CheckLoginFailed = 401;\r\n    //三方登录失败\r\n    private OpenidLoginFailed = 402;\r\n\r\n    //系统维护\r\n    private SystemMaintain = 403;\r\n\r\n    //服务器业务逻辑错误处理\r\n    public tryHandleError(serverData):boolean\r\n    {\r\n        if(serverData == null)\r\n            return false;\r\n        if(serverData._errno == null)\r\n            return true;\r\n\r\n        if(serverData._errno == -1)\r\n            return false;\r\n\r\n        if(serverData._errno == this.CheckLoginFailed || serverData._errno == this.OpenidLoginFailed)\r\n        {\r\n            this.reLogin(serverData._errstr,serverData._errno);\r\n            return false;\r\n        }\r\n\r\n        //403  系统维护中   跳到登录界面\r\n        if(serverData._errno == this.SystemMaintain)\r\n        {\r\n            this.reLogin(\"系统维护中，请重新登录\",403, true);\r\n            return false;\r\n        }\r\n\r\n        if(serverData._errno > 1000  && serverData._errno != 2002)\r\n            Global.UI.showSingleBox(serverData._errstr);\r\n            //Global.UI.fastTip(serverData._errstr+\"[\"+serverData._errno+\"]\");\r\n        else if (serverData._errno == 2002)\r\n        {\r\n            Global.Toolkit.showMoneyNotEnough();\r\n        }\r\n        else\r\n        {\r\n           // Global.UI.fastTip(serverData._errstr+\"[\"+serverData._errno+\"]\");\r\n            Global.UI.showSingleBox(serverData._errstr);\r\n        }\r\n            \r\n\r\n        return false;\r\n    }\r\n\r\n    public handleError(serverData, errorHandler):boolean\r\n    {\r\n        if(serverData == null)\r\n            return false;\r\n        if(serverData._errno == null)\r\n            return true;\r\n        if(errorHandler)\r\n            return errorHandler(serverData)\r\n        return this.tryHandleError(serverData);\r\n    }\r\n\r\n    private reLogin(errorStr, errno,useTip = false)\r\n    {\r\n        let func = ()=>\r\n        {\r\n            Global.SceneManager.goToLogin();\r\n        }\r\n        if(!useTip)\r\n            Global.UI.showSingleBox((errorStr + \"[\"+errno+\"]\"), func, func);\r\n        else\r\n        {\r\n            Global.UI.fastTip(errorStr);\r\n           // Global.UI.fastTip(errorStr + [\"+errno+\"]);\r\n            func();\r\n        }\r\n    }\r\n}"]}