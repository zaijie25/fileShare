{"version":3,"sources":["assets\\hall\\scripts\\logic\\core\\tool\\TaskManager.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,kDAA6C;AAE7C,IAAM,UAAU,GAAG,WAAW,CAAC;AAC/B,IAAM,QAAQ,GAAG,0BAA0B,CAAC;AAC5C,IAAM,QAAQ,GAAG,CAAC,CAAC;AACnB;IAAA;QAqBY,WAAM,GAAW,CAAC,CAAC;QACnB,aAAQ,GAAU,EAAE,CAAC;QACrB,cAAS,GAAW,EAAE,CAAC;QACvB,gBAAW,GAAW,CAAC,CAAC;QACxB,iBAAY,GAAG,EAAE,CAAC;QAElB,iBAAY,GAAG,KAAK,CAAC;IA6HjC,CAAC;IAtJG,mBAAmB;IACL,yBAAa,GAA3B,UAA4B,IAAa;QACrC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IACzB,CAAC;IAEmB,sBAAU,GAA9B;;;gBACI,sBAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;wBAC/B,MAAM,CAAC,eAAe,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC,QAAQ,CAAC,EAAE,UAAC,GAAG,EAAE,GAAG;4BAClE,IAAI,GAAG,EAAC;gCACJ,MAAM,CAAC,GAAG,CAAC,CAAC;6BACf;iCACG;gCACA,OAAO,CAAC,GAAG,CAAC,CAAC;6BAChB;wBACL,CAAC,CAAC,CAAC;oBACP,CAAC,CAAC,EAAA;;;KACL;IAWM,0BAAI,GAAX,UAAY,QAAiB,EAAE,MAAc,EAAE,GAAW;QAA1D,iBA6BC;QA5BG,IAAI,CAAC,WAAW,CAAC,QAAQ;YACrB,OAAO;QACX,IAAI,CAAC,QAAQ,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC;YAClC,OAAO;QACX,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,MAAM,GAAG,MAAM,CAAC,eAAe,CAAC,YAAY,CAAC,UAAU,EAAE,QAAQ,EAAE,EAAE,CAAC,MAAM,CAAC,CAAC;QAClF,IAAI,CAAC,MAAM,EAAC;YACR,MAAM,CAAC,eAAe,CAAC,aAAa,CAAC,UAAU,EAAE,QAAQ,EAAE,UAAC,KAAK,EAAE,MAAM;gBACrE,IAAI,KAAK,IAAI,IAAI,IAAI,MAAM,IAAI,IAAI,EAAE;oBACjC,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;oBAC7C,OAAM;iBACT;gBACD,IAAI,QAAQ,GAAY,EAAE,CAAC,WAAW,CAAC,MAAM,CAAC,CAAA;gBAC9C,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;gBAC7B,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC;gBACvB,KAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,gBAAgB,CAAC,QAAQ,EAAE,EAAE,EAAE,kBAAQ,CAAC,CAAC;gBACzE,KAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;YAChC,CAAC,CAAC,CAAA;SACL;aACG;YACA,IAAI,QAAQ,GAAY,EAAE,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;YAC/C,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;YAC7B,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,gBAAgB,CAAC,QAAQ,EAAE,EAAE,EAAE,kBAAQ,CAAC,CAAC;YACzE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;SAC/B;QACD,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;QACpD,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;IACvD,CAAC;IAEM,wCAAkB,GAAzB;QAAA,iBAWC;QAVG,IAAI,CAAC,IAAI,CAAC,MAAM;YACZ,OAAM,CAAA,mDAAmD;QAC7D,IAAI,KAAK,GAAG,EAAE,CAAC;QACf,KAAK,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;QAC/B,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,yBAAyB,EAAE,KAAK,EAAE,UAAC,GAAG;YACzE,IAAI,CAAC,KAAI,CAAC,QAAQ,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,KAAI,CAAC,QAAQ,CAAC;gBAC5C,OAAO;YACX,KAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,IAAI,IAAI,EAAE,CAAC;YAC/B,KAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;IACpB,CAAC;IAEO,qCAAe,GAAvB;QACI,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAC;YACzB,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;gBACzC,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBAC5B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC;gBACnD,IAAI,IAAI,CAAC,WAAW,IAAI,CAAC,EAAC;oBACtB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC;oBAC9B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC;oBACzC,MAAM;iBACT;aACJ;SACJ;IACL,CAAC;IAEM,yCAAmB,GAA1B;QAAA,iBAsBC;QArBG,IAAI,CAAC,WAAW,CAAC,QAAQ;YACrB,OAAO;QACX,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,WAAW;YACpC,OAAO;QACX,IAAI,CAAC,IAAI,CAAC,MAAM;YACZ,OAAM,CAAA,mDAAmD;QAC7D,IAAI,KAAK,GAAG,EAAE,CAAC;QACf,KAAK,CAAC,kBAAkB,CAAC,GAAG,IAAI,CAAC,WAAW,IAAI,CAAC,CAAC;QAClD,KAAK,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,SAAS,IAAI,EAAE,CAAC;QACxC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,wBAAwB,EAAE,KAAK,EAAE,UAAC,GAAG;YACxE,IAAI,CAAC,KAAI,CAAC,QAAQ,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,KAAI,CAAC,QAAQ,CAAC;gBAC5C,OAAO;YACX,IAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,EAAC;gBACpB,OAAO,CAAK,wDAAwD;aACvE;YACD,KAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;YAC9B,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,GAAG,CAAC,WAAW,CAAC;YACjD,IAAI,GAAG,CAAC,WAAW,IAAI,CAAC,EAAC;gBACrB,KAAI,CAAC,eAAe,EAAE,CAAC;aAC1B;QACL,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;IACpB,CAAC;IAEM,mCAAa,GAApB;QAAA,iBASC;QARG,IAAI,CAAC,WAAW,CAAC,QAAQ;YACrB,OAAO;QACX,IAAI,IAAI,CAAC,KAAK,EAAC;YACX,IAAI,CAAC,YAAY,EAAE,CAAC;SACvB;QACD,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC;YACrB,KAAI,CAAC,mBAAmB,EAAE,CAAC;QAC/B,CAAC,EAAE,QAAQ,GAAG,IAAI,CAAC,CAAC;IACxB,CAAC;IAEO,8BAAQ,GAAhB;QACI,IAAI,IAAI,CAAC,YAAY;YACjB,IAAI,CAAC,aAAa,EAAE,CAAC;IAC7B,CAAC;IAEO,6BAAO,GAAf;QACI,IAAI,IAAI,CAAC,KAAK,EAAC;YACX,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,YAAY,EAAE,CAAC;SACvB;IACL,CAAC;IAEO,kCAAY,GAApB;QACI,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC1B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IACtB,CAAC;IAEM,+BAAS,GAAhB;QACI,IAAI,CAAC,WAAW,CAAC,QAAQ;YACrB,OAAO;QACX,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;QACrD,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;IACxD,CAAC;IAtJc,oBAAQ,GAAG,IAAI,CAAC,CAAI,iBAAiB;IAuJxD,kBAAC;CAxJD,AAwJC,IAAA;kBAxJoB,WAAW","file":"","sourceRoot":"/","sourcesContent":["import TaskComp from \"../component/TaskComp\";\r\n\r\nconst baseBundle = \"resources\";\r\nconst taskPath = \"hall/prefabs/ui/taskNode\";\r\nconst interval = 5;\r\nexport default class TaskManager{\r\n    private static isEnable = true;    // 功能开关 兼容有些皮肤不开放\r\n    /** 设置任务宝箱功能是否开放 */\r\n    public static setTaskEnable(flag: boolean){\r\n        this.isEnable = flag;\r\n    }\r\n\r\n    public static async preloadRes(){\r\n        return new Promise((resolve, reject)=>{\r\n            Global.ResourceManager.loadBundleRes(baseBundle, [taskPath], (err, res)=>{\r\n                if (err){\r\n                    reject(err);\r\n                }\r\n                else{\r\n                    resolve(res);\r\n                }\r\n            });\r\n        })\r\n    }\r\n    \r\n    private timer: number;\r\n    private gameId: number = 0;\r\n    private taskList: any[] = [];\r\n    private curTaskId: string = \"\";\r\n    private curTaskType: number = 0;\r\n    private taskStateMap = {};\r\n    private taskComp: TaskComp;\r\n    private isTimerPause = false;\r\n\r\n    public init(rootNode: cc.Node, gameId: number, dir: number){\r\n        if (!TaskManager.isEnable)\r\n            return;\r\n        if (!rootNode || !cc.isValid(rootNode))\r\n            return;\r\n        this.gameId = gameId;\r\n        let prefab = Global.ResourceManager.getBundleRes(baseBundle, taskPath, cc.Prefab);\r\n        if (!prefab){\r\n            Global.ResourceManager.loadBundleRes(baseBundle, taskPath, (error, prefab) => {\r\n                if (error != null || prefab == null) {\r\n                    Logger.error(\"加载资源错误\", baseBundle, taskPath);\r\n                    return\r\n                }\r\n                let copyNode = <cc.Node>cc.instantiate(prefab)\r\n                copyNode.setParent(rootNode);\r\n                copyNode.active = true;\r\n                this.taskComp = Global.UIHelper.safeGetComponent(copyNode, \"\", TaskComp);\r\n                this.taskComp.initTask(dir);\r\n            })\r\n        }\r\n        else{\r\n            let copyNode = <cc.Node>cc.instantiate(prefab);\r\n            copyNode.setParent(rootNode);\r\n            copyNode.active = true;\r\n            this.taskComp = Global.UIHelper.safeGetComponent(copyNode, \"\", TaskComp);\r\n            this.taskComp.initTask(dir);\r\n        }\r\n        cc.game.on(cc.game.EVENT_SHOW, this.onResume, this);\r\n        cc.game.on(cc.game.EVENT_HIDE, this.onPause, this);\r\n    }\r\n\r\n    public reqGetGameTaskList(){\r\n        if (!this.gameId)\r\n            return// console.error(\"gameid not init 1\", this.gameId);\r\n        let param = {};\r\n        param[\"game_id\"] = this.gameId;\r\n        Global.HallServer.send(NetAppface.mod, \"GetGameTaskActivityList\", param, (msg) => {\r\n            if (!this.taskComp || !cc.isValid(this.taskComp))\r\n                return;\r\n            this.taskList = msg.data || [];\r\n            this.searchNotWorked();\r\n        }, null, false);\r\n    }\r\n\r\n    private searchNotWorked(){\r\n        if (this.taskList.length > 0){\r\n            for(let i = 0; i < this.taskList.length; i++){\r\n                let task = this.taskList[i];\r\n                this.taskStateMap[task.task_id] = task.task_status;\r\n                if (task.task_status != 2){\r\n                    this.curTaskId = task.task_id;\r\n                    this.curTaskType = task.global_task_type;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public reqGetCommisionInfo(){\r\n        if (!TaskManager.isEnable)\r\n            return;\r\n        if (!this.curTaskId || !this.curTaskType)\r\n            return;\r\n        if (!this.gameId)\r\n            return// console.error(\"gameid not init 2\", this.gameId);\r\n        let param = {};\r\n        param[\"global_task_type\"] = this.curTaskType || 0;\r\n        param[\"task_id\"] = this.curTaskId || \"\";\r\n        Global.HallServer.send(NetAppface.mod, \"GetOneTaskActivityInfo\", param, (msg) => {\r\n            if (!this.taskComp || !cc.isValid(this.taskComp))\r\n                return;\r\n            if(!msg || !msg.task_id){\r\n                return;     // 1S内重复请求, 会返回空的默认数据, 直接剔除掉, debug 处理请求时重连会连续请求两次 弹频繁请求\r\n            }\r\n            this.taskComp.updateTask(msg);\r\n            this.taskStateMap[msg.task_id] = msg.task_status;\r\n            if (msg.task_status == 2){\r\n                this.searchNotWorked();\r\n            }\r\n        }, null, false);\r\n    }\r\n\r\n    public startReqTimer(){\r\n        if (!TaskManager.isEnable)\r\n            return;\r\n        if (this.timer){\r\n            this.stopReqTimer();\r\n        }\r\n        this.timer = setInterval(()=>{\r\n            this.reqGetCommisionInfo();\r\n        }, interval * 1000);\r\n    }\r\n\r\n    private onResume(){\r\n        if (this.isTimerPause)\r\n            this.startReqTimer();\r\n    }\r\n\r\n    private onPause(){\r\n        if (this.timer){\r\n            this.isTimerPause = true;\r\n            this.stopReqTimer();\r\n        }\r\n    }\r\n\r\n    private stopReqTimer(){\r\n        clearInterval(this.timer);\r\n        this.timer = null;\r\n    }\r\n\r\n    public onDispose(){\r\n        if (!TaskManager.isEnable)\r\n            return;\r\n        this.stopReqTimer();\r\n        this.gameId = 0;\r\n        this.taskList = [];\r\n        this.curTaskId = \"\";\r\n        this.curTaskType = 0;\r\n        this.taskStateMap = {};\r\n        this.isTimerPause = false;\r\n        cc.game.off(cc.game.EVENT_SHOW, this.onResume, this);\r\n        cc.game.off(cc.game.EVENT_HIDE, this.onPause, this);\r\n    }\r\n}"]}