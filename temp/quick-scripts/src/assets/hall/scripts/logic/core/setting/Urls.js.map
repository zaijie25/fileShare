{"version":3,"sources":["assets\\hall\\scripts\\logic\\core\\setting\\Urls.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import ServerRoutes from \"./ServerRoutes\";\r\nimport { ServerType } from \"./Setting\";\r\nimport HallStorageKey from \"../../hallcommon/const/HallStorageKey\";\r\nimport AppCfg from \"../../hall/AppCfg\";\r\nimport { SkinType } from \"../../hallcommon/app/SkinConfig\";\r\n\r\nexport default class Urls {\r\n\r\n    public dataUrls = [\r\n        // \"http://ava_node2.ncjimmy.com/c\",\r\n        // \"https://6umbmlpg7koqog.azurefd.net/c\",\r\n        // //\"http://ava_node2.ncjimmy.com/c\",\r\n         //   \"https://dev-api.legame668.com/c\"\r\n        // \"http://go-cdn-we04.sygsdq.com/c\",\r\n        \"https://m2se2wh81.vyfdm.com/c\"\r\n        // \"http://shops88.natapp1.cc/c\"\r\n        \r\n    ]\r\n\r\n    //\"C:/CocosDashboard_1.0.6/resources/.editors/Creator/2.3.3/CocosCreator.exe\"\r\n    // //只有网页版用到 原生不会使用\r\n    // private configBaseDataUrl = \"https://d03hw-588.bjlfstwl.com/config/\";\r\n    // private configBaseDataBackUrl = \"https://d03hw-588.hxdbds.com/config/\";\r\n    //private configBaseDataBackUrl1 = \"https://data.588love.com/config/\";\r\n\r\n    //jccommon url\r\n    //public globalUrl: string = \"https://go.rruru.com/login/\";\r\n    //图标配置路径\r\n    //public webIconUrl: string;\r\n    //下载地址\r\n    public downLoadUrl: string = \"\";\r\n    //邀请地址\r\n    public inviteUrl: string = \"\";\r\n    //大厅热更请求地址\r\n    public hallHotUpdateUrl: string = \"\";\r\n    //大厅热更地址数组\r\n    public hallHotUpdateUrlArray = []\r\n    //App热更地址数组\r\n    public appHotUpdateUrlArray = []\r\n    //App版本号\r\n    public appVersion = \"\"\r\n    //App热更参数\r\n    public appParam = \"\"\r\n    //大厅热更请求地址\r\n    public appHotUpdateUrl: string = \"\";\r\n    //log url\r\n    //public logUrl:string = \"https://go.rruru.com/mix/clientlog\";\r\n    //强更地址\r\n    public forceUpateUrl: string;\r\n\r\n    //public hallBaseUrl:string;\r\n\r\n\r\n\r\n    public onlineService = \"\"\r\n\r\n    //当前游戏服务器列表\r\n    public _gameRoutes: ServerRoutes;\r\n    //当前游戏mods\r\n    public gameMods: [];\r\n\r\n    //大厅服务器列表\r\n    public _hallRoutes: ServerRoutes;\r\n    //global服務器列表\r\n    public _globalRoutes: ServerRoutes;\r\n\r\n\r\n    // public hallUrlSuffix:string;\r\n\r\n    public hallUrl: string;\r\n    /**\r\n     * 音乐电台 资源下载url地址\r\n     */\r\n    public diantaiUrl: string = 'https://res.yanzizg.com/588/hall/diantai/';\r\n\r\n\r\n    //需要socket\r\n    // //大厅完成socketurl\r\n    // public hallSocketUrl:string;\r\n    //大厅完成httpURL\r\n    // public hallHttpUrl: string;\r\n\r\n    public parse(serverCfg: any) {\r\n        //this.setDownloadUrl(Global.Toolkit.DealWithUrl(serverCfg.download_url))\r\n\r\n        if (serverCfg.invite_url) {\r\n            this.inviteUrl = Global.Toolkit.DealWithUrl(serverCfg.invite_url);\r\n        }\r\n\r\n        if (serverCfg.diantaiUrl)\r\n            this.setDianTaiUrl(Global.Toolkit.DealWithUrl(serverCfg.diantaiUrl))\r\n\r\n\r\n        if (serverCfg.routes || serverCfg.entrance) {\r\n            this.setRoutes(serverCfg)\r\n        }\r\n    }\r\n\r\n    public setDownloadUrl(downLoadUrl) {\r\n        if (downLoadUrl) {\r\n            this.downLoadUrl = downLoadUrl\r\n        }\r\n\r\n    }\r\n\r\n    public setDianTaiUrl(diantaiUrl) {\r\n        if (diantaiUrl) {\r\n            this.diantaiUrl = diantaiUrl;\r\n        }\r\n\r\n    }\r\n\r\n    public setRoutes(serverCfg) {\r\n        //过滤线路中vip等级比自己高的\r\n        let tempRoutes = []\r\n        let routes = serverCfg.routes\r\n        let VIPLevel = Global.Setting.storage.get(HallStorageKey.VIPLevel);\r\n        let selfVipLevel = VIPLevel ? VIPLevel : 0\r\n        if (routes && routes.length > 0) {\r\n            for (let i = 0; i < routes.length; i++) {\r\n                let route = routes[i]\r\n                if (route) {\r\n                    let routeVip = route.vip\r\n                    let vip = routeVip ? routeVip : 0\r\n                    if (selfVipLevel >= vip) {\r\n                        tempRoutes[tempRoutes.length] = route\r\n                        Logger.error(\"push route \" + JSON.stringify(route))\r\n                    } else {\r\n                        Logger.error(\"--------selfVipLevel < vip \")\r\n                    }\r\n                } else {\r\n                    Logger.error(\"--------route------length = 0 \")\r\n                }\r\n            }\r\n            let sortFunc = (a, b) => {\r\n                let a_vip = a.vip ? a.vip : 0;\r\n                let b_vip = b.vip ? b.vip : 0;\r\n                return b_vip - a_vip;\r\n            }\r\n            tempRoutes.sort(sortFunc)\r\n        } else {\r\n            Logger.error(\"--------entrance------length = 0 \")\r\n        }\r\n\r\n        let lroutes = Global.Setting.storage.getObject(HallStorageKey.LoginRoutes)\r\n        if (lroutes && lroutes.length > 0) {\r\n            //预解析\r\n            let loginServerRoutes = new ServerRoutes();\r\n            loginServerRoutes.parse(lroutes)\r\n            if (loginServerRoutes.getRouteLen() > 0) {\r\n                Logger.error(\"loginServerRoutes set lroutes\")\r\n                //合并routes，防止lroutes挂了进不去游戏\r\n                if (tempRoutes && tempRoutes.length > 0) {\r\n                    // Logger.error(\"lroutes concat routes\")\r\n                    tempRoutes = lroutes.concat(tempRoutes)\r\n                }\r\n            } else {\r\n                Logger.error(\"loginServerRoutes len = 0\")\r\n            }\r\n            // Logger.error(\"get storage lroutes \" + JSON.stringify(lroutes))\r\n            // Logger.error(\"get storage tempRoutes \" + JSON.stringify(tempRoutes))\r\n        }\r\n        // Logger.error(\"tempRoutes = \" + JSON.stringify(tempRoutes))\r\n        //如果过滤后线路为空，就继续用原来的\r\n        if (tempRoutes.length == 0) {\r\n            tempRoutes = routes\r\n        }\r\n        if (tempRoutes) {\r\n            this._globalRoutes = new ServerRoutes();\r\n            this._globalRoutes.parse(tempRoutes);\r\n\r\n            //防止登录之后收到serverroutes 导致url丢失\r\n            if (this._hallRoutes == null) {\r\n                this._hallRoutes = new ServerRoutes();\r\n                this._hallRoutes.parseWs(tempRoutes);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public get globalRoutes(): ServerRoutes {\r\n        let g_routes = this._globalRoutes\r\n        if (!g_routes) {\r\n            //通过data获取\r\n            let content = Global.Setting.storage.get(HallStorageKey.AppConfigContent);\r\n            if (content == null || content == \"\") {\r\n                Logger.error(\"get globalRoutes error ----- \")\r\n                return\r\n            }\r\n            let localCfg = this.safeDecode(content);\r\n            if (localCfg == null) {\r\n                Logger.error(\"get globalRoutes safeDecode localCfg error----- \")\r\n                return\r\n            }\r\n            this.setRoutes(localCfg)\r\n            g_routes = this._globalRoutes\r\n        }\r\n        return g_routes;\r\n    }\r\n\r\n    public set globalRoutes(routes: ServerRoutes) {\r\n        if (routes) {\r\n            this._globalRoutes = routes\r\n        }\r\n    }\r\n\r\n    //登录线路排序\r\n    public sortLoginRoutes() {\r\n        if (this.globalRoutes) {\r\n            this.globalRoutes.sortRoutes()\r\n        }\r\n    }\r\n\r\n    //大厅线路进行排序\r\n    public sortHallRoutes(index?) {\r\n        if (this._hallRoutes) {\r\n            if (index != null || index != undefined) {\r\n                Logger.error(\"sortHallRoutes index = \" + index)\r\n                this._hallRoutes.sortRoutesByIndex(index)\r\n            } else {\r\n                this._hallRoutes.sortRoutes()\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    //游戏线路进行排序\r\n    public sortGameRoutes() {\r\n        if (this._gameRoutes) {\r\n            this._gameRoutes.sortRoutes()\r\n        } else if (this._hallRoutes) {\r\n            this._hallRoutes.sortRoutes()\r\n        }\r\n    }\r\n\r\n\r\n    private safeDecode(cfg) {\r\n        let serverCfg = null;\r\n        try {\r\n            let decodeMsg = Global.AESUtil.decodeMsg(cfg);\r\n            serverCfg = JSON.parse(decodeMsg);\r\n            //routes 为空 验证不通过\r\n            if (serverCfg.routes == null || !serverCfg.routes.length || serverCfg.routes.length == 0) {\r\n                serverCfg = null;\r\n                Logger.error(\"data routes is null \");\r\n            }\r\n        }\r\n        catch (e) {\r\n            Logger.error(\"load app error\", cfg);\r\n            serverCfg = null;\r\n        }\r\n        return serverCfg;\r\n    }\r\n\r\n\r\n    public get hallRoutes(): ServerRoutes {\r\n        let h_routes = this._hallRoutes\r\n        if (!h_routes) {\r\n            Logger.error(\"hallRoutes error\")\r\n        }\r\n        return h_routes\r\n    }\r\n\r\n    public set hallRoutes(routes: ServerRoutes) {\r\n        if (routes) {\r\n            this._hallRoutes = routes\r\n        }\r\n    }\r\n\r\n\r\n    public get gameRoutes(): ServerRoutes {\r\n        let g_routes = this._gameRoutes;\r\n        if (!g_routes) {\r\n            Logger.error(\"g_routes error\")\r\n            return this.hallRoutes;\r\n        }\r\n        return g_routes\r\n    }\r\n\r\n    public set gameRoutes(routes: ServerRoutes) {\r\n        if (routes) {\r\n            this._gameRoutes = routes\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    public initLoginInfo(hallUrl, uid, token) {\r\n        //this.hallBaseUrl = hallUrl;\r\n        //hallHttpUrl暂时还不能删  需要等cqby更新才能删\r\n        this.hallUrl = hallUrl;\r\n        // let urlParam = Global.Toolkit.getUrlCommonParam()\r\n        // let paramPrefix = Global.Toolkit.getUrlParamCommonPrefex()\r\n        // this.hallHttpUrl = hallUrl + \"%s?_func=%s&\"+urlParam\r\n        // this.hallUrlSuffix = \"/mini/\"+ paramPrefix +\"%s?_func=%s&\"+urlParam\r\n    }\r\n\r\n    public get hallHttpUrl() {\r\n        let urlParam = Global.UrlUtil.getUrlCommonParam()\r\n        let hallHttpUrl = this.hallUrl + \"%s?_func=%s&\" + urlParam\r\n        return hallHttpUrl;\r\n    }\r\n\r\n    public get hallUrlSuffix() {\r\n        let urlParam = Global.UrlUtil.getUrlCommonParam()\r\n        let paramPrefix = Global.UrlUtil.getUrlParamCommonPrefex()\r\n        let hallUrlSuffix = \"/mini/\" + paramPrefix + \"%s?_func=%s&\" + urlParam\r\n        return hallUrlSuffix\r\n    }\r\n\r\n    //public getGlobalUrl() {\r\n    //    return this.globalUrl;\r\n    //}\r\n\r\n    public getinviteUrl() {\r\n        return this.inviteUrl;\r\n    }\r\n\r\n    public getForceUpdateUrl() {\r\n        return this.forceUpateUrl;\r\n    }\r\n\r\n    public setInviteUrl(url: string) {\r\n        if (url == null || url == \"\")\r\n            return;\r\n        if (url.indexOf(\"http\") < 0) {\r\n            Logger.error(\"链接格式不对\", url);\r\n            return;\r\n        }\r\n        url = url.replace(\"？\", \"?\");\r\n        this.inviteUrl = Global.Toolkit.DealWithUrl(url)\r\n    }\r\n\r\n    public getBackUrl() {\r\n        return this.downLoadUrl + \"#backup\"\r\n    }\r\n\r\n    // public getCfgDataUrl(serverType: ServerType) {\r\n    //     return this.getUrlWithServerType(serverType, this.configBaseDataUrl)\r\n    // }\r\n\r\n    // public getCfgDataBackupUrl(cfgUrl: string) {\r\n    //     let arrs = cfgUrl.split(\"/\");\r\n    //     if (arrs == null || arrs.length < 1)\r\n    //         return cfgUrl;\r\n    //     return this.configBaseDataBackUrl + arrs[arrs.length - 1];\r\n    // }\r\n\r\n    // public getCfgDataBackupUrl1(cfgUrl: string) {\r\n    //     let arrs = cfgUrl.split(\"/\");\r\n    //     if (arrs == null || arrs.length < 1)\r\n    //         return cfgUrl;\r\n    //     //return this.configBaseDataBackUrl1 + arrs[arrs.length - 1];\r\n    // }\r\n\r\n\r\n\r\n\r\n    // private getUrlWithServerType(serverType: ServerType, url: string) {\r\n    //     let dataName = \"\";\r\n    //     switch (serverType) {\r\n    //         case ServerType.DEVELOP:\r\n    //             dataName = \"develop.data\";\r\n    //             break;\r\n    //         case ServerType.INTEST:\r\n    //             dataName = \"1004_intest.data\";\r\n    //             break;\r\n    //         case ServerType.RELEASE:\r\n    //             dataName = \"6315.data\";\r\n    //             break;\r\n    //         case ServerType.K8S:\r\n    //             dataName = \"xianggang_test.data\";\r\n    //             break;\r\n    //         case ServerType.THS:\r\n    //             dataName = \"100101.data\";\r\n    //             break;\r\n    //         case ServerType.THSINTEST:\r\n    //             dataName = \"8006.data\";\r\n    //             break;\r\n    //     }\r\n    //     return url + dataName;\r\n    // }\r\n\r\n    public getDataNameWithServerType(serverType: ServerType) {\r\n        let dataName = \"\";\r\n        switch (serverType) {\r\n            case ServerType.DEVELOP:\r\n                dataName = \"develop\";\r\n                break;\r\n            case ServerType.INTEST:\r\n                switch (AppCfg.SKIN_TYPE) {\r\n                    case SkinType.purple:\r\n                        dataName = \"1005_intest\";\r\n                        break;\r\n                    case SkinType.dark:\r\n                        dataName = \"688_intest\";\r\n                        break;\r\n                    case SkinType.red:\r\n                        dataName = \"1003_intest\";\r\n                        break;\r\n                    case SkinType.blue:\r\n                        // dataName = \"1004_intest\";\r\n                        dataName = \"1004_intest\";\r\n                        break;\r\n                    case SkinType.fantasy:\r\n                        dataName = \"1005_intest\";\r\n                        break;\r\n                    case SkinType.green:\r\n                        dataName = \"1006_intest\";\r\n                        break;\r\n                    case SkinType.legend:\r\n                        dataName = \"1007_intest\";\r\n                        break;\r\n                    case SkinType.darkgold:\r\n                        dataName = \"1010_intest\";\r\n                        break;\r\n                    case SkinType.blue2:\r\n                        dataName = \"1008_intest\";\r\n                        break;\r\n                    case SkinType.newBlue:\r\n                        dataName = \"3002_intest\";\r\n                        break;\r\n                    default:\r\n                        dataName = \"1001_intest\";\r\n                        break;\r\n                }\r\n\r\n                break;\r\n            case ServerType.RELEASE:\r\n                dataName = \"6315\";\r\n                break;\r\n            case ServerType.K8S:\r\n                dataName = \"xianggang_test\";\r\n                break;\r\n            case ServerType.THS:\r\n                dataName = \"100101\";\r\n                break;\r\n            case ServerType.THSINTEST:\r\n                dataName = \"8006\";\r\n                break;\r\n        }\r\n        return dataName;\r\n    }\r\n}"]}