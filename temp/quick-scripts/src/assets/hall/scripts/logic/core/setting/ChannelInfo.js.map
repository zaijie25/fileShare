{"version":3,"sources":["assets\\hall\\scripts\\logic\\core\\setting\\ChannelInfo.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["//玩家渠道信息数据\r\nexport default class ChannelInfo {\r\n    private static OpenInstallChannelKey = \"OpenInstallChannelKey\";\r\n    private static PlayerChannelKey = \"PlayerChannelKey\";\r\n    private static PlayerInviteCodelKey = \"PlayerInviteCodelKey\";\r\n    private static InviteIdKey = \"InviteIdKey\";\r\n    private static ClipboardChannelKey = \"ClipboardChannelKey\";\r\n    private static infoChannelKey = \"infoChannelKey\";\r\n    private static ServerAppInfoContentKey = \"ServerAppInfoContentKey\";\r\n\r\n    //appconfig中的channelId\r\n    public configChannel: number;\r\n\r\n    //openinstall 传来的channelid\r\n    private _openInstallChannel: number;\r\n    public get openInstallChannel() { return this._openInstallChannel; }\r\n    public set openInstallChannel(value) {\r\n        if (value == 0)\r\n            return;\r\n        this._openInstallChannel = value;\r\n        Global.Setting.storage.set(ChannelInfo.OpenInstallChannelKey, value);\r\n    }\r\n  \r\n     //邀请人id\r\n     private _inviteId: number = 0;\r\n     public get inviteId() { return this._inviteId };\r\n     public set inviteId(value) {\r\n         if (value == 0)\r\n             return;\r\n         this._inviteId = value;\r\n         Global.Setting.storage.set(ChannelInfo.InviteIdKey, value);\r\n     }\r\n    \r\n    //剪贴板中的渠道号\r\n    private _clipboardChannel: number;\r\n    public get clipboardChannel() { return this._clipboardChannel; }\r\n    public set clipboardChannel(value) {\r\n        this._clipboardChannel = value;\r\n        Global.Setting.storage.set(ChannelInfo.ClipboardChannelKey, value);\r\n    }\r\n    //info.plist中的渠道号\r\n    private _infoChannel: number;\r\n    public get infoChannel() { return this._infoChannel; }\r\n    public set infoChannel(value) {\r\n        this._infoChannel = value;\r\n        Global.Setting.storage.set(ChannelInfo.infoChannelKey, value);\r\n    }\r\n    //随包的channelid\r\n    public packageChannel: number;\r\n\r\n    //playerdata的实际channelid\r\n    private _playerChannel: number;\r\n    public get playerChannel() { return this._playerChannel; }\r\n    public set playerChannel(value) {\r\n        this._playerChannel = value;\r\n        Global.Setting.storage.set(ChannelInfo.PlayerChannelKey, value);\r\n    }\r\n\r\n    //playerdata的实际channelid\r\n    private _playerInviteCode: number;\r\n    public get playerInviteCode() { return this._playerInviteCode; }\r\n    public set playerInviteCode(value) {\r\n        this._playerInviteCode = value;\r\n        Global.Setting.storage.set(ChannelInfo.PlayerInviteCodelKey, value);\r\n    }\r\n\r\n   \r\n    //渠道号获取类型 1 openinstall 2 剪贴板 2 超级签  4 请求服务器获取渠道信息 5 sharetrace\r\n    public sourceType: number;\r\n    //剪贴板验证数据\r\n    public clipboardContent: string;\r\n    //openinstall 返回数据\r\n    public openInstallContent: any;\r\n    //downloadAppInfo缓存\r\n    private _serverAppInfoContent: any;\r\n    public get serverAppInfoContent() {\r\n        return this._serverAppInfoContent;\r\n    }\r\n\r\n    public set serverAppInfoContent(value) {\r\n        this._serverAppInfoContent = value;\r\n        if (value != null)\r\n            Global.Setting.storage.set(ChannelInfo.ServerAppInfoContentKey, JSON.stringify(value));\r\n    }\r\n\r\n    public setup() {\r\n        this._playerChannel = Global.Setting.storage.getNumber(ChannelInfo.PlayerChannelKey);\r\n        this._playerInviteCode = Global.Setting.storage.getNumber(ChannelInfo.PlayerInviteCodelKey);\r\n        this._inviteId = Global.Setting.storage.getNumber(ChannelInfo.InviteIdKey);\r\n        let serInfoStr = Global.Setting.storage.get(ChannelInfo.ServerAppInfoContentKey);\r\n        this.parseServerInfo(serInfoStr);\r\n    }\r\n\r\n    //优先级 openinstall >sharetraceChannel > plist > 剪贴板 > appInfo > 包渠道号 > 配置表渠道号 \r\n    //@todo  需要玩家身上渠道号的本地缓存吗?\r\n    public getRegistChannel() {\r\n        if (this.isChannelViald(this.openInstallChannel))\r\n            return this.openInstallChannel;\r\n        if (this.isChannelViald(this.infoChannel))\r\n            return this.infoChannel;\r\n        if (this.isChannelViald(this.clipboardChannel))\r\n            return this.clipboardChannel;\r\n        if (this.serverAppInfoContent && this.isChannelViald(this.serverAppInfoContent.ch))\r\n            return this.serverAppInfoContent.ch;\r\n        if (this.isChannelViald(this.playerChannel))\r\n            return this.playerChannel;\r\n        if (this.isChannelViald(this.packageChannel))\r\n            return this.packageChannel;\r\n        if (this.isChannelViald(this.configChannel))\r\n            return this.configChannel;\r\n        return 0;\r\n    }\r\n\r\n    public getPlayerChannel() {\r\n        return this.playerChannel;\r\n    }\r\n\r\n    private isChannelViald(value) {\r\n        if (value == null || isNaN(value) || value == 0)\r\n            return false;\r\n        return true;\r\n    }\r\n\r\n    public getInviteId() {\r\n        if (this.isChannelViald(this.inviteId))\r\n            return this.inviteId;\r\n        if (this.serverAppInfoContent && this.isChannelViald(this.serverAppInfoContent.ic))\r\n            return this.serverAppInfoContent.ic;\r\n        if (this.isChannelViald(this.playerInviteCode))\r\n            return this.playerInviteCode;\r\n        return 0;\r\n    }\r\n\r\n    private parseServerInfo(content) {\r\n        let tab = null;\r\n        try {\r\n            tab = JSON.parse(content);\r\n        }\r\n        catch (e) {\r\n            return;\r\n        }\r\n        this.serverAppInfoContent = tab;\r\n    }\r\n\r\n}"]}