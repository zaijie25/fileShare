{"version":3,"sources":["assets\\hall\\scripts\\logic\\core\\component\\ComponentProvider.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import DriverComponent from \"./DriverComponent\";\r\nimport GameTimeChecker from \"../game/GameTimeChecker\";\r\n\r\n//驱动脚本管理器  提供timer  tween等操作\r\nexport default class ComponentProvider\r\n{\r\n    private driverComponent:DriverComponent;\r\n    private driverNode:cc.Node;\r\n    private name:string;\r\n    private hasInit = false;\r\n    private updateFunc:Function;\r\n    private lateUpdateFunc:Function;\r\n\r\n    //下一帧执行回调\r\n    public callLaterList = []\r\n\r\n    //帧结束\r\n    public frameEndList = []\r\n\r\n    private timeChecker: GameTimeChecker;\r\n    \r\n    constructor(name:string)\r\n    {\r\n        this.name = name;\r\n        cc.director.on(cc.Director.EVENT_AFTER_UPDATE, this.onFrameEnd, this)\r\n    }\r\n\r\n    public setup(updateFunc, lateUpdateFunc)\r\n    {\r\n        this.updateFunc = updateFunc;\r\n        this.lateUpdateFunc = lateUpdateFunc;\r\n    }\r\n\r\n    public initDriver()\r\n    {\r\n        this.clear();\r\n        let canvas = cc.find(\"Canvas\");\r\n        if(canvas == null)\r\n        {\r\n            Logger.error(\"找不到Canvas\");\r\n            return;\r\n        }\r\n        this.driverNode = canvas.getChildByName(this.name);\r\n        if(this.driverNode == null)\r\n        {\r\n            this.driverNode = new cc.Node(this.name);\r\n            canvas.addChild(this.driverNode);\r\n        }\r\n        this.driverComponent = this.driverNode.getComponent(\"DriverComponent\");\r\n        if(this.driverComponent == null)\r\n            this.driverComponent = this.driverNode.addComponent(\"DriverComponent\");\r\n        this.driverComponent.onLoadFunc = this.onLoad.bind(this);\r\n        this.driverComponent.updateFunc = this.onUpdate.bind(this);\r\n        this.driverComponent.lateUpdateFunc = this.onLateUpdate.bind(this);\r\n        this.hasInit = true;\r\n\r\n        this.timeChecker = Global.UIHelper.safeGetComponent(this.driverNode, \"\", GameTimeChecker);\r\n\r\n    }\r\n\r\n    protected clear()\r\n    {\r\n        this.driverComponent = null;\r\n        this.driverNode = null;\r\n        this.hasInit = null;\r\n        this.stopChecker();\r\n        this.timeChecker = null;\r\n    }\r\n\r\n\r\n    private onLoad()\r\n    {\r\n       \r\n    }\r\n\r\n    private onFrameEnd()\r\n    {\r\n        for(let i = 0; i < this.frameEndList.length; i++)\r\n        {\r\n            this.frameEndList[i]();\r\n        }\r\n        this.frameEndList = [];\r\n    }\r\n\r\n    private onUpdate(dt)\r\n    {\r\n        if(this.updateFunc)\r\n            this.updateFunc(dt);\r\n    }\r\n\r\n    private onLateUpdate()\r\n    {\r\n        if(this.lateUpdateFunc)\r\n            this.lateUpdateFunc();\r\n        for(let i = 0; i < this.callLaterList.length; i++)\r\n        {\r\n            this.callLaterList[i]();\r\n        }\r\n        this.callLaterList.length = 0;\r\n    }\r\n\r\n\r\n    //存在问题  this指向的是component  需要bind\r\n    public schedule(callback:Function, interval?:number, repeat?:number, delay?:number)\r\n    {\r\n        if(!this.hasInit || this.driverComponent == null)\r\n        {\r\n            Logger.error(\"Driver 还未初始化\");\r\n            return;\r\n        }\r\n        this.driverComponent.schedule(callback, interval, repeat, delay);\r\n    }\r\n\r\n    public scheduleOnce(callback:Function, delay?:number)\r\n    {\r\n        if(!this.hasInit || this.driverComponent == null)\r\n        {\r\n            Logger.error(\"Driver 还未初始化\");\r\n            return;\r\n        }\r\n        this.driverComponent.scheduleOnce(callback, delay);\r\n    }\r\n\r\n    public unschedule(callback:Function)\r\n    {\r\n        if(!this.hasInit || this.driverComponent == null)\r\n        {\r\n            return;\r\n        }\r\n        this.driverComponent.unschedule(callback);\r\n    }\r\n\r\n    public unscheduleAllCallbacks()\r\n    {\r\n        if(!this.hasInit || this.driverComponent == null)\r\n        {\r\n            return;\r\n        }\r\n        this.driverComponent.unscheduleAllCallbacks();\r\n        this.callLaterList.length = 0;\r\n        this.frameEndList.length = 0;\r\n    }\r\n\r\n\r\n    public callLater(func)\r\n    {\r\n        this.callLaterList.push(func);\r\n    }\r\n\r\n    public frameEnd(func)\r\n    {\r\n        this.frameEndList.push(func);\r\n    }\r\n\r\n    public doChecker(time: number){\r\n        if (!this.timeChecker){\r\n            return;\r\n        }\r\n        this.timeChecker.checkTimestamp(time);\r\n    }\r\n\r\n    public stopChecker(){\r\n        if (!this.timeChecker){\r\n            return;\r\n        }\r\n        this.timeChecker.stopTimer();\r\n    }\r\n\r\n    /** 得到协议当前时间传输时延 单位ms */\r\n    public correctTime(time: number){\r\n        if (!this.timeChecker){\r\n            return 0;\r\n        }\r\n        return this.timeChecker.correctTime(time);\r\n    }\r\n}"]}