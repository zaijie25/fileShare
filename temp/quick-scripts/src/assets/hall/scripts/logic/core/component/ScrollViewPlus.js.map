{"version":3,"sources":["assets\\hall\\scripts\\logic\\core\\component\\ScrollViewPlus.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ScrollViewPlus extends cc.Component {\r\n\r\n    @property(cc.Node)\r\n    scrollView: cc.Node = null;\r\n\r\n    @property([cc.Prefab])\r\n    itemsArr :cc.Prefab[] = [];\r\n\r\n    @property\r\n    Vertical:boolean = false\r\n\r\n    @property\r\n    gap_x:number = 0;//横向间距\r\n\r\n    @property\r\n    gap_y:number = 0;\r\n\r\n    //子节点父对象\r\n    @property(cc.Node)\r\n    content : cc.Node = null;\r\n\r\n    //滚动组件\r\n    scrView : cc.ScrollView = null;\r\n\r\n    private height  :number = 0\r\n\r\n    private width  :number = 0\r\n    //node缓存池\r\n    node_pools:any\r\n    //预设种类池\r\n    item_templates:any\r\n    //实际拥有items数量\r\n    items = []\r\n\r\n    start_index = -1\r\n\r\n    stop_index = -1\r\n\r\n    //子节点更新函数\r\n    item_setter:(itemNode:cc.Node, index:number, data: any)=>[any];\r\n    //子节点更新函数的this对象\r\n    item_setter_caller:any = null;\r\n    \r\n\r\n\r\n\r\n    init() {\r\n        this.scrView = this.scrollView.getComponent(cc.ScrollView);\r\n        this.content = this.scrView.content;\r\n        this.height = this.content.height;\r\n        this.width = this.content.width;\r\n        this.node_pools = new Map();\r\n        //存储item的map\r\n        this.item_templates = new Map();\r\n        this.itemsArr.forEach((tpl, index) => {\r\n            tpl.data.active = false;\r\n            this.item_templates.set(index, tpl.data);\r\n        });\r\n        //scrollView监听事件\r\n        this.scrollView.on('scrolling', this.on_scrolling, this);\r\n    }\r\n\r\n\r\n    //滑动中回调\r\n    on_scrolling() {\r\n        if (!this.items || !this.items.length) {\r\n            return;\r\n        }\r\n        //垂直滚动\r\n        if (this.Vertical) {\r\n            let posy = this.content.y;\r\n            if (posy < 0) {\r\n                posy = 0;\r\n            }\r\n            if (posy > this.content.height - this.height) {\r\n                posy = this.content.height - this.height;\r\n            }\r\n            let start = 0;\r\n            let stop = this.items.length - 1;\r\n            let viewport_start = -posy;\r\n            let viewport_stop = viewport_start - this.height;\r\n            while (this.items[start].y - this.items[start].height > viewport_start) {\r\n                start++;\r\n            }\r\n            while (this.items[stop].y < viewport_stop) {\r\n                stop--;\r\n            }\r\n            if (start != this.start_index && stop != this.stop_index) {\r\n                this.start_index = start;\r\n                this.stop_index = stop;\r\n                this.render_items();\r\n            }\r\n        } else { //水平滚动\r\n            let posx = this.content.x;\r\n            if (posx > 0) {\r\n                posx = 0;\r\n            }\r\n            if (posx < this.width - this.content.width) {\r\n                posx = this.width - this.content.width;\r\n            }\r\n            let start = 0;\r\n            let stop = this.items.length - 1;\r\n            let viewport_start = -posx;\r\n            let viewport_stop = viewport_start + this.width;\r\n            while (this.items[start].x + this.items[start].width < viewport_start) {\r\n                start++;\r\n            }\r\n            while (this.items[stop].x > viewport_stop) {\r\n                stop--;\r\n            }\r\n            if (start != this.start_index && stop != this.stop_index) {\r\n                this.start_index = start;\r\n                this.stop_index = stop;\r\n                this.render_items();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n     //生成node\r\n     spawn_node(key) {\r\n        let node;\r\n        let pools = this.node_pools.get(key);\r\n        if (pools && pools.length > 0) {\r\n            node = pools.pop();\r\n        } else {\r\n            node = cc.instantiate(this.item_templates.get(key));\r\n            node.active = true;\r\n        }\r\n        node.parent = this.content;\r\n        return node;\r\n    }\r\n    //回收item\r\n    recycle_item(item) {\r\n        if (item.node && cc.isValid(item.node)) {\r\n            let pools = this.node_pools.get(item.data.key);\r\n            if (!pools) {\r\n                pools = [];\r\n                this.node_pools.set(item.data.key, pools);\r\n            }\r\n            pools.push(item.node);\r\n            // if (this.recycle_cb) {\r\n            //     this.recycle_cb.call(item.node, item.data.key);\r\n            // }\r\n            item.node.removeFromParent();\r\n            item.node = null;\r\n        }\r\n    }\r\n    //清除items\r\n    clear_items() {\r\n        if (this.items) {\r\n            this.items.forEach((item) => {\r\n                this.recycle_item(item);\r\n            });\r\n        }\r\n    }\r\n    //渲染items\r\n    render_items() {\r\n        let item;\r\n        for (let i = 0; i < this.start_index; i++) {\r\n            item = this.items[i];\r\n            if (item.node) {\r\n                this.recycle_item(item);\r\n            }\r\n        }\r\n        for (let i = this.items.length - 1; i > this.stop_index; i--) {\r\n            item = this.items[i];\r\n            if (item.node) {\r\n                this.recycle_item(item);\r\n            }\r\n        }\r\n        for (let i = this.start_index; i <= this.stop_index + 1; i++) {\r\n            if (!this.items[i]) {\r\n                return\r\n\r\n            }\r\n            item = this.items[i];\r\n            if (!item.node) {\r\n                item.node = this.spawn_node(item.data.key);\r\n                this.item_setter.call(this.item_setter_caller,item.node,item.dataIndex,item.data);\r\n            }\r\n            item.node.setPosition(item.x, item.y);\r\n        }\r\n    }\r\n    //赋值item\r\n    pack_item(index, data) {\r\n        let node = this.spawn_node(data.key);\r\n        let [width, height] = this.item_setter.call(this.item_setter_caller,node,index, data);\r\n        let item = {\r\n            x: 0,\r\n            y: 0,\r\n            width: width,\r\n            height: height,\r\n            data: data,\r\n            node: node,\r\n            dataIndex:index\r\n        };\r\n        this.recycle_item(item);\r\n        return item;\r\n    }\r\n    // //item具体赋值\r\n    // item_setter(item, data) {\r\n    //     item.getComponent(cc.Component).itemDataAssignment(data);\r\n    //     return [item.width, item.height];\r\n    // }\r\n    //布局items\r\n    layout_items(start) {\r\n        if (this.items.length <= 0) {\r\n            return;\r\n        }\r\n        let start_pos = 0;\r\n        if (start > 0) {\r\n            let prev_item = this.items[start - 1];\r\n            if (this.Vertical) {\r\n                start_pos = prev_item.y - prev_item.height - this.gap_y;\r\n            } else {\r\n                start_pos = prev_item.x + prev_item.width + this.gap_x;\r\n            }\r\n        }\r\n        for (let index = start, stop = this.items.length; index < stop; index++) {\r\n            let item = this.items[index];\r\n            if (this.Vertical) {\r\n                item.x = 0;\r\n                item.y = start_pos;\r\n                start_pos -= item.height + this.gap_y;\r\n            } else {\r\n                item.y = 0;\r\n                item.x = start_pos;\r\n                start_pos += item.width + this.gap_x;\r\n            }\r\n        }\r\n    }\r\n    //调整content\r\n    resize_content() {\r\n        if (this.items.length <= 0) {\r\n            this.content.width = 0;\r\n            this.content.height = 0;\r\n            return;\r\n        }\r\n        let last_item = this.items[this.items.length - 1];\r\n        if (this.Vertical) {\r\n            this.content.height = Math.max(this.height, last_item.height - last_item.y);\r\n        } else {\r\n            this.content.width = Math.max(this.width, last_item.x + last_item.width);\r\n        }\r\n    }\r\n    //设置数据\r\n    set_data(datas) {\r\n        this.clear_items();\r\n        this.items = [];\r\n        datas.forEach((data, index) => {\r\n            let item = this.pack_item(index, data);\r\n            this.items.push(item);\r\n        });\r\n        this.layout_items(0);\r\n        this.resize_content();\r\n        this.start_index = -1;\r\n        this.stop_index = -1;\r\n        if (this.Vertical) {\r\n            this.content.y = 0;\r\n        } else {\r\n            this.content.x = 0;\r\n        }\r\n        if (this.items.length > 0) {\r\n            this.on_scrolling();\r\n        }\r\n    }\r\n    //插入数据\r\n    insert_data(index, datas) {\r\n        if (datas.length == 0) {\r\n            // console.log(\"没有要添加的数据\");\r\n            return;\r\n        }\r\n        if (!this.items) {\r\n            this.items = [];\r\n        }\r\n        if (index < 0 || index > this.items.length) {\r\n           // console.log(\"无效的index\", index);\r\n            return;\r\n        }\r\n        let items = [];\r\n        datas.forEach((data, index) => {\r\n            let item = this.pack_item(index, data);\r\n            items.push(item);\r\n        });\r\n        this.items.splice(index, 0, ...items);\r\n        this.layout_items(index);\r\n        this.resize_content();\r\n        this.start_index = -1;\r\n        this.stop_index = -1;\r\n        this.on_scrolling();\r\n    }\r\n    //追加数据\r\n    append_data(datas) {\r\n        if (!this.items) {\r\n            this.items = [];\r\n        }\r\n        this.insert_data(this.items.length, datas);\r\n    }\r\n    //滑动到底\r\n    scroll_to_end() {\r\n        if (this.Vertical) {\r\n            this.scrView.getComponent(cc.ScrollView).scrollToBottom(2);\r\n        } else {\r\n            this.scrView.getComponent(cc.ScrollView).scrollToRight(2);\r\n        }\r\n    }\r\n    //销毁\r\n    destroy_items() {\r\n        this.clear_items();\r\n        this.node_pools.forEach((pools, key) => {\r\n            pools.forEach((node) => {\r\n                node.destroy();\r\n            });\r\n        });\r\n        this.node_pools = null;\r\n        this.items = null;\r\n        if (cc.isValid(this.scrollView)) {\r\n            this.scrollView.off(\"scrolling\", this.on_scrolling, this);\r\n            // this.scrollview.node.off(\"scroll-to-bottom\", this.on_scroll_to_end, this);\r\n            // this.scrollview.node.off(\"scroll-to-right\", this.on_scroll_to_end, this);\r\n        }\r\n    }\r\n}\r\n"]}