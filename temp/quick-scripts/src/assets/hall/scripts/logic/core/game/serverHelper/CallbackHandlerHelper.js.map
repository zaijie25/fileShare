{"version":3,"sources":["assets\\hall\\scripts\\logic\\core\\game\\serverHelper\\CallbackHandlerHelper.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,uDAAkD;AAElD;IAAmD,yCAAgB;IAAnE;QAAA,qEAoCC;QAnCU,iBAAW,GAAG,IAAI,GAAG,EAAE,CAAC;QACvB,eAAS,GAAG,CAAC,CAAC;;IAkC1B,CAAC;IAjCG,aAAa;IACN,8CAAc,GAArB,UAAsB,GAAW,EAAE,eAA6B;QAC5D,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,EAAE,eAAe,CAAC,CAAC;IAC/C,CAAC;IAEM,8CAAc,GAArB,UAAsB,GAAW;QAC7B,IAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,EAAC;YACzB,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAO,eAAe;SACtD;IACL,CAAC;IAEM,8CAAc,GAArB;QACI,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;IAC7B,CAAC;IAEM,2CAAW,GAAlB,UAAmB,GAAW;QAC1B,IAAI,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACxC,OAAO,OAAO,CAAC;IACnB,CAAC;IAEM,wCAAQ,GAAf,UAAgB,EAAE;QAAlB,iBAYC;QAXG,IAAI,CAAC,SAAS,IAAI,EAAE,CAAC;QACrB,IAAI,IAAI,CAAC,SAAS,IAAI,GAAG,EAAC,EAAQ,mBAAmB;YACjD,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,UAAC,QAAQ,EAAE,GAAG;gBACnC,IAAI,QAAQ,IAAI,QAAQ,CAAC,IAAI,GAAG,CAAC,EAAC;oBAC9B,QAAQ,CAAC,IAAI,IAAI,KAAI,CAAC,SAAS,CAAC;oBAChC,IAAI,QAAQ,CAAC,IAAI,IAAI,CAAC;wBAClB,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;iBAChC;YACL,CAAC,CAAC,CAAA;YACF,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;SACtB;IACL,CAAC;IACL,4BAAC;AAAD,CApCA,AAoCC,CApCkD,0BAAgB,GAoClE","file":"","sourceRoot":"/","sourcesContent":["import BaseServerHelper from \"./BaseServerHelper\";\r\n\r\nexport default class CallbackHandlerHelper extends BaseServerHelper{\r\n    public callbackMap = new Map();\r\n    private timeCount = 0;\r\n    // key 为check\r\n    public registCallback(key: string, handlerInstance: CallbackInfo){\r\n        this.callbackMap.set(key, handlerInstance);\r\n    }\r\n\r\n    public removeCallback(key: string){\r\n        if(this.callbackMap.has(key)){\r\n            this.callbackMap.delete(key);       // 可以清空key:null\r\n        }\r\n    }\r\n\r\n    public clearCallbacks(){\r\n        this.callbackMap.clear();\r\n    }\r\n\r\n    public getCallback(key: string): CallbackInfo{\r\n        let handler = this.callbackMap.get(key);\r\n        return handler;\r\n    }\r\n\r\n    public onUpdate(dt){\r\n        this.timeCount += dt;\r\n        if (this.timeCount >= 0.5){       // 0.5s更新一次, 减少遍历次数\r\n            this.callbackMap.forEach((callback, key)=>{\r\n                if (callback && callback.live > 0){\r\n                    callback.live -= this.timeCount;\r\n                    if (callback.live <= 0)\r\n                        this.removeCallback(key);\r\n                }\r\n            })\r\n            this.timeCount = 0;\r\n        }\r\n    }\r\n}\r\n\r\nexport interface CallbackInfo{\r\n    cmd?: string;\r\n    callback: Function;\r\n    key: string;\r\n    inQueue: boolean;\r\n    errorCallback?: Function;\r\n    live: number;\r\n}"]}