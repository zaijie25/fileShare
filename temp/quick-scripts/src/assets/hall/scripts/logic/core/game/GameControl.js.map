{"version":3,"sources":["assets\\hall\\scripts\\logic\\core\\game\\GameControl.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { NetAppface } from \"../net/hall/NetEvent\";\r\nimport SessionHandler from \"./handlers/SessionHandler\";\r\nimport ServerRoutes from \"../setting/ServerRoutes\";\r\nimport PvpWaitMatchHandler from \"./handlers/PvpWaitMatchHandler\";\r\n\r\n//主要负责游戏进出\r\nexport default class GameControl\r\n{\r\n    //服务器返回的route错误\r\n    public SERVER_ROUTE_ERROR = -1;\r\n    //正在别的游戏 并且和选中游戏的gid不同\r\n    public SERVER_LOCK = -2;\r\n    //服务器没有返回MOD\r\n    public NO_MOD = -3;\r\n    //相同gid,在别的场次\r\n    public IN_OTHER_LEVEL = -4;\r\n\r\n    /**\r\n     * 用于限制短时间内快速请求 getgameroute\r\n     */\r\n    private seq = 0\r\n\r\n    //斗地主合集中的gameid\r\n    public GAME_DDZ_HJ_ARR = [20001];\r\n\r\n    private gsc = \"default\";\r\n    private glv = \"l0\";\r\n    private timeId:any = -1;\r\n    public curGid = 0;\r\n    public curLv = \"l0\";\r\n\r\n    public enterData:any\r\n\r\n    //开始http请求 到请求成功\r\n    private connectLock = false;\r\n    private connectLockTimer:any = -1;\r\n    //socket连接成功  进场景之前\r\n    private enterSceneLock = false;\r\n    private enterSceneLockTimer:any = -1;\r\n\r\n    public callEnterFunc:Function = this.sendEnter.bind(this);\r\n\r\n    private connectComplete:Function;\r\n\r\n    private isLabaGame: boolean = false;\r\n\r\n    public setup()\r\n    {\r\n        Game.Event.on(Game.EVENT_SOCKET_OPEN, this, this.onGameSocketOpen)\r\n        Game.Event.on(Game.EVENT_SOCKET_ERROR, this, this.onGameSocketError)\r\n    }\r\n\r\n    public setGlvAndGsc(glv = \"l0\", gsc = \"default\")\r\n    {\r\n        this.glv = glv;\r\n        this.gsc = gsc;\r\n    }\r\n\r\n    public setSession(session)\r\n    {\r\n        Game.Server.setDst(session._para._gt, session._para._chair);\r\n        //收到Session后 发送心跳\r\n        Game.Server.sendHeartBeat();      \r\n    }\r\n\r\n\r\n    private sendEnter(gid,  glv ,gsc, extraMap = null)\r\n    {\r\n        Game.Server.passSSSAndEnter();\r\n        let enterData = Game.Server.getSendParam(Game.Command.Enter)\r\n        enterData._param._para = {_gid : gid};\r\n        enterData._param._para._gsc = gsc; \r\n        enterData._param._para._glv = glv;\r\n        if(extraMap)\r\n        {\r\n            for(let k in extraMap)\r\n            {\r\n                enterData._param._para[k] = extraMap[k];\r\n            }\r\n        }\r\n        this.enterData = enterData;\r\n        Game.Server.sendDirect(enterData)\r\n    }\r\n\r\n    //设置context  需要在进游戏之前设置\r\n    public setContext(context:any)\r\n    {\r\n        Game.Context = context;\r\n        this.registDefaultHandler();\r\n    }\r\n\r\n    public registDefaultHandler()\r\n    {\r\n        Game.Server.registDefaultHandler(Game.Command.Session, new SessionHandler);\r\n        Game.Server.registDefaultHandler(Game.Command.WaitMatch, new PvpWaitMatchHandler);\r\n    }\r\n\r\n    public registHandler(key:any, handler:any)\r\n    {\r\n        Game.Server.registHandler(key, handler);\r\n    }\r\n\r\n    public unregistHandler(key:any) {\r\n        Game.Server.unregistHandler(key);\r\n    }\r\n\r\n    public connectGame(serverInfo, mod, onComplete?, pbmode = false, useFunc = true)\r\n    {\r\n        if(Game.Server.isRunning)\r\n        {\r\n            Global.Event.event(GlobalEvent.HIDE_NET_WAITING, \"enterGame\")\r\n            return;\r\n        }\r\n        Game.Server.run()\r\n        //链接服务器\r\n        Game.Server.connect(serverInfo, mod, pbmode, useFunc);\r\n\r\n        this.connectComplete = onComplete;\r\n    }\r\n\r\n\r\n    public trySendEnter(extraParamMap = null)\r\n    {\r\n        if (!this.isLabaGame){      // 非拉霸类socket发enter\r\n            if(this.callEnterFunc == null)\r\n                this.callEnterFunc = this.sendEnter.bind(this);\r\n            this.callEnterFunc(this.curGid, this.glv, this.gsc, extraParamMap);\r\n            this.startCheckMsgTimer();\r\n        }\r\n    }\r\n\r\n    private startCheckMsgTimer()\r\n    {\r\n        //Global.Component跨场景会有问题 需要使用setTimeout\r\n        //@todo 提供常驻组件  \r\n        this.stopCheckMsgTimer();\r\n        this.timeId = setTimeout(this.onMsgTimeOut.bind(this), Global.Setting.enterTimeout * 1000)\r\n    }\r\n\r\n    public stopCheckMsgTimer()\r\n    {\r\n        if(this.timeId != -1)\r\n        {\r\n            clearTimeout(this.timeId);\r\n            this.timeId = -1;\r\n        }\r\n    }\r\n\r\n    private onMsgTimeOut()\r\n    {\r\n        Game.Server.stopGame();\r\n        let errFunc = ()=>{Game.Event.event(Game.EVENT_FORCE_LEAVE_GAME);}\r\n        Global.UI.showSingleBox(\"网络连接异常，请稍后再试\", errFunc, errFunc);\r\n    }\r\n\r\n\r\n    //对于非选场类游戏 在大厅请求数据和链接socket\r\n    public connnectAndEnterGame(gid, glv = \"l0\", gsc = \"default\", locker?:any, pbMode = false,showWaiting = false)\r\n    {\r\n        this.getGameServerInfo(gid, (serverRoute, mod)=>\r\n        {\r\n            this.connectGame(serverRoute, mod, ()=>\r\n            {\r\n                Global.HotUpdateManager.CurrentGame = gid;\r\n                this.enterSceneLock = true;\r\n                this.startEnterSceneLockTimer()\r\n                Global.SceneManager.loadGameScene();\r\n            }, pbMode)\r\n        },null, glv, gsc, locker, false);\r\n    }\r\n\r\n    \r\n    //对于选场类游戏 在大厅请求数据和链接socket\r\n    public connnectAndEnterGameInLevelScene(gid, glv = \"l0\", gsc = \"default\", \r\n                                            locker?:any, onComplete?:Function, \r\n                                            pbMode = false, showWaiting = false)\r\n    {\r\n        showWaiting = this.needChooseLevel(gid);\r\n        this.getGameServerInfo(gid, (serverRoute, mod)=>\r\n        {\r\n\r\n            this.connectGame(serverRoute, mod, ()=>\r\n            {\r\n                if(onComplete)\r\n                    onComplete();\r\n            }, pbMode)\r\n        },null, glv, gsc, locker, false);\r\n    }\r\n\r\n    public connnectLabaGameServer(gid, glv = \"l0\", gsc = \"default\", locker?:any, pbMode = false,showWaiting = false)\r\n    {\r\n        this.getGameServerInfo(gid, (serverRoute, mod)=>{\r\n            this.isLabaGame = true;\r\n            this.connectGame(serverRoute, mod, ()=>\r\n            {\r\n                Global.HotUpdateManager.CurrentGame = gid;\r\n                this.enterSceneLock = true;\r\n                this.startEnterSceneLockTimer()\r\n                Global.SceneManager.loadGameScene();\r\n                Game.Event.event(Game.EVENT_LABA_CONNECT);\r\n            }, pbMode, false);\r\n        },null, glv, gsc, locker, false);\r\n    }\r\n\r\n\r\n    /**\r\n     * 获取捕鱼游戏服务器完整socket地址\r\n     * @param gid 游戏id\r\n     * @param callback (url:string)=>void   返回socket完整地址\r\n     * @param glv 选场信息\r\n     * @param gsc 默认值\r\n     * @param locker null\r\n     */\r\n    public getFishServerInfo(gid:number, callback:(url:string)=>void, glv = \"l0\", gsc = \"default\", locker?:any)\r\n    {\r\n        if(this.connectLock || this.enterSceneLock)\r\n        {\r\n            return;\r\n        }\r\n        this.seq ++\r\n        this.connectLock = true;\r\n        this.startConnectLockTimer();\r\n        this.glv = glv;\r\n        this.gsc = this.getRule(gid, glv);\r\n        this.curGid = gid;\r\n        let param:any = {}\r\n        param.glv = glv;\r\n        param.gsc = gsc;\r\n        param.gid = gid;\r\n        param.locker = locker\r\n        param.seq = this.seq\r\n        param.game_skin = Global.Setting.SystemInfo.gameSkin;\r\n        param.app_version = Global.Setting.SystemInfo.appVersion //20200323Grace 新增字段\r\n        param.device = Global.Toolkit.genDeviceInfo();\r\n        let megeServerFlag = Global.Toolkit.checkMegeServer()\r\n        \r\n        if(megeServerFlag)\r\n        {\r\n            param.old_app_id = parseInt(Global.Setting.SystemInfo.appID)\r\n        }\r\n\r\n        if(locker && locker._gid)\r\n        {\r\n            Game.Server.setDst(locker._gt, locker._chair);\r\n        }\r\n        Global.HallServer.send(NetAppface.mod, NetAppface.GetGameRoute, param,(msg)=>\r\n        {\r\n            this.connectLock = false;\r\n            this.stopConnectLockTimer();\r\n            \r\n            if (!CC_PREVIEW) {\r\n                let tmpGameInfo = Global.GameData.getGameInfo(Global.HotUpdateManager.CurrentGame)\r\n                if (tmpGameInfo && tmpGameInfo.native_version) {\r\n                    if(msg&&msg.version)\r\n                    {\r\n                        let checkversion = Global.Toolkit.versionCompare(tmpGameInfo.native_version, msg.version)\r\n                        if (checkversion < 0) {\r\n                            if(Global.Setting.needHallChooseRoom)\r\n                            {\r\n                                Global.Toolkit.transmitHallTip(\"您的游戏不是最新版本，请重新启动游戏更新至最新版本！[-1]\");\r\n                            }\r\n                            else\r\n                            {\r\n                                this.showFastTipsError(Global.HotUpdateManager.CurrentGame,\"您的游戏不是最新版本，请重新启动游戏更新至最新版本！\",-1)\r\n                            }\r\n                            Game.Event.event(Game.EVENT_FORCE_LEAVE_GAME);\r\n                            Global.Event.event(GlobalEvent.FORCE_HIDE_WAITING);\r\n                            return\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if(param.seq != this.seq)\r\n            {\r\n                return\r\n            }\r\n            this.seq = 0\r\n            let serverRoutes = new ServerRoutes();\r\n            let routes = msg.routes;\r\n            serverRoutes.parse(routes);\r\n            //获取服务器信息\r\n            Global.Setting.Urls.gameRoutes = serverRoutes;\r\n\r\n            let mods = msg.mods;\r\n            Global.Setting.Urls.gameMods = mods;\r\n            if(mods == null || mods.length == 0)\r\n            {\r\n                let errStr = \"服务器正在维护中，请稍后再试\";\r\n                this.showFastTipsError(gid, errStr, -1)\r\n                Global.Event.event(GlobalEvent.FORCE_HIDE_WAITING);\r\n                return;\r\n            }\r\n\r\n            //处理locker\r\n            let result = this.parseLocker(msg, glv, gsc);\r\n            let mod = null;\r\n            if(result.result < 0)\r\n            {\r\n                Global.Event.event(GlobalEvent.FORCE_HIDE_WAITING);\r\n                return;\r\n            }\r\n            else if(result.result == 1)\r\n            {\r\n                mod = result.mod;\r\n            }\r\n\r\n            let [pbUrl] = this.getRandomFishServerInfo(mod);\r\n            if(callback != null)\r\n                callback(pbUrl);\r\n        }, (msg)=>{\r\n            this.connectLock = false\r\n            this.stopConnectLockTimer();\r\n            return Global.HallServer.tryHandleError(msg);\r\n        }, true)\r\n    }\r\n\r\n    public getRandomFishServerInfo(_mod?: any){\r\n        let serverRoute = this.getServerRoute(Global.Setting.Urls.gameRoutes);\r\n        let mod = this.getRandMod(Global.Setting.Urls.gameMods);\r\n        if (_mod){\r\n            mod = _mod;\r\n        }\r\n        let pbUrl = serverRoute.getPbSocketUrl(mod);\r\n        pbUrl = Game.Server.getSocketUrl(pbUrl, true);\r\n        let reqUrl = Global.UrlUtil.dealWebSocketUrl(pbUrl)\r\n        return [reqUrl, mod];\r\n    }\r\n\r\n    private startConnectLockTimer()\r\n    {\r\n        this.stopConnectLockTimer();\r\n        this.connectLockTimer = setTimeout(()=>{\r\n            this.connectLock = false;\r\n        }, 3000)\r\n    }\r\n\r\n    private stopConnectLockTimer()\r\n    {\r\n        if(this.connectLockTimer != -1)\r\n        {\r\n            clearTimeout(this.connectLockTimer)\r\n            this.connectLockTimer = -1;\r\n        }\r\n    }\r\n\r\n    private startEnterSceneLockTimer()\r\n    {\r\n        this.stopEnterSceneLockTimer();\r\n        this.enterSceneLockTimer = setTimeout(()=>{\r\n            this.enterSceneLock = false;\r\n        }, 2000)\r\n    }\r\n\r\n    private stopEnterSceneLockTimer()\r\n    {\r\n        if(this.enterSceneLockTimer != -1)\r\n        {\r\n            clearTimeout(this.enterSceneLockTimer)\r\n            this.enterSceneLockTimer = -1;\r\n        }\r\n    }\r\n\r\n\r\n    private getRule(gid, glv)\r\n    {\r\n        let data = Global.GameData.getGameInfo(gid);\r\n        if(data == null || data.levels == null)\r\n        {\r\n            Logger.error(\"找不到gid:\" + gid);\r\n            return \"default\";\r\n        }\r\n        for(let i = 0; i < data.levels.length; i++)\r\n        {\r\n            if(data.levels[i].level == glv)\r\n                return data.levels[i].rule || \"default\";\r\n        }\r\n        return \"default\"\r\n    }\r\n\r\n\r\n    //获取游戏信息\r\n    public getGameServerInfo(gid:number, callback:Function, onError:Function, glv = \"l0\", gsc = \"default\", locker?:any, showWaiting = false)\r\n    {\r\n        if(this.connectLock || this.enterSceneLock)\r\n        {\r\n            return;\r\n        }\r\n        this.seq++\r\n        gsc = this.getRule(gid, glv);\r\n        this.connectLock = true;\r\n        this.startConnectLockTimer();\r\n        this.glv = glv;\r\n        this.gsc = gsc;\r\n        this.curGid = gid;\r\n        let param:any = {}\r\n        param.seq = this.seq\r\n        param.glv = glv;\r\n        param.gsc = gsc;\r\n        param.gid = gid;\r\n        param.game_skin = Global.Setting.SystemInfo.gameSkin;\r\n        param.locker = locker\r\n        param.app_version = Global.Setting.SystemInfo.appVersion //20200323Grace 新增字段\r\n        param.device = Global.Toolkit.genDeviceInfo();\r\n        let megeServerFlag = Global.Toolkit.checkMegeServer()\r\n        if(megeServerFlag)\r\n        {\r\n            param.old_app_id = parseInt(Global.Setting.SystemInfo.appID)\r\n        }\r\n        if(locker && locker._gid)\r\n        {\r\n            Game.Server.setDst(locker._gt, locker._chair);\r\n        }\r\n        Global.HallServer.send(NetAppface.mod, NetAppface.GetGameRoute, param,(msg)=>\r\n        {\r\n            this.connectLock = false;\r\n            this.stopConnectLockTimer();\r\n            //获取服务器信息\r\n            let serverRoutes = new ServerRoutes();\r\n            serverRoutes.parse(msg.routes)\r\n            Global.Setting.Urls.gameRoutes = serverRoutes;\r\n            \r\n            let serverRoute = this.getServerRoute(serverRoutes);\r\n\r\n            //获取mod\r\n            let mods = msg.mods;\r\n\r\n            if(mods == null || mods.length == 0)\r\n            {\r\n                let errStr = \"服务器正在维护中，请稍后再试\";\r\n                if(onError) {\r\n                    onError( { _errstr:errStr } );\r\n                }\r\n                else\r\n                {\r\n                    this.showFastTipsError(gid, errStr, -1)\r\n                    Game.Event.event(Game.EVENT_FORCE_LEAVE_GAME);\r\n                }\r\n\r\n                Global.Event.event(GlobalEvent.FORCE_HIDE_WAITING);\r\n                return;\r\n            }\r\n            // if (!CC_PREVIEW && !cc.sys.isBrowser) {\r\n            //     let tmpGameInfo = Global.GameData.getGameInfo(Global.HotUpdateManager.CurrentGame)\r\n            //     if (tmpGameInfo && tmpGameInfo.native_version) {\r\n            //         if(msg&&msg.version)\r\n            //         {\r\n            //             let checkversion = Global.Toolkit.versionCompare(tmpGameInfo.native_version, msg.version)\r\n            //             if (checkversion < 0) {\r\n            //                 if(Global.Setting.needHallChooseRoom)\r\n            //                 {\r\n            //                     Global.Toolkit.transmitHallTip(\"该游戏有最新版本，请退出大厅更新！[-1]\");\r\n            //                 }\r\n            //                 else\r\n            //                 {\r\n            //                     this.showFastTipsError(Global.HotUpdateManager.CurrentGame,\"该游戏有最新版本，请退出大厅更新！\",-1)\r\n            //                 }\r\n            //                 //Global.UI.fastTip(\"您的游戏不是最新版本，请重新启动游戏更新至最新版本！\")\r\n            //                 Game.Event.event(Game.EVENT_FORCE_LEAVE_GAME);\r\n            //                 Global.Event.event(GlobalEvent.FORCE_HIDE_WAITING);\r\n            //                 return\r\n            //             }\r\n            //         }\r\n            //     }\r\n            // }\r\n            if(param.seq != this.seq)\r\n            {\r\n                return\r\n            }\r\n            this.seq = 0\r\n            Global.Setting.Urls.gameMods = mods;\r\n            //从多个mod中随机一个\r\n            let mod = this.getRandMod(mods);\r\n\r\n            let connectFunc = (mod)=>\r\n            {\r\n                if(callback)\r\n                    callback(serverRoute, mod);\r\n            }\r\n\r\n\r\n            //处理locker\r\n            let result = this.parseLocker(msg, glv, gsc, connectFunc);\r\n           \r\n            if(result.result < 0)\r\n            {\r\n                Global.Event.event(GlobalEvent.FORCE_HIDE_WAITING);\r\n                return;\r\n            }\r\n            else if(result.result == 1)\r\n            {\r\n                mod = result.mod;\r\n            }\r\n            \r\n            connectFunc(mod);\r\n            // if(callback != null)\r\n            //     callback(serverRoute, mod);\r\n        }, \r\n        (msg:any)=>{\r\n            this.connectLock = false;\r\n            this.stopConnectLockTimer();\r\n            if(onError) {\r\n                let ret = onError(msg) || false;\r\n                Game.Event.event(Game.EVENT_FORCE_LEAVE_GAME);\r\n                return ret;\r\n            }\r\n            else {\r\n                Game.Event.event(Game.EVENT_FORCE_LEAVE_GAME);      // debug 游戏强制离开时会把scene切到hall, 先执行的话, showFastTipsError里的判断会失效\r\n                if(msg._errstr && msg._errstr != \"\")\r\n                {\r\n                    this.showFastTipsError(gid, msg._errstr, msg._errno)\r\n                }\r\n               \r\n                return false;\r\n             }\r\n        }, showWaiting)\r\n    }\r\n\r\n    private showFastTipsError(gid, msg, errNo, checkType = 1)\r\n    {\r\n        if(!Global.SceneManager.inGame())\r\n        {\r\n            if(errNo == 2002)\r\n            {\r\n                if(Global.Setting.needHallChooseRoom)\r\n                {\r\n                    Global.Toolkit.transmitHallMsg(msg,()=>{\r\n                        Global.UI.show(\"WndRecharge\");\r\n                    });\r\n                }\r\n                else\r\n                {\r\n                    Global.Toolkit.showMoneyNotEnough();\r\n                }\r\n            }\r\n            else\r\n            {\r\n                if(Global.Setting.needHallChooseRoom)\r\n                {\r\n                    Global.Toolkit.transmitHallTip(msg+\"[\"+errNo+\"]\" || \"\");\r\n                }\r\n                else\r\n                {\r\n                    Global.UI.fastTip(msg+\"[\"+errNo+\"]\");\r\n                }\r\n               \r\n            }\r\n            return;\r\n        }\r\n        let gameInfo = Global.GameData.getGameInfo(gid);\r\n        let checkArray = checkType == 1 ? gameInfo.levels : gameInfo.rules;\r\n        if(checkArray != null && checkArray.length == 1 && !gameInfo.hasChooseLevel)\r\n        {\r\n            Global.Toolkit.transmitHallTip(msg || \"\");\r\n        }\r\n        else\r\n        {\r\n            if(errNo == 2002)\r\n            {\r\n                if(Global.Setting.needHallChooseRoom)\r\n                {\r\n                    Global.Toolkit.transmitHallMsg(msg,()=>{\r\n                        Global.UI.show(\"WndRecharge\");\r\n                    });\r\n                }\r\n                else\r\n                {\r\n                    Global.Toolkit.showMoneyNotEnough();\r\n                }\r\n            }\r\n            else\r\n            {\r\n                if(Global.Setting.needHallChooseRoom)\r\n                {\r\n                    Global.Toolkit.transmitHallTip(msg+\"[\"+errNo+\"]\" || \"\");\r\n                }\r\n                else\r\n                {\r\n                    Global.UI.fastTip(msg+\"[\"+errNo+\"]\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    //是否有选场\r\n    private needChooseLevel(gid, checkType = 1)\r\n    {\r\n        let gameInfo = Global.GameData.getGameInfo(gid);\r\n        let checkArray = checkType == 1 ? gameInfo.levels : gameInfo.rules;\r\n        return checkArray && checkArray.length > 1;\r\n    }\r\n\r\n    private getServerRoute(serverRoutes:ServerRoutes)\r\n    {\r\n        let serverRoute = serverRoutes.getRandRoute();\r\n        if(serverRoute != null)\r\n            return serverRoute;\r\n        //如果取不到游戏  就直接使用大厅链接地址\r\n        serverRoute = Global.Setting.Urls.hallRoutes.getCurRoute();\r\n        return serverRoute;\r\n    }\r\n\r\n    private onGameSocketOpen()\r\n    {\r\n        if(Global.SceneManager.inGame())\r\n        {\r\n            Logger.error(\"onGameSocketOpen trySendEnter\");\r\n            if(Game.Server.isRunning)  //怀疑socket关闭不是同步，有概率出现shutdown之后还能发送enter，导致lv设置错误\r\n                this.trySendEnter();\r\n        }\r\n        if(this.connectComplete)\r\n        {\r\n            this.connectComplete();\r\n            this.connectComplete = null;\r\n        }\r\n    }\r\n\r\n    private onGameSocketError()\r\n    {\r\n        Global.Event.event(GlobalEvent.HIDE_NET_WAITING, \"enterGame\")\r\n        this.stopCheckMsgTimer();\r\n    }\r\n\r\n    private getRandMod(mods)\r\n    {\r\n        let length = mods.length;\r\n        if(length == 1)\r\n            return mods[0];\r\n        let randIndex = Global.Toolkit.getRoundInteger(length, 0);\r\n        return mods[randIndex];\r\n    }\r\n\r\n\r\n    private parseLocker(msg, glv, gsc, callback:Function = null)\r\n    {\r\n        let result = 0\r\n        let mod = \"\"\r\n        if (msg.locker) \r\n        {\r\n            let lock = msg.locker;\r\n            if(this.curGid != lock._gid)\r\n            {\r\n                result = this.SERVER_LOCK;\r\n                Global.Event.event(GlobalEvent.FORCE_HIDE_WAITING)\r\n                let str = Global.GameData.getReturnGameStr(lock._gid, lock._glv, false);\r\n                Global.UI.showYesNoBox(str, ()=>        // 跨场景暂时不作直接跳转\r\n                {\r\n\r\n                    //游戏中第一版先回大厅  不需要重连\r\n                    this.goToGameByLocker(msg.locker)\r\n                }, ()=>\r\n                {\r\n                    if(Global.SceneManager.inGame()) {\r\n                        Game.Event.event(Game.EVENT_FORCE_LEAVE_GAME);\r\n                    }\r\n                });\r\n            }\r\n            else\r\n            {\r\n                let lock = msg.locker;\r\n                //相同游戏，相同场次，直接进入\r\n                if(lock._gsc == gsc && lock._glv == glv)\r\n                {\r\n                    result = 1;\r\n                    this.gsc = lock._gsc;\r\n                    this.glv = lock._glv;\r\n                    Game.Server.setDst(lock._gt, lock._chair);\r\n                    mod = lock._svr_t + \".\" + lock._svr_id;\r\n                }\r\n                //相同游戏，不同场次  弹提示框\r\n                else\r\n                {\r\n                    Global.Event.event(GlobalEvent.FORCE_HIDE_WAITING)\r\n                    let str = Global.GameData.getReturnGameStr(lock._gid, lock._glv, true);\r\n                    Global.UI.showYesNoBox(str, ()=>\r\n                    {\r\n                        if(callback)\r\n                        {\r\n                            this.gsc = lock._gsc;\r\n                            this.glv = lock._glv;\r\n                            Game.Server.setDst(lock._gt, lock._chair);\r\n                            mod = lock._svr_t + \".\" + lock._svr_id;\r\n                            callback(mod);\r\n                        }\r\n                    }, ()=>{\r\n                        if(Global.SceneManager.inGame()) {\r\n                            Game.Event.event(Game.EVENT_FORCE_LEAVE_GAME);\r\n                        }\r\n                    });\r\n                    result = this.IN_OTHER_LEVEL;\r\n                }\r\n            }\r\n        }\r\n        return {result:result, mod:mod}\r\n    }\r\n\r\n    public checkQueryState(gid ,complete)\r\n    {\r\n        if(Game.DataBridge.locker == null)\r\n            return false;\r\n        let locker = Game.DataBridge.locker;\r\n        Game.DataBridge.locker = null;\r\n        if(locker._gid != gid)\r\n            return false;\r\n        this.connnectAndEnterGameInLevelScene(gid, locker._glv, locker._gsc, locker, complete)\r\n        return true;\r\n    }\r\n\r\n    //关闭游戏统一入口\r\n    public shutDown(cleanHander = true)\r\n    {\r\n        Game.Server.stop();\r\n        Game.Tween.clear();\r\n        Game.Component.unscheduleAllCallbacks();\r\n        this.gsc = \"default\";\r\n        this.glv = \"l0\";\r\n        this.curGid = 0;\r\n        this.isLabaGame = false;\r\n        this.stopCheckMsgTimer();\r\n        this.enterData = null;\r\n        Global.HallServer.setSession(null);\r\n        if(cleanHander)\r\n        {\r\n            Game.Server.clearHandlers();\r\n            // debug 这里清理会导致很多切场景情况Game.Entry为null调用的报错 放到子游戏驱动器destory时清理\r\n            // Game.Entry = null;\r\n        }\r\n    }\r\n\r\n\r\n    public goToGameByLocker(locker){\r\n        if(locker == null || locker.ret != 1)\r\n            return;\r\n        let gid = locker._gid\r\n\r\n        let gameID = gid;\r\n        if(Game.Control.GAME_DDZ_HJ_ARR.indexOf(gameID) >= 0){\r\n            //斗地主合集\r\n            gameID = Game.Control.GAME_DDZ_HJ_ARR[0];\r\n        }\r\n        if(Global.SceneManager.inGame()){\r\n            let oldGid = Game.Control.curGid;\r\n            Game.Control.shutDown(true);            // 这里会清理curGid\r\n            Game.Tween.clear();\r\n            Game.Component.unscheduleAllCallbacks();\r\n            Global.Component.unscheduleAllCallbacks();\r\n            \r\n            if(!Global.HotUpdateManager.checkIsGameDownload(gameID) && cc.sys.isNative){\r\n                Global.UI.fastTip(\"未下载游戏\");\r\n                // Game.DataBridge.locker = locker;\r\n                Game.Event.event(Game.EVENT_FORCE_LEAVE_GAME, true);\r\n                Global.SceneManager.goToHall();\r\n                return;\r\n            }\r\n            //没有更新游戏\r\n            if(!Global.HotUpdateManager.checkIsGameNewest(gameID) && cc.sys.isNative){\r\n                Global.UI.fastTip(\"该游戏有最新版本\");\r\n                // Game.DataBridge.locker = locker;\r\n                Game.Event.event(Game.EVENT_FORCE_LEAVE_GAME, true);\r\n                Global.SceneManager.goToHall();\r\n            }\r\n            \r\n            let gameData = Global.GameData.getGameInfo(oldGid);\r\n            if (gameData.portraitModel) {\r\n                Global.NativeEvent.changeOrientationH(true);\r\n            }\r\n            Game.Control.glv = locker._glv;\r\n            Game.Control.curLv = locker._glv;\r\n            Game.Control.curGid = gid;\r\n            Global.SceneManager.switchGameScene(gameID);       // 切换游戏场景\r\n        }\r\n        else{\r\n            if(!Global.HotUpdateManager.checkIsGameDownload(gameID) && cc.sys.isNative){\r\n                Global.UI.fastTip(\"未下载游戏\");\r\n                return;\r\n            }\r\n            //没有更新游戏\r\n            if(!Global.HotUpdateManager.checkIsGameNewest(gameID) && cc.sys.isNative){\r\n                return;\r\n            }\r\n\r\n            Global.HotUpdateManager.CurrentGame = gameID;\r\n            let gameData = Global.GameData.getGameInfo(gameID);\r\n            if(gameData.levelType == 1)\r\n                Game.Control.connnectAndEnterGame(gameData.game_id, locker._glv, locker._gsc, locker)\r\n            else {\r\n                this.curGid = gid;\r\n                this.curLv = locker._glv \r\n                Global.SceneManager.loadGameScene();\r\n                Game.DataBridge.locker = locker;\r\n            }\r\n        }\r\n    }\r\n}\r\n"]}