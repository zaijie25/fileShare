{"version":3,"sources":["assets\\hall\\scripts\\logic\\core\\loadingMVC\\PreLoadProxy.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,+CAAkC;AAClC,wEAAmE;AACnE,iDAAiE;AACjE,iDAA4C;AAE5C,+CAA0C;AAC1C,iDAAgD;AAGhD,yDAAoD;AAGpD,WAAW;AACX;IAA0C,gCAAa;IASnD,sBAAY,QAAQ;QAApB,YACI,iBAAO,SAGV;QAVO,cAAQ,GAAG,CAAC,CAAC;QAEb,gBAAU,GAAG,CAAC,CAAC,CAAA;QACvB,cAAc;QACN,iBAAW,GAAQ,EAAE,CAAA;QAqgBrB,oBAAc,GAAG,IAAI,CAAA;QAjgBzB,KAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC,SAAS,CAAC;QAC5C,KAAI,CAAC,SAAS,GAAG,YAAY,CAAC,IAAI,CAAC;;IACvC,CAAC;IAED,iCAAU,GAAV;QACI,aAAa;QACb,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;QAC5B,MAAM,CAAC,WAAW,CAAC,eAAe,CAAC,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA;QAEzE,MAAM;QAEN,qBAAqB;QACrB,MAAM,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;QAC9B,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,4BAA4B;QAC5B,mBAAS,CAAC,IAAI,EAAE,CAAC;QACjB,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;QAClB,SAAS;QACT,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;QACrB,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,8DAA8D;IAElE,CAAC;IAEO,4CAAqB,GAA7B;QACI,uBAAa,CAAC,QAAQ,CAAC,gBAAgB,CAAC,sBAAK,CAAC,sBAAsB,CAAC,CAAA;QAErE,IAAI,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,WAAW,CAAC;QACnD,IAAI,MAAM,IAAI,IAAI,IAAI,MAAM,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE;YAC1D,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,cAAc,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;SAC9D;IACL,CAAC;IAEO,mCAAY,GAApB;QACI,IAAG,UAAU,IAAI,EAAE,CAAC,GAAG,CAAC,SAAS,EACjC;YACI,MAAM,CAAC,OAAO,CAAC,YAAY,GAAG,EAAE,CAAA;YAChC,IAAI,eAAe,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC;YACnD,kDAAkD;YAClD,IAAI,QAAQ,GAAG,MAAM,CAAC;YACtB,IAAI,eAAe,IAAI,eAAe,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC/C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAe,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC7C,IAAI,QAAQ,GAAW,eAAe,CAAC,CAAC,CAAC,CAAA;oBACzC,IAAI,YAAY,GAAG,QAAQ,CAAC;oBAC5B,YAAY,GAAG,YAAY,GAAG,EAAE,CAAC,EAAE,CAAC,SAAS,CAAC,MAAM,EAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAA;oBAClF,MAAM,CAAC,KAAK,CAAC,iBAAiB,GAAG,YAAY,CAAC,CAAA;oBAC9C,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;iBAClD;aACJ;YACD,OAAM;SACT;QACD,MAAM,CAAC,OAAO,CAAC,YAAY,GAAG,EAAE,CAAC;QACjC,IAAI,QAAQ,GAAG,MAAM,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;QAC7C,IAAG,QAAQ,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAClC;YACI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACtC,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;gBACvC,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC1C;SACJ;aAED;YACI,wBAAwB;YACxB,QAAQ,GAAG,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,gBAAgB,CAAC;YACtD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACtC,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;gBACvC,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC1C;SACJ;IACL,CAAC;IAGO,gCAAS,GAAjB,UAAkB,GAAU;QAExB,sBAAsB;QACtB,IAAG,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EACxB;YACI,IAAG,CAAC,GAAG,CAAC,UAAU,CAAC,MAAM,CAAC;gBACtB,GAAG,GAAG,UAAU,GAAG,GAAG,CAAC;YAC3B,OAAO,GAAG,CAAC;SACd;QACD,IAAI,QAAQ,GAAG,QAAQ,CAAA;QACvB,IAAI,WAAW,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAClC,IAAG,WAAW,CAAC,MAAM,GAAG,CAAC,EACzB;YACI,QAAQ,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;YAC1B,GAAG,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;SACxB;QACD,IAAI,IAAI,GAAG,MAAM,CAAC,OAAO,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;QAC9C,IAAI,QAAQ,GAAG,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAA;QAC9C,yBAAyB;QACzB,IAAG,QAAQ,IAAI,IAAI,IAAI,QAAQ,IAAI,EAAE,EACrC;YACI,QAAQ,GAAG,MAAM,CAAC,OAAO,CAAC,mBAAmB,EAAE,CAAC;SACnD;QACD,IAAI,WAAW,GAAG,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,aAAa,CAAA;QACzD,IAAI,OAAO,GAAG,EAAE,CAAA;QAChB,IAAG,WAAW,IAAI,QAAQ;YAAE,OAAO,GAAG,QAAQ,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,GAAG,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;;YACnF,OAAO,GAAG,WAAW,CAAC;QAC3B,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAA;QACrC,OAAO,QAAQ,GAAG,IAAI,GAAG,IAAI,GAAG,KAAK,GAAG,OAAO,GAAG,GAAG,CAAC;IAC1D,CAAC;IAKD,cAAc;IACd,oCAAa,GAAb;QACI,OAAO;QACP,MAAM,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC;QACpC,IAAI,CAAC,gBAAgB,CAAC,sBAAK,CAAC,gBAAgB,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,CAAC,CAAA;QACtE,IAAG,UAAU,EACb;YACI,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,OAAM;SACT;QACD,UAAU;QACV,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,EAAE;YAC5B,IAAI,CAAC,kBAAkB,EAAE,CAAC;SAC7B;aACI;YACD,IAAI,CAAC,wBAAwB,EAAE,CAAC;SACnC;IACL,CAAC;IAKD,gBAAgB;IACR,yCAAkB,GAA1B;QACI,IAAI,CAAC,UAAU,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;QACvC,IAAI,GAAG,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QAC9B,IAAI,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,wBAAc,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;QACtE,GAAG,IAAI,MAAM,GAAG,GAAG,GAAG,UAAU,GAAG,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,UAAU,GAAG,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,SAAS,EAAE,GAAG,KAAK,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;QAClI,MAAM,CAAC,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC5C,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC,qBAAqB,CAAC,GAAG,CAAC,CAAA;QAC/C,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC,sBAAsB,CAAC,GAAG,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAChE,MAAM,CAAC,OAAO,CAAC,UAAU,GAAG,GAAG,CAAC;QAChC,yDAAyD;QACzD,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,WAAW,CAAC,gBAAgB,EAAC,oBAAoB,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,KAAK,CAAC,CAAA;QACnF,MAAM,CAAC,KAAK,CAAC,mCAAQ,GAAG,cAAW,CAAC,CAAC;QACrC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAC,IAAI,EAAC,CAAC,EAAC,KAAK,CAAC,CAAC;IACvH,CAAC;IAED,uBAAuB;IACf,+CAAwB,GAAhC;QACI,IAAI,CAAC,UAAU,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;QACvC,IAAI,GAAG,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QAC9B,IAAI,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,wBAAc,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;QACtE,GAAG,IAAI,MAAM,GAAG,GAAG,GAAG,UAAU,GAAG,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,UAAU,GAAG,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,SAAS,EAAE,GAAG,KAAK,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;QAClI,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC,qBAAqB,CAAC,GAAG,CAAC,CAAA;QAC/C,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC,sBAAsB,CAAC,GAAG,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAChE,MAAM,CAAC,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC5C,MAAM,CAAC,OAAO,CAAC,UAAU,GAAG,GAAG,CAAC;QAChC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAChG,CAAC;IAEO,2CAAoB,GAA5B;QACI,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,MAAM,EAAE;YACpD,MAAM,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAA;YAClC,IAAI,CAAC,wBAAwB,EAAE,CAAC;SACnC;IACL,CAAC;IAEO,4CAAqB,GAA7B;QACI,IAAI,CAAC,WAAW,GAAG,EAAE,CAAA;QACrB,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,WAAW,CAAC,gBAAgB,EAAC,oBAAoB,CAAC,CAAA;QACrE,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAA;QAE1B,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,MAAM,EAAE;YACpD,IAAI,CAAC,kBAAkB,EAAE,CAAC;SAC7B;aACI;YACD,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;YAClB,MAAM,CAAC,EAAE,CAAC,aAAa,CAAC,kBAAkB,EAAE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;SACvH;IACL,CAAC;IAKD;;;;OAIG;IACK,yCAAkB,GAA1B;QACI,IAAI,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,wBAAc,CAAC,gBAAgB,CAAC,CAAC;QAC1E,IAAI,OAAO,IAAI,IAAI,IAAI,OAAO,IAAI,EAAE;YAChC,OAAO,KAAK,CAAC;QACjB,IAAI,CAAC,mBAAmB,GAAG,OAAO,CAAC;QACnC,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,CAAA;QACpB,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QACrC,MAAM,CAAC,GAAG,CAAC,aAAa,CAAC,CAAA;QACzB,OAAO,IAAI,CAAC;IAChB,CAAC;IAGD,gBAAgB;IACR,mCAAY,GAApB;QACI,QAAQ;QAER,IAAI,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACrD,IAAI,GAAG,IAAI,IAAI,EAAE;YACb,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,CAAA;YACpC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;SACrB;QACD,OAAO,GAAG,CAAC;IACf,CAAC;IAGD,oBAAoB;IACZ,sCAAe,GAAvB,UAAwB,GAAG,EAAE,YAAmB;QAAhD,iBAuGC;QAvG4B,6BAAA,EAAA,mBAAmB;QAC5C,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,WAAW,CAAC,gBAAgB,EAAC,oBAAoB,CAAC,CAAA;QAErE,IAAI,CAAC,WAAW,GAAG,EAAE,CAAA;QACrB,IAAI;YACA,IAAI,SAAS,GAAG,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YAC9C,IAAI,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;YAEvC,IAAI,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;YACrD,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,wBAAc,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC;YAChF,wCAAwC;YACxC,IAAI,SAAS,CAAC,MAAM,IAAI,IAAI,IAAI,SAAS,CAAC,MAAM,CAAC,MAAM,IAAI,IAAI,IAAI,SAAS,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,EAAE;gBAC7F,IAAI,CAAC,qBAAqB,EAAE,CAAC;gBAC7B,MAAM,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;gBAC3B,MAAM,CAAC,UAAU,CAAC,iBAAiB,CAAC,gBAAgB,EAChD;oBACI,GAAG,EAAE,WAAW;oBAChB,OAAO,EAAE,GAAG;oBACZ,SAAS,EAAE,CAAC,YAAY;iBAC3B,CAAC,CAAA;gBACN,OAAO;aACV;YACD,MAAM,CAAC,GAAG,CAAC,wBAAwB,EAAE,SAAS,CAAC,CAAA;YAC/C,MAAM,CAAC,KAAK,CAAC,oDAAY,GAAE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC;YACtD,MAAM,CAAC,OAAO,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;YAE1C,IAAI,CAAC,gBAAgB,CAAC,sBAAK,CAAC,eAAe,CAAC,CAAC;SAChD;QACD,OAAO,CAAC,EAAE;YACN,+BAA+B;YAC/B,IAAI,CAAC,qBAAqB,EAAE,CAAC;YAC7B,MAAM,CAAC,KAAK,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;YAChC,MAAM,CAAC,UAAU,CAAC,iBAAiB,CAAC,gBAAgB,EAChD;gBACI,GAAG,EAAE,WAAW;gBAChB,OAAO,EAAE,GAAG;gBACZ,SAAS,EAAE,CAAC,YAAY;aAC3B,CAAC,CAAA;YACN,uHAAuH;YACvH,OAAO;SACV;QAED,IAAI,YAAY,EAAE;YACd,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,wBAAc,CAAC,gBAAgB,EAAE,GAAG,CAAC,CAAC;SACpE;QAED,MAAM,CAAC,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC5C,MAAM,CAAC,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QAChD,UAAU;QACV,MAAM,CAAC,WAAW,CAAC,cAAc,EAAE,CAAA;QACnC,MAAM,CAAC,WAAW,CAAC,OAAO,EAAE,CAAA;QAC5B,MAAM,CAAC,WAAW,CAAC,YAAY,EAAE,CAAA;QACjC,MAAM,CAAC,WAAW,CAAC,WAAW,EAAE,CAAA;QAChC,MAAM,CAAC,WAAW,CAAC,eAAe,EAAE,CAAC;QACrC,SAAS;QACT,MAAM,CAAC,UAAU,CAAC,mBAAmB,EAAE,CAAC;QACxC,YAAY;QACZ,MAAM,CAAC,UAAU,CAAC,uBAAuB,EAAE,CAAC;QAE5C,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAA;QAG1B,IAAI,mBAAmB,GAAG;YACtB,WAAW;YACX,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,EAAE;gBACpE,QAAQ;gBACR,IAAI,EAAE,CAAC,GAAG,CAAC,QAAQ,EAAE;oBACjB,sBAAsB;oBACtB,IAAI,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,kBAAkB,EAAE;wBAC9C,UAAU,CAAC;4BACP,KAAI,CAAC,eAAe,EAAE,CAAA;wBAC1B,CAAC,EAAE,GAAG,CAAC,CAAC;qBACX;;wBAEG,KAAI,CAAC,eAAe,EAAE,CAAA;iBAC7B;qBAAM;oBACH,MAAM,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC;iBACnC;YACL,CAAC,CAAC,CAAA;QACN,CAAC,CAAA;QACD,IAAI,iBAAiB,GAAG,EAAE,CAAC,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAA;QACxE,IAAI,iBAAiB,IAAI,IAAI,IAAI,iBAAiB,IAAI,EAAE,EAAC;YACrD,IAAI,GAAG,GAAI,MAAM,CAAC,iBAAiB,CAAC,CAAA;YACpC,IAAI,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,EAAC;gBACtB,MAAM,CAAC,KAAK,CAAC,sBAAsB,GAAG,iBAAiB,GAAG,cAAc,CAAC,CAAA;gBACrE,IAAI,YAAY,GAAG;oBACf,mBAAmB,EAAE,CAAC;gBAC1B,CAAC,CAAA;gBACD,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,kBAAkB,EAAC,YAAY,EAAC,YAAY,CAAC,CAAA;aACnE;iBAAK;gBACF,MAAM,CAAC,KAAK,CAAC,mCAAmC,GAAG,iBAAiB,CAAC,CAAA;gBACrE,mBAAmB,EAAE,CAAC;aACzB;SACJ;aAAK;YACF,MAAM,CAAC,KAAK,CAAC,4BAA4B,CAAC,CAAA;YAC1C,mBAAmB,EAAE,CAAA;SACxB;QAED,IAAG,UAAU,EAAC,gBAAgB;SAC9B;YACI,wBAAwB;SAC3B;IAEL,CAAC;IAED,cAAc;IACN,sCAAe,GAAvB,UAAwB,GAAG;QACvB,WAAW;QACX,+EAA+E;QAC/E,cAAc;QAEd,2BAA2B;QAC3B,6BAA6B;QAC7B,+CAA+C;QAC/C,oFAAoF;QAEpF,IAAI,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC;QAChE,MAAM,CAAC,KAAK,CAAC,0CAA0C,GAAG,MAAM,CAAC,CAAA;QAEjE,IAAI,MAAM,IAAI,CAAC,EAAE;YACb,sBAAsB;YACtB,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAC5B,OAAO;SACV;QACD,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAA;QAC1B,MAAM,CAAC,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC5C,MAAM,CAAC,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QAChD,IAAI,MAAM,IAAI,CAAC;YACX,OAAO;QACX,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,CAAA;QACrB,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,wBAAc,CAAC,gBAAgB,EAAE,GAAG,CAAC,CAAC;QACjE,IAAI,SAAS,GAAG,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QAC9C,IAAI,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QACtC,MAAM,CAAC,GAAG,CAAC,wBAAwB,EAAE,SAAS,CAAC,CAAA;QAC/C,MAAM,CAAC,OAAO,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;IAE9C,CAAC;IAED,yCAAkB,GAAlB,UAAmB,IAAI;QAEnB,IAAI,OAAO,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;QACnC,IAAI,IAAI,GAAG,OAAO,GAAG,IAAI,CAAC,UAAU,CAAA;QACpC,IAAG,IAAI,CAAC,UAAU,KAAK,CAAC,CAAC,EACzB;YACI,IAAI,CAAC,WAAW,GAAG,EAAE,MAAM,EAAE,IAAI,EAAG,UAAU,EAAE,IAAI,CAAC,YAAY,EAAE,EAAC,YAAY,EAAC,IAAI,EAAC,CAAA;YACtF,IAAI,SAAS,GAAG,uBAAU,CAAC,sBAAsB,CAAA;YACjD,MAAM,CAAC,UAAU,CAAC,qBAAqB,CAAC,SAAS,EAAE,IAAI,CAAC,WAAW,EAAE,KAAK,CAAC,CAAA;SAC9E;IAEL,CAAC;IAGD,yDAAyD;IACjD,qCAAc,GAAtB,UAAuB,MAAM,EAAE,QAAQ;QACnC,IAAI,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;YAC1D,OAAO,CAAC,CAAC;QACb,IAAI,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QACrC,IAAI,MAAM,IAAI,IAAI;YACd,OAAO,CAAC,CAAC;QACb,IAAI,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QACzC,IAAI,QAAQ,IAAI,IAAI;YAChB,OAAO,CAAC,CAAC;QAEb,oBAAoB;QACpB,IAAI;YACA,IAAI,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACrD,IAAI,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YACjD,IAAI,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC;gBACtE,OAAO,CAAC,CAAC;SAChB;QACD,OAAO,CAAC,EAAE;YACN,OAAO,CAAC,CAAC;SACZ;QAED,OAAO,CAAC,CAAC;IAEb,CAAC;IAGO,iCAAU,GAAlB,UAAmB,GAAG;QAClB,IAAI,SAAS,GAAG,IAAI,CAAC;QACrB,IAAI;YACA,IAAI,SAAS,GAAG,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YAC9C,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;YAClC,iBAAiB;YACjB,IAAI,SAAS,CAAC,MAAM,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,IAAI,SAAS,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,EAAE;gBACtF,SAAS,GAAG,IAAI,CAAC;gBACjB,MAAM,CAAC,KAAK,CAAC,sBAAsB,CAAC,CAAC;aACxC;SACJ;QACD,OAAO,CAAC,EAAE;YACN,MAAM,CAAC,KAAK,CAAC,gBAAgB,EAAE,GAAG,CAAC,CAAC;YACpC,SAAS,GAAG,IAAI,CAAC;SACpB;QACD,OAAO,SAAS,CAAC;IACrB,CAAC;IAGD,uBAAuB;IACvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAoCI;IACJ,UAAU;IACH,sCAAe,GAAtB;QAAA,iBAoDC;QAlDG,IAAI,KAAK,GAAQ,EAAE,CAAC;QACpB,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC;QACnC,MAAM,CAAC,OAAO,CAAC,eAAe,GAAG,KAAK,CAAC,KAAK,CAAA;QAC5C,IAAI,cAAc,GAAG,MAAM,CAAC,OAAO,CAAC,eAAe,EAAE,CAAA;QACrD,IAAG,cAAc,EACjB;YACI,KAAK,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAA;SAC7D;QACD,KAAK,CAAC,OAAO,GAAI,MAAM,CAAC,gBAAgB,CAAC,yBAAyB,CAAC,MAAM,EAAC,IAAI,EAAC,IAAI,CAAC,iBAAiB,CAAC,CAAA;QACtG,uDAAuD;QACvD,KAAK,CAAC,IAAI,GAAG,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,gBAAgB,EAAE,CAAC;QAC3D,KAAK,CAAC,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,wBAAc,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;QACxE,KAAK,CAAC,UAAU,GAAG,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,WAAW,CAAC;QACzD,KAAK,CAAC,mBAAmB,GAAG,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,UAAU,CAAC;QACjE,KAAK,CAAC,SAAS,GAAG,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,QAAQ,CAAC;QACrD,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC;QAC9C,MAAM,CAAC,OAAO,CAAC,gBAAgB,EAAE,CAAC;QAElC,MAAM,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAA;QACjC,IAAI,CAAC,gBAAgB,CAAC,sBAAK,CAAC,gBAAgB,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,CAAC,CAAA;QACtE,IAAI,wBAAwB,GAAG;YAC3B,MAAM,CAAC,UAAU,CAAC,gBAAgB,CAAC,0BAAe,CAAC,YAAY,EAAE,KAAK,EAAE,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAI,CAAC,EAAE,KAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAAI,CAAC,EAAE,IAAI,CAAC,CAAC;YACvJ,MAAM,CAAC,UAAU,CAAC,YAAY,CAAC,uBAAU,CAAC,8BAA8B,CAAC,CAAC;QAC9E,CAAC,CAAA;QACD,aAAa;QACb,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,YAAY,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAA;QACnD,IAAI,YAAY,IAAI,YAAY,CAAC,WAAW,EAAE,EAAC;YAC3C,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAA;YACrB,wBAAwB,EAAE,CAAA;SAC7B;aAAK;YACF,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAA;YACrB,gCAAgC;YAChC,IAAI,OAAK,GAAG,CAAC,CAAC;YACd,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,WAAW,CAAC,gBAAgB,EAAE,0BAA0B,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,KAAK,CAAC,CAAA;YAC1F,IAAI,CAAC,cAAc,GAAG,WAAW,CAAC;gBAC9B,OAAK,EAAG,CAAC;gBACT,IAAI,YAAY,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAA;gBACnD,IAAI,YAAY,IAAI,YAAY,CAAC,WAAW,EAAE,EAAC;oBAC3C,KAAI,CAAC,kBAAkB,EAAE,CAAC;oBAC1B,wBAAwB,EAAE,CAAA;iBAC7B;qBAAK;oBACF,eAAe;oBACf,IAAI,OAAK,IAAI,EAAE,EAAC;wBACZ,KAAI,CAAC,kBAAkB,EAAE,CAAC;wBAC1B,MAAM,CAAC,EAAE,CAAC,aAAa,CAAC,iBAAiB,EAAE,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAI,CAAC,EAAE,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC,CAAA;qBAC/G;iBACJ;YACL,CAAC,EAAC,IAAI,CAAC,CAAA;SACV;IACL,CAAC;IAEO,yCAAkB,GAA1B;QACI,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,WAAW,CAAC,kBAAkB,CAAC,CAAC;QACnD,IAAI,IAAI,CAAC,cAAc,EAAC;YACpB,aAAa,CAAC,IAAI,CAAC,cAAc,CAAC,CAAA;YAClC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;SAC9B;IACL,CAAC;IAKM,4CAAqB,GAA5B,UAA6B,IAAI;QAAjC,iBAYC;QAXG,IAAI,SAAS,GAAG;YACZ,UAAU,CAAC;gBACP,KAAI,CAAC,eAAe,EAAE,CAAC;YAC3B,CAAC,EAAE,IAAI,CAAC,CAAC;QACb,CAAC,CAAA;QACD,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,EAAE;YACtB,MAAM,CAAC,EAAE,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,EAAE,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;SACrF;aAAM;YACH,MAAM,CAAC,EAAE,CAAC,aAAa,CAAC,UAAU,EAAE,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;SACnF;QACD,EAAE,CAAC,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC,CAAC,CAAA;IACjD,CAAC;IAEM,uCAAgB,GAAvB,UAAwB,IAAI;QACzB,mDAAmD;QAClD,EAAE,CAAC,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC,CAAC,CAAA;QAC7C,6DAA6D;QAC7D,IAAI,CAAC,gBAAgB,CAAC,sBAAK,CAAC,gBAAgB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC,CAAA;QACnE,IAAG,CAAC,IAAI,IAAI,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,EAC9C;YACI,MAAM,CAAC,EAAE,CAAC,OAAO,CAAC,eAAe,CAAC,CAAA;YAClC,OAAM;SAET;QAED,MAAM,CAAC,eAAe,CAAC,gBAAgB,GAAG,IAAI,CAAA;QAC9C,IAAI,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAA;QAC5C,MAAM;QACN,IAAI,YAAY,GAAG,IAAI,CAAC,YAAY,CAAA,CAAC,MAAM;QAC3C,IAAI,YAAY,IAAI,IAAI,IAAI,YAAY,IAAI,EAAE,EAAE;YAC5C,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,GAAG,YAAY,CAAA;SACjD;QAED,OAAO;QACP,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,GAAG,gBAAgB,CAAA;QAEpD,IAAG,IAAI,CAAC,SAAS,EAAG,cAAc;SAClC;YACI,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,wBAAc,CAAC,cAAc,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,CAAC;YACjF,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAA;SACvD;QAED,MAAM,CAAC,OAAO,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;QAE1C,MAAM,CAAC,UAAU,CAAC,gBAAgB,CAAC,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,wBAAc,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;QAEtG,QAAQ;QACR,IAAI,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,EAAE;YACnC,OAAM;SACT;QACD,IAAI,iBAAiB,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAA;QAC7C,IAAI,qBAAqB,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAA;QAErD,IAAI,MAAM,GAAG,qBAAqB,CAAA;QAClC,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,IAAI,CAAC,EAAE;YAC/B,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,wBAAwB,CAAC,iBAAiB,CAAC,CAAA;SACtE;QACD,MAAM,CAAC,sBAAsB,CAAC,iBAAiB,GAAG,MAAM,CAAA;QACxD,UAAU;QACV,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAA;IAClC,CAAC;IAEO,6CAAsB,GAA9B,UAA+B,IAAI;QAC/B,IAAI,aAAa,GAAG,IAAI,CAAC,aAAa,CAAA,CAAC,QAAQ;QAC/C,QAAQ;QACR,IAAI,IAAI,CAAC,0BAA0B,CAAC,aAAa,CAAC,EAAE;YAChD,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,CAAC;YACxC,OAAO,IAAI,CAAA;SACd;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;IAEO,0CAAmB,GAA3B,UAA4B,IAAI;QAC5B,IAAI,YAAY,GAAG,IAAI,CAAC,YAAY,CAAA,CAAC,SAAS;QAC9C,IAAI,eAAe,GAAG,EAAE,CAAA;QACxB,IAAI,YAAY,GAAG,EAAE,CAAA;QACrB,IAAI,cAAc,GAAG,EAAE,CAAC;QACxB,IAAI,YAAY,IAAI,YAAY,CAAC,OAAO,EAAG;YACvC,YAAY,GAAG,YAAY,CAAC,OAAO,CAAA;YACnC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAA;YACtC,IAAI,YAAY,CAAC,KAAK,EAAG;gBACrB,UAAU;gBACV,IAAI,iBAAiB,GAAG,YAAY,CAAC,GAAG,CAAA;gBACxC,IAAI,qBAAqB,GAAG,YAAY,CAAC,OAAO,CAAA;gBAChD,cAAc,GAAG,YAAY,CAAC,KAAK,CAAA;gBACnC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,qBAAqB,GAAG,qBAAqB,CAAA;gBACjE,IAAG,CAAC,qBAAqB,IAAI,qBAAqB,CAAC,MAAM,IAAI,CAAC,EAC9D;oBACI,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,qBAAqB,GAAG,iBAAiB,CAAA;iBAChE;gBAED,IAAI,SAAS,GAAG,CAAC,CAAC;gBAClB,IAAI,iBAAiB,GAAG,EAAE,CAAC,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAA;gBACxE,IAAI,iBAAiB,IAAI,IAAI,IAAI,iBAAiB,IAAI,EAAE,EAAC;oBACrD,IAAI,iBAAiB,GAAG,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,wBAAc,CAAC,cAAc,CAAC,CAAA;oBACvF,IAAI,iBAAiB,EAAC;wBAClB,IAAI,WAAW,GAAG,MAAM,CAAC,OAAO,CAAC,gBAAgB,CAAC,iBAAiB,EAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAA;wBAC9G,IAAI,WAAW,EAAC;4BACZ,iBAAiB,GAAG,iBAAiB,CAAA;yBACxC;6BAAK;4BACF,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,wBAAc,CAAC,cAAc,EAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAA;4BACzG,SAAS,GAAG,CAAC,CAAA;yBAChB;qBACJ;oBACD,IAAI,GAAG,GAAI,MAAM,CAAC,iBAAiB,CAAC,CAAA;oBACpC,IAAI,UAAU,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAA;oBACjE,IAAI,GAAG,IAAI,UAAU,GAAG,CAAC,EAAC;wBACtB,MAAM,CAAC,KAAK,CAAC,0CAA0C,GAAG,iBAAiB,CAAC,CAAA;wBAC5E,SAAS,GAAG,GAAG,GAAG,UAAU,CAAA;qBAC/B;iBACJ;gBACD,eAAe,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,qBAAqB,CAAC,SAAS,CAAC,CAAA;gBACtE,IAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EACvG;oBACI,IAAG,SAAS,GAAC,CAAC,EACd;wBACI,MAAM,CAAC,sBAAsB,CAAC,WAAW,EAAE,CAAA;qBAC9C;oBACD,eAAe,GAAG,MAAM,CAAC,sBAAsB,CAAC,YAAY,CAAA;iBAE/D;gBAED,MAAM,CAAC,KAAK,CAAC,wCAAwC,GAAG,eAAe,CAAC,CAAA;aAC3E;SACJ;QACD,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,gBAAgB,GAAG,eAAe,CAAA;QACtD,MAAM,CAAC,gBAAgB,CAAC,cAAc,GAAG,YAAY,CAAA;QACrD,MAAM,CAAC,gBAAgB,CAAC,cAAc,GAAG,cAAc,CAAC;QACxD,IAAI,cAAc,GAAsB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,2BAAiB,CAAC,IAAI,CAAC,CAAA;QACrF,cAAc,CAAC,SAAS,CAAC,eAAe,EAAE,YAAY,EAAC,cAAc,CAAC,CAAC;IAC/E,CAAC;IAGO,0CAAmB,GAA3B,UAA4B,aAAa;QAAzC,iBAiBC;QAhBG,IAAI,qBAAqB,GAAG,aAAa,CAAC,OAAO,CAAA,CAAC,QAAQ;QAC1D,IAAI,qBAAqB,GAAG,aAAa,CAAC,OAAO,CAAA,CAAC,SAAS;QAC3D,IAAI,uBAAuB,GAAG,aAAa,CAAC,SAAS,CAAA,CAAC,QAAQ;QAC9D,IAAI,OAAO,GAAG,uBAAuB,CAAA;QACrC,IAAI,oBAAoB,GAAG;YACvB,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;QAClF,CAAC,CAAA;QACD,IAAI,mBAAmB,GAAG;YACtB,IAAI,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAA;YACzC,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACxB,CAAC,CAAA;QACD,IAAI,aAAa,GAAG;YAChB,KAAI,CAAC,eAAe,EAAE,CAAA;QAC1B,CAAC,CAAA;QACD,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,mBAAmB,EAAE,qBAAqB,EAAE,OAAO,EAAE,oBAAoB,EAAE,mBAAmB,EAAE,aAAa,CAAC,CAAA;IAEjI,CAAC;IAGO,iDAA0B,GAAlC,UAAmC,aAAa;QAC5C,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,CAAA;QAErD,IAAI,aAAa,IAAI,aAAa,CAAC,SAAS,IAAI,IAAI,IAAI,aAAa,CAAC,SAAS,GAAG,CAAC,EAAE;YACjF,IAAI,SAAS,GAAG,aAAa,CAAC,SAAS,CAAA;YACvC,IAAI,WAAW,GAAG,SAAS,GAAG,OAAO,CAAA;YACrC,IAAI,WAAW,GAAG,CAAC,EAAE;gBACjB,OAAO,IAAI,CAAC;aACf;SACJ;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;IAEO,mCAAY,GAApB,UAAqB,GAAG;QACpB,IAAG,CAAC,GAAG;YAAE,OAAO;QAChB,IAAI,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC7B,OAAO,GAAG,CAAC;IACf,CAAC;IAED,+BAAQ,GAAR;IAEA,CAAC;IA7rBM,iBAAI,GAAG,cAAc,CAAC;IA8rBjC,mBAAC;CA/rBD,AA+rBC,CA/rByC,OAAO,CAAC,KAAK,GA+rBtD;kBA/rBoB,YAAY","file":"","sourceRoot":"/","sourcesContent":["import Const from './LoadingConst'\r\nimport HallStorageKey from '../../hallcommon/const/HallStorageKey';\r\nimport { NetLogin, NetCheckVersion } from '../net/hall/NetEvent';\r\nimport LoadingFacade from './LoadingFacade';\r\nimport { SceneType } from '../scene/SceneManager';\r\nimport AppHelper from '../tool/AppHelper';\r\nimport { ReportTool } from '../tool/ReportTool';\r\nimport LoginModel from '../../hallcommon/model/LoginModel';\r\nimport LoadingConst from './LoadingConst';\r\nimport AppHotUpdateProxy from './AppHotUpdateProxy';\r\n\r\n\r\n//加载资源之前的操作\r\nexport default class PreLoadProxy extends puremvc.Proxy {\r\n    static NAME = \"PreLoadProxy\";\r\n\r\n    private urlIndex = 0;\r\n    manifestNativeUrl: any\r\n    private _startTime = -1\r\n    /**data速度上报 */\r\n    private reportParam : any= {}\r\n\r\n    constructor(manifest) {\r\n        super();\r\n        this.manifestNativeUrl = manifest.nativeUrl;\r\n        this.proxyName = PreLoadProxy.NAME;\r\n    }\r\n\r\n    onRegister() {\r\n        //初始化APP 相关信息\r\n        Global.NativeEvent.onInit();\r\n        Global.NativeEvent.getNativeParams(this.onloadPackChannelInfo.bind(this))\r\n\r\n        //读取配置\r\n\r\n        //上述操作如果卡UI进程需要用异步来操作\r\n        Global.NativeJSBBridge.init();\r\n        this.initDataUrls();\r\n        //getNativeParams是同步的  不需要等待\r\n        AppHelper.init();\r\n        Global.DNS.init();\r\n        //可异步也可同步\r\n        Global.AppDun.init();\r\n        this.requestAppUrl();\r\n        //Global.ReportTool.ReportDevice(ReportTool.REPORT_TYPE_OPEN);\r\n       \r\n    }\r\n\r\n    private onloadPackChannelInfo() {\r\n        LoadingFacade.Instance.sendNotification(Const.UPDATE_LOADING_VERSION)\r\n\r\n        let packCh = Global.Setting.SystemInfo.packChannel;\r\n        if (packCh != null && packCh != \"\" && !isNaN(Number(packCh))) {\r\n            Global.Setting.ChannelInfo.packageChannel = Number(packCh);\r\n        }\r\n    }\r\n\r\n    private initDataUrls() {\r\n        if(CC_PREVIEW || cc.sys.isBrowser)\r\n        {\r\n            Global.Setting.dataUrlsList = []\r\n            let appdataUrlArray = Global.Setting.Urls.dataUrls;\r\n            // let dataName = Global.Setting.getCfgDataName();\r\n            let dataName = \"绿色大厅\";\r\n            if (appdataUrlArray && appdataUrlArray.length > 0) {\r\n                for (let i = 0; i < appdataUrlArray.length; i++) {\r\n                    let constUrl: string = appdataUrlArray[i]\r\n                    let constDataUrl = constUrl;\r\n                    constDataUrl = constDataUrl + cc.js.formatStr(\"/%s?\",Global.Toolkit.md5(dataName))\r\n                    Logger.error(\"constDataUrl = \" + constDataUrl)\r\n                    Global.Setting.dataUrlsList.push(constDataUrl);\r\n                }\r\n            }\r\n            return\r\n        }\r\n        Global.Setting.dataUrlsList = [];\r\n        let dataUrls = Global.Setting.loadDataUrls();\r\n        if(dataUrls && dataUrls.length > 0)\r\n        {\r\n            for (let i = 0; i < dataUrls.length; i++) {\r\n                let dUrl = this.repackUrl(dataUrls[i]);\r\n                Global.Setting.dataUrlsList.push(dUrl);\r\n            }\r\n        }\r\n        else\r\n        {\r\n            //取不到本地缓存就是用包里面的dataUrls\r\n            dataUrls = Global.Setting.SystemInfo.appConstUrlArray;\r\n            for (let i = 0; i < dataUrls.length; i++) {\r\n                let dUrl = this.repackUrl(dataUrls[i]);\r\n                Global.Setting.dataUrlsList.push(dUrl);\r\n            }   \r\n        }\r\n    }\r\n\r\n   \r\n    private repackUrl(url:string)\r\n    {\r\n        //如果配置了问号 则直接用配置下发的   \r\n        if(url.indexOf(\"?\") > -1)\r\n        {\r\n            if(!url.startsWith(\"http\"))\r\n                url = \"https://\" + url;\r\n            return url;\r\n        }\r\n        let protocal = \"https:\"\r\n        let protocalArr = url.split(\"//\");\r\n        if(protocalArr.length > 1)\r\n        {\r\n            protocal = protocalArr[0];\r\n            url = protocalArr[1];\r\n        }\r\n        let host = Global.UrlUtil.getHostFromUrl(url);\r\n        let dataName = Global.Setting.SystemInfo.appID\r\n        //兼容个别老版本  20000版本强更后 可删除\r\n        if(dataName == null || dataName == \"\")\r\n        {\r\n            dataName = Global.Setting.getConstUrlDataName();\r\n        }\r\n        let subPlatform = Global.Setting.SystemInfo.subPlatformID\r\n        let dataStr = \"\"\r\n        if(subPlatform == \"intest\") dataStr = dataName + (subPlatform ? \"_\" + subPlatform : \"\");\r\n        else dataStr = subPlatform;\r\n        dataStr = Global.Toolkit.md5(dataStr)\r\n        return protocal + \"//\" + host + \"/c/\" + dataStr + \"?\";\r\n    }\r\n\r\n\r\n   \r\n\r\n    //请求appdata 数据\r\n    requestAppUrl() {\r\n        //关掉闪屏页\r\n        Global.NativeEvent.hideSplashView();\r\n        this.sendNotification(Const.SHOW_CHECK_LABEL, { parm: \"正在获取配置数据...\" })\r\n        if(CC_PREVIEW)\r\n        {\r\n            this.reqServerAppConfig();\r\n            return\r\n        }\r\n        //加载本地缓存配置\r\n        if (!this.loadLocalAppConfig()) {\r\n            this.reqServerAppConfig();\r\n        }\r\n        else {\r\n            this.reqVerifyServerAppConfig();\r\n        }\r\n    }\r\n\r\n    //本地缓存的服务器配置数据\r\n    private cachedServerContent;\r\n\r\n    //本地没有缓存，请求服务器配置\r\n    private reqServerAppConfig() {\r\n        this._startTime = new Date().valueOf();\r\n        let url = this.getConfigUrl();\r\n        let uid = Number(Global.Setting.storage.get(HallStorageKey.Uid)) || 0;\r\n        url += \"uid=\" + uid + \"&appver=\" + Global.Setting.SystemInfo.appVersion + \"&os=\" + Global.Toolkit.getOsType() + \"&n=\" + Date.now()\r\n        Global.Setting.dataUrlIndex = this.urlIndex;\r\n        url = Global.UrlUtil.refreshSuffixOperTime(url)\r\n        url = Global.UrlUtil.refreshSuffixRetryTime(url, this.urlIndex);\r\n        Global.Setting.curDataUrl = url;\r\n        //key, maxTime, value = \"\", minTime = 1,enableMask = true\r\n        Global.Event.event(GlobalEvent.SHOW_NET_WAITING,\"reqServerAppConfig\",15,\"\",1,false)\r\n        Logger.error(`发送了消息${url}=========`);\r\n        Global.Http.getWithRetry(url, this.handleAppConfig.bind(this), this.handleCfgReqeustError.bind(this),null,0,false);\r\n    }\r\n\r\n    //本地有缓存，先进游戏，再和服务器数据做校验\r\n    private reqVerifyServerAppConfig() {\r\n        this._startTime = new Date().valueOf();\r\n        let url = this.getConfigUrl();\r\n        let uid = Number(Global.Setting.storage.get(HallStorageKey.Uid)) || 0;\r\n        url += \"uid=\" + uid + \"&appver=\" + Global.Setting.SystemInfo.appVersion + \"&os=\" + Global.Toolkit.getOsType() + \"&n=\" + Date.now()\r\n        url = Global.UrlUtil.refreshSuffixOperTime(url)\r\n        url = Global.UrlUtil.refreshSuffixRetryTime(url, this.urlIndex);\r\n        Global.Setting.dataUrlIndex = this.urlIndex;\r\n        Global.Setting.curDataUrl = url;\r\n        Global.Http.get(url, this.verifyServerCfg.bind(this), this.verifyServerCfgError.bind(this));\r\n    }\r\n\r\n    private verifyServerCfgError() {\r\n        this.urlIndex++;\r\n        if (this.urlIndex < Global.Setting.dataUrlsList.length) {\r\n            Logger.error(\"use back up verify\")\r\n            this.reqVerifyServerAppConfig();\r\n        }\r\n    }\r\n\r\n    private handleCfgReqeustError() {\r\n        this.reportParam = {}\r\n        Global.Event.event(GlobalEvent.HIDE_NET_WAITING,\"reqServerAppConfig\")\r\n        this.reportDataUrlSpeed(0)\r\n        \r\n        this.urlIndex++;\r\n        if (this.urlIndex < Global.Setting.dataUrlsList.length) {\r\n            this.reqServerAppConfig();\r\n        }\r\n        else {\r\n            this.urlIndex = 0;\r\n            Global.UI.showSingleBox(\"配置文件拉取失败，请检查网络连接\", this.reqServerAppConfig.bind(this), this.reqServerAppConfig.bind(this));\r\n        }\r\n    }\r\n    \r\n\r\n\r\n\r\n    /**\r\n     * 加载本地缓存配置，并且解析\r\n     * @private\r\n     * @returns\r\n     */\r\n    private loadLocalAppConfig() {\r\n        let content = Global.Setting.storage.get(HallStorageKey.AppConfigContent);\r\n        if (content == null || content == \"\")\r\n            return false;\r\n        this.cachedServerContent = content;\r\n        this._startTime = -1\r\n        this.handleAppConfig(content, false);\r\n        Logger.log(\"加载本地缓存直接进游戏\")\r\n        return true;\r\n    }\r\n\r\n\r\n    //获取appconfig主地址\r\n    private getConfigUrl() {\r\n        //默认配置地址\r\n\r\n        let url = Global.Setting.dataUrlsList[this.urlIndex];\r\n        if (url == null) {\r\n            url = Global.Setting.dataUrlsList[0]\r\n            this.urlIndex = 0;\r\n        }\r\n        return url;\r\n    }\r\n\r\n\r\n    //解析AppConfig 进入热更流程\r\n    private handleAppConfig(msg, saveStoreage = true) {\r\n        Global.Event.event(GlobalEvent.HIDE_NET_WAITING,\"reqServerAppConfig\")\r\n        \r\n        this.reportParam = {}\r\n        try {\r\n            let decodeMsg = Global.AESUtil.decodeMsg(msg);\r\n            let serverCfg = JSON.parse(decodeMsg);\r\n            \r\n           let reportUrl = this.getReportUrl(serverCfg.dataUrls);\r\n            Global.Setting.storage.set(HallStorageKey.ReportUrl, JSON.stringify(reportUrl));\r\n            //data里面没有配置routes 这份data算失效 需要寻找下一个data\r\n            if (serverCfg.routes == null || serverCfg.routes.length == null || serverCfg.routes.length == 0) {\r\n                this.handleCfgReqeustError();\r\n                Logger.error(\"没有配置routes\");\r\n                Global.ReportTool.ReportClientError(\"AppConfigError\",\r\n                    {\r\n                        des: \"AppConfig\",\r\n                        content: msg,\r\n                        fromLocal: !saveStoreage\r\n                    })\r\n                return;\r\n            }\r\n            Logger.log(\"-------appconfig------\", decodeMsg)\r\n            Logger.error(`收到服务器的回复 =`+ JSON.stringify(serverCfg));\r\n            Global.Setting.parseServerInfo(serverCfg);\r\n\r\n            this.sendNotification(Const.UPDATE_APP_INFO);\r\n        }\r\n        catch (e) {\r\n            //解析文件出错可能是域名被污染或者劫持 需要替换下一个url\r\n            this.handleCfgReqeustError();\r\n            Logger.error(\"加载appCfg失败\", msg);\r\n            Global.ReportTool.ReportClientError(\"AppConfigError\",\r\n                {\r\n                    des: \"AppConfig\",\r\n                    content: msg,\r\n                    fromLocal: !saveStoreage\r\n                })\r\n            // Global.UI.showSingleBox(\"配置文件拉取异常，请检查网络连接\", this.reqServerAppConfig.bind(this), this.reqServerAppConfig.bind(this));\r\n            return;\r\n        }\r\n\r\n        if (saveStoreage) {\r\n            Global.Setting.storage.set(HallStorageKey.AppConfigContent, msg);\r\n        }\r\n\r\n        Global.Setting.dataUrlIndex = this.urlIndex;\r\n        Global.Setting.curDataUrl = this.getConfigUrl();\r\n        // 优先检测剪贴板\r\n        Global.ChannelUtil.decodeCliptext()\r\n        Global.ChannelUtil.getUuid()\r\n        Global.ChannelUtil.getEntryType()\r\n        Global.ChannelUtil.getSignType()\r\n        Global.ChannelUtil.initOpeninstall(); \r\n        //上报上次的日志\r\n        Global.ReportTool.reportRequestRecord();\r\n        //测试上报上次登录日志\r\n        Global.ReportTool.ReportLastLoginLogCache();\r\n\r\n        this.reportDataUrlSpeed(1)\r\n        \r\n\r\n        let reqCheckVersionFunc = () => {\r\n            //设置httpdns\r\n            Global.DNS.requestHosts(Global.Setting.Urls.globalRoutes.getRouteArr(), () => {\r\n                //获取热更地址\r\n                if (cc.sys.isNative) {\r\n                    //第一安装时  需要获取到对应渠道信息信息\r\n                    if (Global.Setting.SystemInfo.firstInstallStatus) {\r\n                        setTimeout(() => {\r\n                            this.reqCheckVersion()\r\n                        }, 500);\r\n                    }\r\n                    else\r\n                        this.reqCheckVersion()\r\n                } else {\r\n                    Global.SceneManager.goToLogin();\r\n                }\r\n            })\r\n        }\r\n        let errorReStartTimes = cc.sys.localStorage.getItem(\"errorReStartTimes\")\r\n        if (errorReStartTimes != null && errorReStartTimes != \"\"){\r\n            let num  = Number(errorReStartTimes)\r\n            if (num && (num % 3 == 0)){\r\n                Logger.error(\"errorReStartTimes = \" + errorReStartTimes + \" 网络异常，请重新加载 \")\r\n                    let callbackFunc = ()=>{\r\n                        reqCheckVersionFunc();\r\n                    }\r\n                    Global.UI.show(\"WndGameRestoreUI\",callbackFunc,callbackFunc)\r\n            }else {\r\n                Logger.error(\"errorReStartTimes = num % 3 != 0 \" + errorReStartTimes)\r\n                reqCheckVersionFunc();\r\n            }\r\n        }else {\r\n            Logger.error(\"errorReStartTimes = null  \")\r\n            reqCheckVersionFunc()\r\n        }\r\n\r\n        if(CC_PREVIEW)//防止不小心打开来更新出去出错\r\n        {\r\n            //this.reqCheckVersion()\r\n        }\r\n\r\n    }\r\n\r\n    //验证服务器配置与本地配置\r\n    private verifyServerCfg(msg) {\r\n        //验证成功，不做操作\r\n        // if (Global.Toolkit.md5(msg) == Global.Toolkit.md5(this.cachedServerContent))\r\n        //     return;\r\n\r\n        //@todo提示服务器更新，返回到loading界面\r\n        // this.handleAppConfig(msg);\r\n        // Logger.error(\"verifyServerCfg msg = \" + msg)\r\n        // Logger.error(\"verifyServerCfg cachedServerContent = \" + this.cachedServerContent)\r\n        \r\n        let result = this.checkServerCfg(msg, this.cachedServerContent);\r\n        Logger.error(\"verifyServerCfg checkServerCfg result = \" + result)\r\n       \r\n        if (result == 4) {\r\n            //服务器数据验证不通过  需要切换继续请求\r\n            this.verifyServerCfgError();\r\n            return;\r\n        }\r\n        this.reportDataUrlSpeed(1)\r\n        Global.Setting.dataUrlIndex = this.urlIndex;\r\n        Global.Setting.curDataUrl = this.getConfigUrl();\r\n        if (result == 0)\r\n            return;\r\n        Logger.log(\"服务器配置更新\")\r\n        Global.Setting.storage.set(HallStorageKey.AppConfigContent, msg);\r\n        let decodeMsg = Global.AESUtil.decodeMsg(msg);\r\n        let serverCfg = JSON.parse(decodeMsg);\r\n        Logger.log(\"-------appconfig------\", decodeMsg)\r\n        Global.Setting.parseServerInfo(serverCfg);\r\n\r\n    }\r\n\r\n    reportDataUrlSpeed(type)\r\n    {\r\n        let endTime = new Date().valueOf();\r\n        let time = endTime - this._startTime \r\n        if(this._startTime !== -1)\r\n        {\r\n            this.reportParam = { \"time\": time,  \"data_url\": this.getConfigUrl(),\"reportType\":type}\r\n            let reportKey = ReportTool.REPORT_TYPE_DATA_ROUTE\r\n            Global.ReportTool.ReportPublicClientLog(reportKey, this.reportParam, false)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    //0  不做操作  1 切回到登录界面  2 重启游戏  3不操作 4 data数据有问题 需要切换下一个 5 \r\n    private checkServerCfg(svrMsg, localMsg) {\r\n        if (Global.Toolkit.md5(svrMsg) == Global.Toolkit.md5(localMsg))\r\n            return 0;\r\n        let serCfg = this.safeDecode(svrMsg);\r\n        if (serCfg == null)\r\n            return 4;\r\n        let localCfg = this.safeDecode(localMsg);\r\n        if (localCfg == null)\r\n            return 2;\r\n\r\n        //serverRoutes变化需要重启\r\n        try {\r\n            let localRoutesStr = JSON.stringify(localCfg.routes);\r\n            let svrRoutesStr = JSON.stringify(serCfg.routes);\r\n            if (Global.Toolkit.md5(localRoutesStr) != Global.Toolkit.md5(svrRoutesStr))\r\n                return 5;\r\n        }\r\n        catch (e) {\r\n            return 2;\r\n        }\r\n\r\n        return 3;\r\n\r\n    }\r\n\r\n\r\n    private safeDecode(cfg) {\r\n        let serverCfg = null;\r\n        try {\r\n            let decodeMsg = Global.AESUtil.decodeMsg(cfg);\r\n            serverCfg = JSON.parse(decodeMsg);\r\n            //routes 为空 验证不通过\r\n            if (serverCfg.routes == null || !serverCfg.routes.length || serverCfg.routes.length == 0) {\r\n                serverCfg = null;\r\n                Logger.error(\"data routes is null \");\r\n            }\r\n        }\r\n        catch (e) {\r\n            Logger.error(\"load app error\", cfg);\r\n            serverCfg = null;\r\n        }\r\n        return serverCfg;\r\n    }\r\n\r\n\r\n    // 接口 CheckEdition 版本信息\r\n    /*请求\r\n    接口 CheckEdition 版本信息\r\n请求\r\n{\r\n\tAppid      int32  `json:\"appid\"`\r\n\tEdition    string `json:\"edition\"` //版本号 \r\n\tApp  \t   string `json:\"app\"` //hl888\r\n\tPack       int32 `json:\"pack\"` //有渠道号就带 \r\n\tUid        uint64 `json:\"uid\"` //uid //用户id  必须带\r\n\tAppSource  string `json:\"app_source\"` //app用的资源热更源代号  \r\n\t\r\n\t\r\n\tDevice     ClientDevInfo `json:\"device\"` 必须带\r\n}\r\nClientDevInfo 结构\r\ntype ClientDevInfo struct {\r\n\tDeviceId   string `json:\"device_id\"`   //设备ID   必须带\r\n\tPhoneModel string `json:\"phone_model\"` //手机型号 iphone6s  必须带\r\n\tOsType     int32  `json:\"os_type\"`     //1 web 2 aos 3 ios 必须带\r\n\r\n\tOsVersion string `json:\"os_version\"` //系统版本号 必须带\r\n\r\n\tAppVersion string `json:\"app_version\"` //客户端版本号 必须带\r\n\r\n}\r\n    \r\n    返回\r\n    {\r\n        \"_mod\": \"root\",\r\n        \"_func\": \"checkversion\",\r\n        \"_param\": {\r\n            \"force_update_url\": \"https://www.baidu.com\", // 强更更新地址\r\n            \"hall_update_url\": \"https://www.baidu.com\", // 大厅更新地址\r\n            \"force_version\": \"1.0.1\", // 强更版本号\r\n            \"hall_version\": \"1.0.5\" // 大厅版本号\r\n        }\r\n    } */\r\n    //请求检查版本更新\r\n    public reqCheckVersion() {\r\n       \r\n        let param: any = {};\r\n        param.appid = Global.Setting.appId;\r\n        Global.Setting.checkVersionApp = param.appid\r\n        let megeServerFlag = Global.Toolkit.checkMegeServer()\r\n        if(megeServerFlag)\r\n        {\r\n            param.old_app_id = Number(Global.Setting.SystemInfo.appID)\r\n        }\r\n        param.edition =  Global.HotUpdateManager.getNativeHotUpdateVersion(\"hall\",true,this.manifestNativeUrl) \r\n        // param.app = Global.Setting.SystemInfo.vendorChannel;\r\n        param.pack = Global.Setting.ChannelInfo.getRegistChannel();\r\n        param.uid = Number(Global.Setting.storage.get(HallStorageKey.Uid)) || 0;\r\n        param.app_source = Global.Setting.SystemInfo.appConstUrl;\r\n        param.app_independent_tag = Global.Setting.SystemInfo.packageTag;\r\n        param.hall_skin = Global.Setting.SystemInfo.hallSkin;\r\n        param.device = Global.Toolkit.genDeviceInfo();\r\n        Global.Toolkit.getFirstOpenTime();\r\n\r\n        Logger.log(\"begin check version\")\r\n        this.sendNotification(Const.SHOW_CHECK_LABEL, { parm: \"正在获取热更配置...\" })\r\n        let startRequestCheckversion = ()=>{\r\n            Global.HallServer.sendCheckVersion(NetCheckVersion.checkversion, param, this.respCheckVersion.bind(this), this.respCheckVersionError.bind(this), true);\r\n            Global.ReportTool.ReportDevice(ReportTool.REPORT_TYPE_START_CHECKVERSION);\r\n        }\r\n        //判断当前是否有可用线路\r\n        this.clearIntervalTimer();\r\n        let globalRoutes = Global.Setting.Urls.globalRoutes\r\n        if (globalRoutes && globalRoutes.getCurRoute()){\r\n            Logger.error(\"有可用线路\")\r\n            startRequestCheckversion()\r\n        }else {\r\n            Logger.error(\"无可用线路\")\r\n            //无可用线路并且有盾但是还未初始化成功则等待盾初始化成功再请求\r\n            let times = 0;\r\n            Global.Event.event(GlobalEvent.SHOW_NET_WAITING, \"startRequestCheckversion\",15,\"\",1,false)\r\n            this._intervalTimer = setInterval(()=>{\r\n                times ++;\r\n                let globalRoutes = Global.Setting.Urls.globalRoutes\r\n                if (globalRoutes && globalRoutes.getCurRoute()){\r\n                    this.clearIntervalTimer();\r\n                    startRequestCheckversion()\r\n                }else {\r\n                    //超过10s 则进行弹框提示\r\n                    if (times >= 10){\r\n                        this.clearIntervalTimer();\r\n                        Global.UI.showSingleBox(\"网络连接超时，请检查后重试-D\", this.reqCheckVersion.bind(this), this.reqCheckVersion.bind(this))\r\n                    }\r\n                }\r\n            },1000)\r\n        }\r\n    }\r\n\r\n    private clearIntervalTimer(){\r\n        Global.Event.event(GlobalEvent.FORCE_HIDE_WAITING);\r\n        if (this._intervalTimer){\r\n            clearInterval(this._intervalTimer)\r\n            this._intervalTimer = null;\r\n        }\r\n    }\r\n\r\n    private _intervalTimer = null\r\n\r\n\r\n    public respCheckVersionError(data) {\r\n        let checkFunc = () => {\r\n            setTimeout(() => {\r\n                this.reqCheckVersion();\r\n            }, 1000);\r\n        }\r\n        if (data && data._errstr) {\r\n            Global.UI.showSingleBox(data._errstr, checkFunc.bind(this), checkFunc.bind(this));\r\n        } else {\r\n            Global.UI.showSingleBox(\"检查版本更新失败\", checkFunc.bind(this), checkFunc.bind(this));\r\n        }\r\n        cc.sys.localStorage.setItem(\"needRestart\", 2)\r\n    }\r\n\r\n    public respCheckVersion(data) {\r\n       // console.log(\"这是当前的检查版本的回复\",JSON.stringify(data))\r\n        cc.sys.localStorage.setItem(\"needRestart\", 2)\r\n        //        Global.Event.event(GlobalEvent.FORCE_HIDE_WAITING);\r\n        this.sendNotification(Const.SHOW_CHECK_LABEL, { parm: \"检查更新中...\" })\r\n        if(!data || Global.Toolkit.isEmptyObject(data))\r\n        {\r\n            Global.UI.fastTip(\"服务器维护中，请稍后再试!\")\r\n            return\r\n\r\n        }\r\n      \r\n        Global.AppUpdateHelper.checkVersionData = data\r\n        let force_update_url = data.force_update_url\r\n        //新增字段\r\n        let official_url = data.official_url //官网地址\r\n        if (official_url != null && official_url != \"\") {\r\n            Global.Setting.Urls.downLoadUrl = official_url\r\n        }\r\n\r\n        //更新Url\r\n        Global.Setting.Urls.forceUpateUrl = force_update_url\r\n\r\n        if(data.server_id ) //重新使用服务器生成的id\r\n        {\r\n            Global.Setting.storage.set(HallStorageKey.ServerDeviceId, data.server_id.trim());\r\n            Global.Setting.SystemInfo.server_id = data.server_id\r\n        }\r\n           \r\n        Global.Setting.parseCheckVersionCfg(data);\r\n\r\n        Global.ReportTool.ParseDebugConfig(data, Number(Global.Setting.storage.get(HallStorageKey.Uid)) || 0);\r\n            \r\n        //判断维护公告\r\n        if (this.startGameMaintainLogic(data)) {\r\n            return\r\n        }\r\n        let app_hit_hall_urls = data.app_hit_hall.url\r\n        let app_hit_hall_urls_new = data.app_hit_hall.new_url\r\n           \r\n        let routes = app_hit_hall_urls_new\r\n        if (!routes || routes.length == 0) {\r\n            routes = Global.UrlUtil.transferUrlArrayToRoutes(app_hit_hall_urls) \r\n        }\r\n        Global.DunHotUpdateUrlSetting.hotUpdateRouteCfg = routes\r\n        //热更后再判断强更\r\n        this.startHotUpdateLogic(data)\r\n    }\r\n\r\n    private startGameMaintainLogic(data) {\r\n        let update_notice = data.update_notice //大厅维护公告\r\n        //检测是否维护\r\n        if (this.checkIsShowUpdateNoticeWnd(update_notice)) {\r\n            this.showUpdateNoticeWnd(update_notice);\r\n            return true\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private startHotUpdateLogic(data) {\r\n        let app_hit_hall = data.app_hit_hall //大厅新版本热更\r\n        let hall_update_url = \"\"\r\n        let hall_version = \"\"\r\n        let hallUpdatePath = \"\";\r\n        if (app_hit_hall && app_hit_hall.version ) {\r\n            hall_version = app_hit_hall.version\r\n            hall_update_url = data.hall_update_url\r\n            if (app_hit_hall.param ) {\r\n                //进行热更线路选择\r\n                let app_hit_hall_urls = app_hit_hall.url\r\n                let app_hit_hall_urls_new = app_hit_hall.new_url\r\n                hallUpdatePath = app_hit_hall.param\r\n                Global.Setting.Urls.hallHotUpdateUrlArray = app_hit_hall_urls_new\r\n                if(!app_hit_hall_urls_new || app_hit_hall_urls_new.length == 0)\r\n                {\r\n                    Global.Setting.Urls.hallHotUpdateUrlArray = app_hit_hall_urls\r\n                }\r\n               \r\n                let url_index = 0;\r\n                let errorReStartTimes = cc.sys.localStorage.getItem(\"errorReStartTimes\")\r\n                if (errorReStartTimes != null && errorReStartTimes != \"\"){\r\n                    let storage_hall_urls = Global.Setting.storage.getObject(HallStorageKey.HotUpdateHosts)\r\n                    if (storage_hall_urls){\r\n                        let isSameArray = Global.Toolkit.compareArraySort(storage_hall_urls,Global.Setting.Urls.hallHotUpdateUrlArray)\r\n                        if (isSameArray){\r\n                            app_hit_hall_urls = storage_hall_urls\r\n                        }else {\r\n                            Global.Setting.storage.setObject(HallStorageKey.HotUpdateHosts,Global.Setting.Urls.hallHotUpdateUrlArray)\r\n                            url_index = 0\r\n                        }\r\n                    }\r\n                    let num  = Number(errorReStartTimes)\r\n                    let url_length = Global.Setting.Urls.hallHotUpdateUrlArray.length\r\n                    if (num && url_length > 0){\r\n                        Logger.error(\"startHotUpdateLogic errorReStartTimes = \" + errorReStartTimes)\r\n                        url_index = num % url_length\r\n                    }\r\n                }\r\n                hall_update_url = Global.Setting.Urls.hallHotUpdateUrlArray[url_index]\r\n                if(Global.Setting.Urls.hallHotUpdateUrlArray[0] && Global.Setting.Urls.hallHotUpdateUrlArray[0][\"host\"])\r\n                {\r\n                    if(url_index>0)\r\n                    {\r\n                        Global.DunHotUpdateUrlSetting.switchRoute()\r\n                    }\r\n                    hall_update_url = Global.DunHotUpdateUrlSetting.hotUpdateUrl\r\n\r\n                }\r\n\r\n                Logger.error(\"startHotUpdateLogic hall_update_url = \" + hall_update_url)\r\n            }\r\n        }\r\n        Global.Setting.Urls.hallHotUpdateUrl = hall_update_url\r\n        Global.HotUpdateManager.hallNewVersion = hall_version\r\n        Global.HotUpdateManager.hallUpdatePath = hallUpdatePath;\r\n        let hotUpdateProxy = <AppHotUpdateProxy>this.facade.retrieveProxy(AppHotUpdateProxy.NAME)\r\n            hotUpdateProxy.preUpdate(hall_update_url, hall_version,hallUpdatePath);\r\n    }\r\n\r\n    \r\n    private showUpdateNoticeWnd(update_notice) {\r\n        let update_notice_content = update_notice.content //维护公告内容\r\n        let update_notice_on_time = update_notice.on_time // 维护开始时间\r\n        let update_notice_down_time = update_notice.down_time //维护结束时间\r\n        let endTime = update_notice_down_time\r\n        let onlineCustomCallback = () => {\r\n            cc.sys.openURL(Global.Toolkit.DealWithUrl(Global.Setting.Urls.onlineService));\r\n        }\r\n        let officialWebCallback = () => {\r\n            let url = Global.Setting.Urls.downLoadUrl\r\n            cc.sys.openURL(url);\r\n        }\r\n        let closeCallback = () => {\r\n            this.reqCheckVersion()\r\n        }\r\n        Global.UI.show(\"WndGameMaintainUI\", update_notice_content, endTime, onlineCustomCallback, officialWebCallback, closeCallback)\r\n\r\n    }\r\n    \r\n\r\n    private checkIsShowUpdateNoticeWnd(update_notice) {\r\n        let nowTime = Math.round(new Date().getTime() / 1000)\r\n        \r\n        if (update_notice && update_notice.down_time != null && update_notice.down_time > 0) {\r\n            let down_time = update_notice.down_time\r\n            let offset_time = down_time - nowTime\r\n            if (offset_time > 0) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private getReportUrl(cfg) {\r\n        if(!cfg) return;\r\n        let url = cfg[this.urlIndex];\r\n        return url;\r\n    }\r\n\r\n    onRemove() {\r\n\r\n    }\r\n}"]}