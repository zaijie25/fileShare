{"version":3,"sources":["assets\\hall\\scripts\\logic\\hall\\ui\\Feedback\\WndFeedback.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import WndBase from \"../../../core/ui/WndBase\";\r\nimport { HallRedSpotType } from \"../../../hallcommon/model/HallModel\";\r\nimport PoolBase from \"../../../core/tool/PoolBase\";\r\nimport RightPanelView from \"./RightPanelView\";\r\nimport ServicerModel from \"../../../hallcommon/model/ServicerModel\";\r\nimport { RightViewType } from \"./FeedbackConstants\";\r\nimport FeedbackServiceItem from \"./FeedbackServiceItem\";\r\nimport FeedbackLeftItem from \"./FeedbackLeftItem\";\r\nimport ServiceLeftItem from \"./ServiceLeftItem\";\r\n\r\nexport default class WndFeedback extends WndBase {\r\n\r\n    model: ServicerModel;\r\n    contentNode: cc.Node;\r\n    copyItem: any;\r\n    selectId: number;\r\n    leftPanel: cc.Node;\r\n    rightPanel: cc.Node;\r\n    itemPool: LeftItemPool;\r\n    nodeList: any[] = [];\r\n    //rightPanelView: RightPanelView;\r\n    serviceItemNodeList :cc.Node[] = []\r\n\r\n    feedbackNode:cc.Node\r\n    feedback2Node:cc.Node\r\n    quickFeedbackNode:cc.Node\r\n    onlineServiceNode:cc.Node\r\n    FAQ:cc.Node\r\n    noMsgTips:cc.Node\r\n    private serverInfo: any;\r\n    protected onInit() {\r\n        this.isNeedDelay = true\r\n        this.name = \"WndFeedback\";\r\n        this.layer = \"PopLayer\";\r\n        this.resPath = \"hall/prefabs/ui/FeedbackUI\";\r\n        this.model = <ServicerModel>Global.ModelManager.getModel(\"ServicerModel\");\r\n\r\n    }\r\n\r\n\r\n    protected onOpen() {\r\n        this.serverInfo = this.args[0];\r\n        if(this.serverInfo){\r\n            this.initLeftItem();\r\n            this.OnDataPrepared()\r\n            //this.rightPanelView.subViewState = true\r\n        }\r\n\r\n    }\r\n\r\n\r\n    initLeftItem(){\r\n\r\n        if(!this.serverInfo || this.serverInfo.length ===0)\r\n        {\r\n            return\r\n        }\r\n        this.serverInfo.sort((a,b)=>{\r\n            return a.sort - b.sort\r\n        })\r\n        let select = -1\r\n        /**初始化item */\r\n        for (let index = 0; index < this.serverInfo.length; index++) {\r\n            let itemData = this.serverInfo[index];\r\n            if(!itemData.status)\r\n            {\r\n                continue\r\n            }\r\n            //itemData.id = Global.Toolkit.md5(itemData)\r\n            let node :cc.Node = this.itemPool.getItem();\r\n            let item = node.getComponent(\"ServiceLeftItem\")\r\n            item.SetToggleChecked(false);\r\n            select += 1\r\n            node.setParent(this.contentNode);\r\n            this.nodeList.push(node);\r\n            if(item)\r\n            {\r\n               item.onInit(itemData);\r\n            }\r\n            if(select === 0)\r\n            {\r\n                this.reset()\r\n                item.SetToggleChecked(true);\r\n                this.refreshRightPanel(itemData)\r\n            }\r\n            node.active = true\r\n            node.on(cc.Node.EventType.TOUCH_END, this.leftItemClick, this);\r\n        }\r\n\r\n        /**\r\n         * 排序\r\n         */\r\n        // for (let index = 0; index < this.contentNode.childrenCount; index++) {\r\n        //     let itemData = this.contentNode.children[index].getComponent(ServiceLeftItem).getGameData();\r\n        //     if(itemData)\r\n        //     {\r\n        //         let sort = itemData.sort -1 \r\n        //         if(sort<0)\r\n        //         {\r\n        //             sort = 0\r\n        //         }\r\n        //         else if(sort >=this.contentNode.childrenCount)\r\n        //         {\r\n        //             sort = this.contentNode.childrenCount - 1\r\n        //         }\r\n        //         this.contentNode.children[index].setSiblingIndex(sort)\r\n        //     }\r\n            \r\n        // }\r\n        // this.OnDataPrepared()\r\n        // /**\r\n        //  * 选中第一个\r\n        //  */\r\n        // if(this.contentNode.childrenCount == 0) return\r\n        // let node = this.contentNode.children[0]\r\n        // if (node) {\r\n        //     let item = node.getComponent(ServiceLeftItem)\r\n        //     if (item) {\r\n        //         let itemData = item.getGameData();\r\n        //         this.reset()\r\n        //         item.SetToggleChecked(true);\r\n        //         this.refreshRightPanel(itemData)\r\n        //     }\r\n\r\n        // }\r\n        //this.addFAQ();\r\n    }\r\n\r\n    addFAQ(){\r\n        let item = this.itemPool.getItem();\r\n        item.active = true;\r\n        //item.getComponent(\"FeedbackLeftItem\").onInit(this.leftItem[7]);\r\n        let data :any = {}\r\n        data.name = \"FAQ\"\r\n        item.getComponent(\"ServiceLeftItem\").onInit(data);\r\n        item.setParent(this.contentNode);\r\n        this.nodeList.push(item);\r\n        item.on(cc.Node.EventType.TOUCH_END, this.leftItemClick, this);\r\n        this.OnDataPrepared()\r\n    }\r\n\r\n    leftItemClick(event){\r\n        Global.Audio.playBtnSound();\r\n        let item = event.target;\r\n        let gameListItem = item.getComponent(\"ServiceLeftItem\");\r\n        let gameData = gameListItem.getGameData();\r\n        //this.FAQ.active = false\r\n        this.onlineServiceNode.active = true\r\n        this.noMsgTips.active = false\r\n        if(gameData)\r\n        {\r\n            //this.selectId = gameData.id\r\n            this.refreshRightPanel(gameData)\r\n        }\r\n        \r\n    }\r\n   \r\n    refreshRightPanel(gameData: any) {\r\n\r\n        let arr = gameData.windows\r\n        if(!arr || !arr.length)\r\n        {\r\n            this.noMsgTips.active = true\r\n            this.onlineServiceNode.active = false\r\n            return\r\n        }\r\n        this.hideAllItem()\r\n        this.onlineServiceNode.active = true\r\n        this.noMsgTips.active = false\r\n        for (let index = 0; index < arr.length; index++) {\r\n            let element = arr[index];\r\n            if(index<this.serviceItemNodeList.length && this.serviceItemNodeList[index] && element.type )\r\n            {\r\n                this.serviceItemNodeList[index].getComponent(FeedbackServiceItem).refreshUI(element)\r\n                this.serviceItemNodeList[index].active = true\r\n\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    hideAllItem()\r\n    {\r\n        this.serviceItemNodeList.forEach((ele)=>{\r\n            if(cc.isValid(ele))\r\n            {\r\n                ele.active = false\r\n            }\r\n        })\r\n    }\r\n\r\n    protected initView() {\r\n        this.leftPanel = this.getChild(\"LeftPanel\");\r\n        this.rightPanel = this.getChild(\"RightPanel\");\r\n        this.copyItem = this.getChild(\"LeftPanel/MsgItem\");\r\n        this.copyItem.active = false\r\n        this.contentNode = this.getChild(\"LeftPanel/scrollview/view/content\");\r\n        //this.rightPanelView = <RightPanelView>this.addView(\"RightPanelView\",this.rightPanel,RightPanelView);\r\n        this.addCommonClick(\"close\", this.closeWnd, this);\r\n        this.initItemPool();\r\n        for (let index = 0; index < 3; index++) {\r\n            let path = `RightPanel/onlineService/scrollView/view/content/service_${index}`\r\n            let node = this.getChild(path)\r\n            if(node)\r\n            {\r\n                this.serviceItemNodeList.push(node)\r\n            }\r\n            \r\n        }\r\n        this.feedbackNode = this.getChild(\"RightPanel/feedback\")\r\n        if(this.feedbackNode)\r\n        {\r\n            this.feedbackNode.active = false\r\n        }\r\n        this.feedback2Node = this.getChild(\"RightPanel/feedback2\")\r\n        if(this.feedback2Node)\r\n        {\r\n            this.feedback2Node.active = false\r\n        }\r\n\r\n        this.quickFeedbackNode = this.getChild(\"RightPanel/feedbackWrite\")\r\n        if(this.quickFeedbackNode)\r\n        {\r\n            this.quickFeedbackNode.active = false\r\n        }\r\n\r\n        this.FAQ = this.getChild(\"RightPanel/FAQ\")\r\n        if(this.FAQ)\r\n        {\r\n            this.FAQ.active = false\r\n        }\r\n        this.noMsgTips = this.getChild(\"RightPanel/noMsgTips\")\r\n        if(this.noMsgTips)\r\n        {\r\n            this.noMsgTips.active = false\r\n        }\r\n        this.onlineServiceNode = this.getChild(\"RightPanel/onlineService\")\r\n        if(this.onlineServiceNode)\r\n        {\r\n            this.onlineServiceNode.active = false\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    private closeWnd() {\r\n        this.close();\r\n    }\r\n\r\n    private initItemPool() {\r\n\r\n        this.itemPool = new LeftItemPool(this.copyItem);\r\n    }\r\n\r\n    reset()\r\n    {\r\n        this.FAQ.active =false\r\n        this.onlineServiceNode.active =false\r\n        this.noMsgTips.active = false\r\n    }\r\n    \r\n    protected onClose() {\r\n        /* this.contentNode.removeAllChildren(true);\r\n        this.itemPool.resetPool();\r\n        this.nodeList = []; */\r\n        if(this.nodeList){\r\n            this.recycle();\r\n        }\r\n    }\r\n\r\n    protected onDispose() {\r\n\r\n        this.itemPool.resetPool();\r\n        this.nodeList = [];\r\n        this.itemPool = null\r\n    }\r\n\r\n    public recycle()\r\n    {\r\n        this.itemPool.recycleAll(this.nodeList);\r\n        this.nodeList = [];\r\n    }\r\n\r\n}\r\n\r\nclass LeftItemPool extends PoolBase {\r\n    constructor(private copyNode: cc.Node) {\r\n        super();\r\n    }\r\n\r\n    protected createItem() {\r\n        return cc.instantiate(this.copyNode);\r\n    }\r\n\r\n    protected resetItem(node: cc.Node) {\r\n        node.active = false;\r\n        node.setParent(null);\r\n    }\r\n    public recycleAll(arr: Array<any>) {\r\n        super.recycleAll(arr);\r\n       /*  arr.forEach(ele => {\r\n            this.resetItem(ele);\r\n        }); */\r\n\r\n    }\r\n}"]}