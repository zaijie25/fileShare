{"version":3,"sources":["assets\\hall\\scripts\\logic\\hall\\ui\\Spread\\ProxyWin.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import ViewBase from \"../../../core/ui/ViewBase\";\r\nimport ServicerModel, { CustomerEntranceType, PopItemType } from \"../../../hallcommon/model/ServicerModel\";\r\nimport SpreadModel from \"../../../hallcommon/model/SpreadModel\";\r\nimport WaitingView from \"../waiting/WaitingView\";\r\nimport SpreadServices from \"./SpreadServices\";\r\n\r\nexport default class ProxyWin extends ViewBase {\r\n    private spriteNode: cc.Node;\r\n    private contentSprite: cc.Sprite\r\n    private show_img = \"\"\r\n    private servicerNode = [];\r\n    private serviceModel: ServicerModel;\r\n    SpreadModel: SpreadModel;\r\n    private waitingNode: cc.Node;\r\n    private centerImg: cc.Node;\r\n\r\n    private delegateNode: cc.Node;\r\n\r\n\r\n\r\n    protected onInit() {\r\n\r\n    }\r\n\r\n    protected initView() {\r\n        this.serviceModel = Global.ModelManager.getModel(\"ServicerModel\");\r\n        this.SpreadModel = <SpreadModel>Global.ModelManager.getModel(\"SpreadModel\");\r\n\r\n        this.centerImg = this.getChild(\"mask/centerImg\");\r\n        this.contentSprite = this.centerImg.getComponent(cc.Sprite);\r\n        this.delegateNode = this.getChild(\"ServerNode\");\r\n\r\n        let leftNode = this.getChild(\"ServerNode/leftNode\")\r\n        // if (leftNode) {\r\n        //     leftNode.active = false\r\n        // }\r\n      //  let rightNode = this.getChild(\"ServerNode/rightNode\")\r\n        // if (rightNode) {\r\n        //     rightNode.active = false\r\n        // }\r\n        this.servicerNode.push(leftNode)\r\n     //   this.servicerNode.push(rightNode)\r\n\r\n        Global.UIHelper.addCommonClick(this.node, \"ServerNode/leftNode/btn_leftkefu\", this.openServicerApp, this);\r\n      //  Global.UIHelper.addCommonClick(this.node, \"ServerNode/rightNode/btn_leftkefu\", this.openServicerApp, this);\r\n\r\n\r\n    }\r\n\r\n\r\n    private servicerType = {\r\n        1: \"icon_kfwx\",          //微信\r\n        2: \"icon_kfqq\",          //QQ\r\n        3: \"icon_kfwx\",          //默认\r\n        4: \"icon_kfat\",          //艾特\r\n        5: \"img_llgf\",          //在线客服\r\n        6: \"img_llgf\"           //在线客服\r\n    }\r\n    private servicerName = {\r\n        1: \"客服微信\",           //微信\r\n        2: \"客服QQ\",             //QQ\r\n        3: \"公众号\",             //公众号\r\n        4: \"艾特客服\",           //艾特\r\n        5: \"在线客服\",           //默认\r\n        6: \"在线客服\"          //默认\r\n    }\r\n\r\n    onSubViewShow() {\r\n        if (this.waitingNode) {\r\n            this.waitingNode.active = true;\r\n        }\r\n        let url = Global.Setting.Urls.getinviteUrl()\r\n        this.SpreadModel.GetDayAgentShare(url);\r\n\r\n      //  this.CheckKefu()\r\n        this.showProxy()\r\n        this.InitCenterImg();\r\n    }\r\n\r\n\r\n    InitCenterImg() {\r\n        if(!this.show_img){\r\n            return;\r\n        }\r\n\r\n        this.contentSprite.spriteFrame = null\r\n        let self = this;\r\n        if (self.show_img != null && !Global.Toolkit.isEmptyObject(self.show_img)) {\r\n            if (CC_JSB) {\r\n                Global.Toolkit.LoadPicToNative(Global.Toolkit.DealWithUrl(self.show_img), Global.Toolkit.DealWithUrl(self.show_img), (texture: cc.Texture2D) => {\r\n                    if (self.centerImg && self.centerImg.isValid) {\r\n                        var frame = new cc.SpriteFrame(texture);\r\n                        self.contentSprite.spriteFrame = frame;\r\n\r\n                    }\r\n                })\r\n            }\r\n            else {\r\n                cc.loader.load(Global.Toolkit.DealWithUrl(self.show_img), function (err, texture: cc.Texture2D) {\r\n                    if (err != null) {\r\n                        return\r\n                    }\r\n                    if (self.centerImg && self.centerImg.isValid) {\r\n                        let frame:cc.SpriteFrame = new cc.SpriteFrame(texture);    \r\n                        self.contentSprite.spriteFrame = frame;\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    CheckKefu() {\r\n        let data = null\r\n        let model = Global.ModelManager.getModel(\"ServicerModel\")\r\n        if (model) {\r\n            data = model.getServiceInfo(CustomerEntranceType.SpreadService)\r\n        }\r\n        if (!data || !data.status) {\r\n            this.delegateNode.active = false\r\n        }\r\n        else {\r\n            this.delegateNode.active = true\r\n        }\r\n    }\r\n\r\n    showProxy() {\r\n        let data = this.serviceModel.getServiceInfo(CustomerEntranceType.SpreadService)\r\n        if(!data){\r\n            Global.UI.fastTip(\"客服数据未配置！\");\r\n            return;\r\n        }\r\n        this.show_img = data.show_img;\r\n        if (!data || data.arr.length === 0) return\r\n        let severArr = data.arr;\r\n\r\n        for (let index = 0; index < severArr.length; index++) {\r\n            if (index > (this.servicerNode.length - 1)) {\r\n                return;\r\n            }\r\n            let servicerItem = this.servicerNode[index]\r\n            let data = severArr[index]\r\n            if (data.type !== 0 && servicerItem && cc.isValid(servicerItem)) {\r\n                servicerItem.active = true;\r\n                // let labe1 = cc.find(\"label1\", servicerItem).getComponent(cc.Label);\r\n                let labe2 = cc.find(\"lb_kefu\", servicerItem).getComponent(cc.Label);\r\n                let icon = cc.find(\"img_qq\", servicerItem).getComponent(cc.Sprite);\r\n                let btnNode: any = cc.find(\"btn_leftkefu\", servicerItem);\r\n                btnNode.data = data;\r\n                //  labe1.string = this.servicerName[data.type]\r\n                labe2.string = Global.Toolkit.substrEndWithElli(data.data, 10)\r\n                Global.ResourceManager.loadAutoAtlas(icon, \"hall/texture/Proxy/Proxy\", this.servicerType[data.type])\r\n            }\r\n        }\r\n    }\r\n\r\n    private openServicerApp(target) {\r\n        if (target && target.node && target.node.data) {\r\n            Global.NativeEvent.copyTextToClipboard(target.node.data.data, (retStr) => {\r\n                if (retStr.result == 0) {\r\n                    if (target.node.data.type == PopItemType.QQ) {\r\n                        Global.UI.fastTip(\"复制成功\");\r\n                        Global.NativeEvent.awakeQQApp(this.awakeQQCallBack.bind(this));\r\n                    } else if (target.node.data.type == PopItemType.WX || target.node.data.type == PopItemType.WXPUBLIC) {\r\n                        Global.UI.fastTip(\"复制成功\");\r\n                        Global.NativeEvent.awakeWechatApp(this.awakeWeChatCallBack.bind(this));\r\n                    } else if (target.node.data.type == PopItemType.AtWnd) {\r\n                        Global.ChatServer.serverType = CustomerEntranceType.HallService;\r\n                        Global.ChatServer.userSetting(null, target.node.data.data);\r\n                    } else if (target.node.data.type == PopItemType.Link) {\r\n                        cc.sys.openURL(Global.Toolkit.DealWithUrl(target.node.data.data));\r\n                    }\r\n                    else if (target.node.data.type == PopItemType.AtLink) {\r\n                        cc.sys.openURL(Global.Toolkit.DealWithUrl(target.node.data.data));\r\n                    } else {\r\n                        Global.UI.fastTip(\"复制失败\");\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    awakeQQCallBack(retStr) {\r\n        if (retStr.result == 0) {\r\n        }\r\n        else {\r\n            let ret = retStr.result\r\n            if (ret == -1) {\r\n                Logger.log(\"请先安装QQ\");\r\n                Global.UI.showSingleBox(\"请先安装QQ\", null);\r\n            } else {\r\n                Logger.log(\"打开QQ失败\");\r\n                Global.UI.showSingleBox(\"打开QQ失败\", null);\r\n            }\r\n        }\r\n    }\r\n\r\n    awakeWeChatCallBack(retStr) {\r\n        if (retStr.result == 0) {\r\n        } else {\r\n            let ret = retStr.result\r\n            if (ret == -1) {\r\n                Logger.log(\"请先安装微信\");\r\n                Global.UI.showSingleBox(\"请先安装微信\", null);\r\n            } else {\r\n                Logger.log(\"打开微信失败\");\r\n                Global.UI.showSingleBox(\"打开微信失败\", null);\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n"]}