{"version":3,"sources":["assets\\hall\\scripts\\logic\\hall\\ui\\Feedback\\ServiceView.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import ViewBase from \"../../../core/ui/ViewBase\";\r\nimport ServicerModel from \"../../../hallcommon/model/ServicerModel\";\r\nimport { ServicerEvent } from \"../serviver/ServicerEvent\";\r\nimport ServicerItem from \"../serviver/ServicerItem\";\r\nimport RightPanelView from \"./RightPanelView\";\r\nimport { RightViewType } from \"./FeedbackConstants\";\r\nimport ServicerFactory from \"./ServicerFactory\";\r\nimport AbsServicer from \"./AbsServicer\";\r\n\r\n\r\n\r\n\r\nexport default class ServiceView extends ViewBase {\r\n\r\n    // private model : ServicerModel;\r\n    listNode: cc.Node = null;\r\n    serviceItem: cc.Node = null;\r\n    // nameLabel: cc.Node = null;\r\n    scrollView:cc.ScrollView;\r\n    private serviceDatas = [];\r\n    private itemList : Array<ServicerItem> = new Array();\r\n    private itemPool : Array<ServicerItem> = new Array();\r\n\r\n    protected initView(){\r\n        \r\n        // this.model = <ServicerModel>Global.ModelManager.getModel(\"ServicerModel\");\r\n        this.listNode = this.getChild(\"scrollView/view/content\");\r\n        this.serviceItem = this.getChild(\"service_item\");\r\n        // this.nameLabel = this.getChild(\"service_item/nameLabel\");\r\n        this.scrollView = this.getComponent(\"scrollView\",cc.ScrollView);\r\n        this.scrollView.enabled = true;\r\n    }\r\n\r\n    protected onSubViewShow(){\r\n        const factory:ServicerFactory = ServicerFactory.getInstance();\r\n        let serObj:AbsServicer = factory.getEntity(this.viewKey);\r\n        if(serObj.isEmptyInfo()){\r\n            this.showNoMsgTip();\r\n            return;\r\n        }\r\n        this.serviceDatas = serObj.initServicerData();\r\n        this.updateView(serObj);\r\n        // this.model.on(ServicerEvent.OnUpdateServicerView,this,this.updateView);\r\n    }\r\n\r\n    showNoMsgTip(){\r\n        let rightPanelView = <RightPanelView>Global.UI.getWindow(\"WndFeedback\").getView(\"RightPanelView\");\r\n        rightPanelView.changeView(RightViewType.noMsgTips);\r\n    }\r\n\r\n    onSubViewHide(){\r\n        // this.model.off(ServicerEvent.OnUpdateServicerView,this,this.updateView);\r\n        // this.listNode.removeAllChildren(true);\r\n        this.serviceDatas=[];\r\n    }\r\n\r\n    protected updateView(data: AbsServicer){\r\n        this.clearItem();\r\n        //生成item\r\n        for (let index = 0; index < this.serviceDatas.length; index++) {\r\n            let item = this.getItem();\r\n            let itemObj = item.getComponent(ServicerItem);\r\n            // itemObj.setData(this.serviceDatas[index]);\r\n            //itemObj.setData2(index,data);\r\n            this.itemList.push(itemObj);\r\n        }\r\n        this.scrollView.scrollToLeft();\r\n    }\r\n\r\n    private getItem(){\r\n        if(this.itemPool.length > 0){\r\n            let item = this.itemPool.pop();\r\n            item.node.setSiblingIndex(-1);\r\n            item.node.active = true;\r\n            return item;\r\n        }else{\r\n            let item = cc.instantiate(this.serviceItem);\r\n            item.setParent(this.listNode);\r\n            item.active = true;\r\n            return item;\r\n        }\r\n    }\r\n\r\n    private clearItem(){\r\n        this.listNode.y = 0;\r\n        for (let index = 0; index < this.itemList.length; index++) {\r\n            const item = this.itemList[index];\r\n            this.recoveryItem(item);\r\n        }\r\n        this.itemList = [];\r\n    }\r\n\r\n    private recoveryItem( item : ServicerItem){\r\n        item.reset();\r\n        item.node.active = false;\r\n        this.itemPool.push(item);\r\n    }\r\n\r\n    \r\n\r\n\r\n}\r\n"]}