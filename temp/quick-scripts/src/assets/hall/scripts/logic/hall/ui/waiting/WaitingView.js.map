{"version":3,"sources":["assets\\hall\\scripts\\logic\\hall\\ui\\waiting\\WaitingView.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,sDAAiD;AACjD;IAAyC,+BAAQ;IAAjD;;IAgCA,CAAC;IA9BG,uBAAuB;IACvB,8BAA8B;IAC9B,6BAA6B;IAC7B,gCAAgC;IAClB,2BAAe,GAA7B,UAA8B,IAAI,EAAE,QAAsB;QAAtB,yBAAA,EAAA,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;QACtD,IAAI,WAAW,GAAG,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC;QAChC,IAAI,KAAK,GAAG,IAAI,WAAW,EAAE,CAAC;QAC9B,MAAM,CAAC,eAAe,CAAC,OAAO,CAAC,4BAA4B,EAAE,UAAC,KAAK,EAAE,MAAM;YACvE,IAAI,MAAM,EAAE;gBACR,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC;gBACtC,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBACjC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;gBAC5B,WAAW,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;gBAClC,OAAO,WAAW,CAAC;aACtB;QACL,CAAC,CAAC,CAAC;QACH,OAAO,WAAW,CAAC;IACvB,CAAC;IACS,8BAAQ,GAAlB;QACI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC;QACrD,IAAG,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,EAAC;YAC1B,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,KAAK,CAAA;SAChC;IACL,CAAC;IACS,mCAAa,GAAvB;QACI,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;IAClC,CAAC;IACS,mCAAa,GAAvB;QACI,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;IAChC,CAAC;IACL,kBAAC;AAAD,CAhCA,AAgCC,CAhCwC,kBAAQ,GAgChD","file":"","sourceRoot":"/","sourcesContent":["import ViewBase from \"../../../core/ui/ViewBase\";\r\nexport default class WaitingView extends ViewBase {\r\n    private tipsLabel: cc.Label;\r\n    // private counter = 0;\r\n    // private model:WaitingModel;\r\n    // private maxFrameCount = 0;\r\n    // private UpdateInterval = 0.2;\r\n    public static initWaitingView(node, position = cc.v2(0, 0)) {\r\n        let loadingNode = new cc.Node();\r\n        let node2 = new WaitingView();\r\n        Global.ResourceManager.loadRes(\"hall/prefabs/ui/viewWaitUI\", (error, prefab) => {\r\n            if (prefab) {\r\n                node2.setNode(cc.instantiate(prefab));\r\n                loadingNode.addChild(node2.node);\r\n                loadingNode.setParent(node);\r\n                loadingNode.setPosition(position);\r\n                return loadingNode;\r\n            }\r\n        });\r\n        return loadingNode;\r\n    }\r\n    protected initView() {\r\n        this.tipsLabel = this.getComponent(\"tips\", cc.Label);\r\n        if(cc.isValid(this.tipsLabel)){\r\n            this.tipsLabel.string = \"连接中\"\r\n        }\r\n    }\r\n    protected onSubViewShow() {\r\n        Logger.error(\"--loading显示--\");\r\n    }\r\n    protected onSubViewHide() {\r\n        Logger.error(\"--loading消失\");\r\n    }\r\n}\r\n"]}