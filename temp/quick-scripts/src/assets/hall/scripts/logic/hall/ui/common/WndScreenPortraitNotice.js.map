{"version":3,"sources":["assets\\hall\\scripts\\logic\\hall\\ui\\common\\WndScreenPortraitNotice.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["/**\r\n * 横竖版转换提示UI\r\n */\r\nimport WndBase, { DestoryType } from \"../../../core/ui/WndBase\";\r\n\r\nexport default class WndScreenPortraitNotice extends WndBase\r\n{\r\n    /** 背景的Sprite */\r\n    private bgSprite:cc.Sprite = null;\r\n\r\n    /** 竖屏提示动画 */\r\n    private noticeSpine:sp.Skeleton = null;\r\n\r\n    /** 动画播放完成后的回调 */\r\n    private finishCallBack:Function = null;\r\n\r\n    /** 界面显示时长 */\r\n    private showTime:number = 0;\r\n\r\n    /** 界面开始显示时间 */\r\n    private beginShowTick:number = 0;\r\n\r\n    protected onInit()\r\n    {\r\n        this.name = \"WndScreenPortraitNotice\";\r\n        this.layer = \"PopLayer\";\r\n        this.resPath = \"hall/prefabs/ui/ScreenPortraitNoticeUI\";\r\n        this.showBg = false;\r\n        this.destoryType = DestoryType.None;\r\n    }\r\n\r\n    protected initView()\r\n    {\r\n        this.bgSprite = this.getComponent(\"bg\", cc.Sprite);\r\n        if(this.bgSprite == null) {\r\n            Logger.error(\"WndScreenPortraitNotice::onInit() this.bgSprite == null\");\r\n        }\r\n\r\n        this.noticeSpine = this.getComponent(\"content/spineNode\", sp.Skeleton);\r\n        if(this.noticeSpine == null) {\r\n            Logger.error(\"WndScreenPortraitNotice::onInit() this.noticeSpine == null\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {Function} finishCallBack\r\n     * @param {number} showTime\r\n     * @memberof WndScreenPortraitNotice\r\n     */\r\n    protected onOpen()\r\n    {\r\n        let self = this;\r\n\r\n        if(this.args == null || this.args.length == 0) {\r\n            Logger.error(\"WndScreenPortraitNotice::onOpen() 没有设置参数\");\r\n            this.close();\r\n            return;\r\n        }\r\n\r\n        let finishCallBack = this.args[0];\r\n        if(finishCallBack == null || finishCallBack == \"\") {\r\n            Logger.error(\"WndScreenPortraitNotice::onOpen() finishCallBack = null\");\r\n            this.close();\r\n            return;\r\n        }\r\n        this.finishCallBack = finishCallBack;\r\n\r\n        let showTime = this.args[1];\r\n        showTime = (!showTime || showTime <= 0) ? 0 : showTime;\r\n        showTime = (showTime > 10) ? 10 : showTime;\r\n        this.showTime = showTime;\r\n        // Logger.error(\"WndScreenPortraitNotice::onOpen() this.showTime = \" + this.showTime);\r\n\r\n        if(this.showTime > 0 && this.bgSprite) {\r\n            this.beginShowTick = Date.now();\r\n            this.bgSprite.schedule(()=>{\r\n                self.checkTimer();\r\n            }, 0.1);\r\n        }\r\n\r\n        if(this.noticeSpine) {\r\n            let loop = (this.showTime > 0);\r\n            let animName = \"idle\";\r\n            this.noticeSpine.clearTrack(0);\r\n            this.noticeSpine.addAnimation(0, animName, loop);\r\n            if(!loop) {\r\n                this.noticeSpine.setCompleteListener((trackEntry:any)=>{\r\n                    let name = trackEntry.animation ? trackEntry.animation.name : '';\r\n                    if (name === animName) {    \r\n                        if(self.finishCallBack) {\r\n                            self.finishCallBack();\r\n                        }\r\n                        self.close();\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    /** 时间检查 */\r\n    private checkTimer() {\r\n        // Logger.error(\"WndScreenPortraitNotice::checkTimer() this.showTime = \" + this.showTime);\r\n        if((Date.now() - this.beginShowTick) >= this.showTime* 1000) {\r\n            if(this.finishCallBack) {\r\n                this.finishCallBack();\r\n            }\r\n\r\n            this.bgSprite.unscheduleAllCallbacks();\r\n            this.close();\r\n        }\r\n    }\r\n}"]}