{"version":3,"sources":["assets\\bbwz\\Bbwz\\scripts\\subview\\poker\\BbwzPokerGroupView.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import BbwzBaseView from \"../BbwzBaseView\";\r\nimport BbwzPokerView from \"./BbwzPokerView\";\r\nimport BbwzConstDefine from \"../../data/BbwzConstDefine\";\r\nimport BbwzPokerTypeView, { BbwzZjhPokerTypeView, BbwzBullPokerTypeView } from \"./BbwzPokerTypeView\";\r\nimport BbwzPokerTool from \"../../tool/BbwzPokerTool\";\r\n\r\nexport default class BbwzPokerGroupView extends BbwzBaseView{\r\n    public pokerList: BbwzPokerView[] = [];\r\n    private pokerType: number;\r\n    private pokerDataList: number[];\r\n    private pokerMulti: number;\r\n    private pokerTypeView: BbwzPokerTypeView;\r\n    /** 第一次发牌中心牌参考点坐标偏移, 用于计算第一次发牌坐标 */\r\n    private transferPosOffset: cc.Vec2;\r\n\r\n    constructor(node: cc.Node, public name: string){\r\n        super();\r\n        this.setNode(node);\r\n    }\r\n\r\n    protected initView(){\r\n        for (let i = 0; i < BbwzConstDefine.GROUP_POKER_COUNT; i++){\r\n            let node = this.getChild(`poker${i}`);\r\n            let view = new BbwzPokerView(node);\r\n            this.pokerList.push(view);\r\n        }\r\n\r\n        if (BbwzConstDefine.checkZjhGroup(this.name)){\r\n            this.pokerTypeView = new BbwzZjhPokerTypeView(this.getChild(\"zjhPokerType\"));\r\n            this.pokerTypeView.active = false;\r\n        }\r\n        else{\r\n            this.pokerTypeView = new BbwzBullPokerTypeView(this.getChild(\"bullPokerType\"));\r\n            this.pokerTypeView.active = false;\r\n        }\r\n\r\n        let transferNode = this.getChild(\"transferPoint\");\r\n        let centerIndex = Math.floor(BbwzConstDefine.GROUP_POKER_COUNT / 2);    // 索引0开始\r\n        this.transferPosOffset = transferNode.position.sub(this.pokerList[centerIndex].getRawPos());\r\n    }\r\n\r\n    /**\r\n     * 显示所有手牌\r\n     * @param isShow 是否显示\r\n     * @param isFront 是否正面 默认背面\r\n     */\r\n    public showGroupPokers(isShow: boolean, isFront: boolean = false){\r\n        this.pokerList.forEach(poker=>{\r\n            poker.active = isShow;\r\n            poker.isFront = isFront;\r\n        });\r\n    }\r\n\r\n    public doFirstDeal(fromWPos: cc.Vec2, timeScale: number, delay: number = 0, callback?: Function){\r\n        let fromPos = this.node.convertToNodeSpaceAR(fromWPos);\r\n        this.pokerList.forEach((poker, index)=>{\r\n            let endPos = poker.getRawPos().add(this.transferPosOffset);\r\n            poker.active = true;\r\n            poker.doPokerMove(fromPos, endPos, timeScale, delay + 0.05 * (index - 1), (index == this.pokerList.length - 1) && callback, index % 3 == 0, null, false);\r\n        });\r\n    }\r\n\r\n    public doFirstDealDirectly(){\r\n        this.pokerList.forEach(poker=>{\r\n            let endPos = poker.getRawPos().add(this.transferPosOffset);\r\n            poker.active = true;\r\n            poker.node.setPosition(endPos);\r\n        })\r\n    }\r\n\r\n    public doDispatch(dealTime: number){\r\n        let delay = 0;\r\n        this.pokerList.forEach((poker, index)=>{\r\n            let fromPos = poker.node.position;\r\n            poker.active = true;\r\n            poker.doPokerMove(fromPos, poker.getRawPos(), dealTime, delay + 0.05 * (index - 1), ()=>{\r\n                // poker.showPokerEasyAnim(null, flopTime);\r\n                poker.isFront = true;\r\n            }, index % 3 == 0, null, true);\r\n        });\r\n    }\r\n\r\n    public dispatchPokersDirectly(){\r\n        this.pokerList.forEach((poker, index)=>{\r\n            poker.active = true;\r\n            poker.isFront = false;\r\n            poker.node.setPosition(poker.getRawPos());\r\n        });\r\n    }\r\n\r\n    public showDownPoker(data = [], type: number, multi: number, delay = 0, showTime = 1){\r\n        let collectTime = 0.3;\r\n        let tween = Game.Tween.get(this.node);\r\n        tween.delay(delay)\r\n        .call(()=>{\r\n            this.collectInCenter(collectTime /2);\r\n        })\r\n        .delay(collectTime /2)\r\n        .call(()=>{\r\n            this.setGroupPokerValue(data, type, multi);\r\n            this.collectInCenter(collectTime /2, true);\r\n        })\r\n        .delay(collectTime /2)\r\n        .call(()=>{\r\n            this.playTypeSound();\r\n            this.pokerTypeView.active = true;\r\n            this.pokerTypeView.setPokerTypeStyle(this.pokerType, this.pokerMulti);      // 时机未细调\r\n            if (BbwzPokerTool.checkIsThreeWithTwo(this.pokerType)){\r\n                this.placeThreeWithTwo(true);\r\n            }\r\n        })\r\n        .delay(showTime - collectTime)\r\n        .start();\r\n    }\r\n\r\n    private collectInCenter(timeScale, isReserve = false){\r\n        let to = this.pokerList[2].getRawPos();\r\n        if(isReserve){\r\n            Global.Audio.playBundleSound(BbwzConstDefine.GAME_ID,BbwzConstDefine.SOUND_SHOWDOWN, true);\r\n        }\r\n        this.pokerList.forEach(poker => {\r\n            let from = poker.getRawPos();\r\n            if (!isReserve){\r\n                poker.doPokerMove(from, to, timeScale);\r\n            }\r\n            else{\r\n                poker.doPokerMove(to, from, timeScale, 0, null, false, cc.easeBackOut());\r\n            }\r\n        });\r\n    }\r\n\r\n    public placeThreeWithTwo(isAnim: boolean){\r\n        for(let i= 0; i <= this.pokerList.length-1; i++){\r\n            let poker = this.pokerList[i];\r\n            let from = poker.getRawPos();\r\n            if (i >=1 && i <= 2){\r\n                if (isAnim)\r\n                    poker.doPokerMove(from, cc.v2(from.x - 5 * i, from.y), 0.2, 0);\r\n                else\r\n                    poker.node.setPosition(cc.v2(from.x - 5 * i, from.y));\r\n            }\r\n            else if(i == 3){\r\n                if (isAnim)\r\n                    poker.doPokerMove(from, cc.v2(from.x + 5, from.y), 0.2, 0);\r\n                else\r\n                    poker.node.setPosition(cc.v2(from.x + 5, from.y));\r\n            }\r\n            else{\r\n                poker.node.setPosition(from);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置手牌数组和牌型\r\n     * @param dataList 手牌数组\r\n     * @param pokerType 手牌牌型\r\n     */\r\n    public setGroupPokerValue(dataList: number[], pokerType: number = 0, pokerMulti: number = 0){\r\n        this.pokerType = pokerType;\r\n        this.pokerMulti = pokerMulti;\r\n        this.pokerDataList = dataList;\r\n        this.pokerList.forEach((poker, i)=>{\r\n            if (this.pokerDataList[i]){\r\n                poker.pokerValue = this.pokerDataList[i];\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 翻牌动作\r\n     * @param callback 播完动作钩子\r\n     * @param timeScale 时长\r\n     * @param delay 延时\r\n     */\r\n    public flopPokers(timeScale = 1, delay = 0, callback?: Function){\r\n        this.pokerList.forEach((poker, index)=>{\r\n            poker.active = true;\r\n            poker.showPokerEasyAnim(callback, timeScale, delay, false);\r\n        })\r\n        // 翻牌播放五次可能导致别的声音播不出来\r\n        Global.Audio.playBundleSound(BbwzConstDefine.GAME_ID,BbwzConstDefine.SOUND_ZHENGPAI, true);\r\n        Global.Audio.playBundleSound(BbwzConstDefine.GAME_ID,BbwzConstDefine.SOUND_ZHENGPAI, true);\r\n        Game.Component.scheduleOnce(()=>{\r\n            this.playTypeSound();\r\n            this.pokerTypeView.active = true;\r\n            this.pokerTypeView.setPokerTypeStyle(this.pokerType, this.pokerMulti);      // 时机未细调\r\n            if (BbwzPokerTool.checkIsThreeWithTwo(this.pokerType)){\r\n                this.placeThreeWithTwo(true);\r\n            }\r\n        }, timeScale + (this.pokerList.length - 1) * delay);\r\n    }\r\n\r\n    /**\r\n     * 直接显示牌面 不翻转动画\r\n     */\r\n    public flopPokersDirectly(){\r\n        this.pokerList.forEach((poker, index)=>{\r\n            poker.active = true;\r\n            poker.isFront = true;\r\n            poker.node.setPosition(poker.getRawPos());\r\n        });\r\n\r\n        this.pokerTypeView.active = true;\r\n        this.pokerTypeView.setPokerTypeStyle(this.pokerType, this.pokerMulti);\r\n        if (BbwzPokerTool.checkIsThreeWithTwo(this.pokerType)){\r\n            this.placeThreeWithTwo(false);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 播放牌型音效\r\n     * @param soundArr 牌型音效列表\r\n     */\r\n    public playTypeSound(){\r\n        let soundArr = BbwzConstDefine.getGroupTypeSoundArr(this.name);\r\n        if (soundArr){\r\n            let res = soundArr[this.pokerType];\r\n            Global.Audio.playBundleSound(BbwzConstDefine.GAME_ID,res, true);\r\n        }\r\n    }\r\n\r\n    public reset(){\r\n        this.pokerList.forEach(poker=>{\r\n            poker.reset();\r\n            poker.active = false;\r\n        });\r\n        this.pokerTypeView.active = false;\r\n    }\r\n}"]}