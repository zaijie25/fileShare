{"version":3,"sources":["assets\\bbwz\\Bbwz\\scripts\\subview\\poker\\BbwzPokerView.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import BbwzBaseView from \"../BbwzBaseView\";\r\nimport BbwzConstDefine from \"../../data/BbwzConstDefine\";\r\nimport BbwzPathHelper from \"../../tool/BbwzPathHelper\";\r\nimport BbwzPokerTool from \"../../tool/BbwzPokerTool\";\r\n\r\nexport default class BbwzPokerView extends BbwzBaseView{\r\n    private backNode: cc.Node;\r\n    private frontSp: cc.Sprite;\r\n    private _isFront: boolean;\r\n    private _value: number;\r\n    private rawPos: cc.Vec2;\r\n    public rawScale: number;\r\n\r\n    constructor(node: cc.Node){\r\n        super();\r\n        this.setNode(node);\r\n    }\r\n\r\n    protected initView(){\r\n        this.backNode = this.getChild(\"bg\");\r\n        this.frontSp = <cc.Sprite>this.getComponent(\"front\", cc.Sprite);\r\n        this.rawPos = this.node.position;\r\n        this.rawScale = this.node.scale;\r\n    }\r\n\r\n    /**\r\n     * 设置牌正反面 true 正面\r\n     */\r\n    public set isFront(flag: boolean) {\r\n        this._isFront = flag;\r\n        this.frontSp.node.active = flag;\r\n        this.backNode.active = !flag;\r\n    }\r\n\r\n    public get isFront(){\r\n        return this._isFront;\r\n    }\r\n\r\n    /**\r\n     * 设置牌值图案 传入服务器牌值\r\n     */\r\n    public set pokerValue(value: number){\r\n        if (this._value == value)\r\n            return;\r\n        this._value = value;\r\n        if (value){\r\n            let pokerRes = BbwzPokerTool.pokerResMap[Number(value)];\r\n            Global.ResourceManager.loadBundleAutoAtlas(BbwzConstDefine.GAME_ID,this.frontSp, BbwzPathHelper.gameTexturePath + \"atlas/poker/atlas_poker\", pokerRes, null, true);\r\n        }\r\n    }\r\n\r\n    public get pokerValue(){\r\n        return this._value;\r\n    }\r\n\r\n    /**\r\n     * 翻牌动画 带放大效果的\r\n     * @param callback 翻完牌回调\r\n     * @param timeScale 总时长不包含delay\r\n     * @param delay 延时\r\n     * @param isSound 是否播放翻牌音效 默认不播\r\n     */\r\n    public showPokerAnim(callback: Function, timeScale = 1, delay = 0, isSound = false){\r\n        this.isFront = false;\r\n        let tween = Game.Tween.get(this.node);\r\n\r\n        tween.delay(delay)\r\n        //放大1.3倍\r\n        .to(0.1 * timeScale, {scale: this.rawScale * 1.3}, cc.easeCubicActionIn())\r\n        //横向缩放\r\n        .to(0.2 * timeScale, {scaleX: 0}, cc.easeCubicActionIn())\r\n        //翻拍\r\n        .call(()=>{\r\n            this.isFront = true;\r\n            isSound && Global.Audio.playBundleSound(BbwzConstDefine.GAME_ID,BbwzConstDefine.SOUND_ZHENGPAI, true);\r\n        })\r\n        //展开\r\n        .to(0.35 * timeScale, {scaleX: this.rawScale * 1.3}, cc.easeCubicActionOut())\r\n        .delay(0.25 * timeScale)\r\n        //还原\r\n        .to(0.1, {scale: this.rawScale}, cc.easeCubicActionOut())\r\n        .call(callback)\r\n        .start();\r\n    }\r\n\r\n    /**\r\n     * 翻牌动画 不带放大效果\r\n     * @param callback 翻完牌回调\r\n     * @param timeScale 总时长不包含delay\r\n     * @param delay 延时\r\n     * @param isSound 是否播放翻牌音效 默认不播\r\n     */\r\n    public showPokerEasyAnim(callback: Function, timeScale = 1, delay = 0, isSound = false){\r\n        this.isFront = false;\r\n        let tween = Game.Tween.get(this.node);\r\n\r\n        tween.delay(delay)\r\n        //横向缩放\r\n        .to(0.3 * timeScale, {scaleX: 0}, cc.easeCubicActionIn())\r\n        //翻拍\r\n        .call(()=>{\r\n            this.isFront = true;\r\n            isSound && Global.Audio.playBundleSound(BbwzConstDefine.GAME_ID,BbwzConstDefine.SOUND_ZHENGPAI, true);\r\n        })\r\n        //展开\r\n        .to(0.5 * timeScale, {scaleX: this.rawScale}, cc.easeCubicActionOut())\r\n        .delay(0.2 * timeScale)\r\n        .call(callback)\r\n        .start();\r\n    }\r\n\r\n    /**\r\n     * 单牌移动(自身父坐标内)\r\n     * @param from 起始坐标，需先转换到牌所在坐标系\r\n     * @param to 终点坐标\r\n     * @param timeScale 移动时长\r\n     * @param timeWait 移动前延时\r\n     * @param callback 完成回调\r\n     * @param isSound\r\n     * @param ease\r\n     * @param isRawScale 是否放缩到原始尺寸\r\n     */\r\n    public doPokerMove(from: cc.Vec2, to: cc.Vec2, timeScale = 1, timeWait = 0, callback?: Function, isSound = false, ease: any = cc.easeIn(1), isRawScale: boolean = false){\r\n        this.node.setPosition(from);\r\n        let props = {\r\n            position: to\r\n        };\r\n        if (isRawScale)\r\n            props[\"scale\"] = this.rawScale;\r\n        \r\n        let tween = Game.Tween.get(this.node);\r\n        tween.delay(timeWait)\r\n        .call(()=>{\r\n            isSound && Global.Audio.playBundleSound(BbwzConstDefine.GAME_ID,BbwzConstDefine.SOUND_FAPAI, true);\r\n        })\r\n        .to(timeScale, props, ease)\r\n        .call(callback)\r\n        .start();\r\n    }\r\n\r\n    public getRawPos(){\r\n        return this.rawPos;\r\n    }\r\n\r\n    public reset(){\r\n        this.node.scale = this.rawScale;\r\n        this.node.setPosition(this.rawPos);\r\n        this.node.opacity = 255;\r\n        this.isFront = false;\r\n    }\r\n}"]}