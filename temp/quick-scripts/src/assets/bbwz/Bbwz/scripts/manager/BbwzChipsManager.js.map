{"version":3,"sources":["assets\\bbwz\\Bbwz\\scripts\\manager\\BbwzChipsManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import BbwzBasePool from \"../tool/BbwzBasePool\";\r\nimport BbwzChipItem from \"../subview/BbwzChipItem\";\r\nimport BbwzPathHelper from \"../tool/BbwzPathHelper\";\r\nimport BbwzConstDefine, { BbwzRole } from \"../data/BbwzConstDefine\";\r\nimport BbwzData from \"../data/BbwzData\";\r\n\r\nexport default class BbwzChipsManager{\r\n    private poolHelper: ChipViewPool;\r\n    private allChipsArr: BbwzChipItem[] = [];\r\n    private showNode: cc.Node;\r\n    private betAreaNodeArr: cc.Node[] = [];     // 筹码显示区域的节点 依托size生成包围盒 可拓展成组合图形\r\n\r\n    constructor(private rootNode: cc.Node){\r\n        if (!rootNode)\r\n            TypeError(\"BbwzChipsManager.rootNode nil or undefined\");\r\n        let poolRoot = cc.find(\"poolNode\", rootNode);\r\n        if (!poolRoot)\r\n            TypeError(\"BbwzChipsManager.poolRoot nil\");\r\n        this.poolHelper = new ChipViewPool(poolRoot);\r\n        this.showNode = cc.find(\"showNode\", rootNode);\r\n        for (let i = 0; i < BbwzConstDefine.BET_AREA_NAME.length; i++){\r\n            let key = BbwzConstDefine.BET_AREA_NAME[i];\r\n            this.betAreaNodeArr.push(cc.find(`showArea_${key}`, rootNode));\r\n        }\r\n        for (let key in BbwzData.instance.playerChipsFlyPos){\r\n            this.allBetMap[key] = [];\r\n        }\r\n    }\r\n\r\n    public clear(){\r\n        this.showNode.stopAllActions();\r\n        this.poolHelper.recycleAll(this.allChipsArr);\r\n        this.allChipsArr = [];\r\n        for (let key in this.allBetMap){\r\n            this.allBetMap[key] = [];\r\n        }\r\n        this.waitForBackChipList = [];\r\n        this.bankChipList = [];\r\n    }\r\n\r\n    /**\r\n     * 更新显示(断线重连或第一次进游戏 重置已下注筹码)\r\n     */\r\n    public updateUI() {\r\n        for (const key in BbwzData.instance.gameTableBetInfo) {\r\n            let tableData = BbwzData.instance.gameTableBetInfo[key];\r\n            let betAreaIndex = BbwzConstDefine.BET_AREA_NAME.indexOf(key);\r\n            //恢复自己下注筹码\r\n            this.addChipWithNum(BbwzRole.Self, betAreaIndex, tableData.selfBetNum);\r\n            //恢复其他下注筹码\r\n            let createChipNum = tableData.totalBetNum - tableData.selfBetNum;\r\n            this.addChipWithNum(-1, betAreaIndex, createChipNum);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 下注区筹码添加(桌面恢复用)\r\n     * @param playerIndex \r\n     * @param betAreaIndex \r\n     * @param money \r\n     */\r\n    private addChipWithNum(playerIndex: number, betAreaIndex: number, money: number) {\r\n        while (money > 0) {\r\n            let item = this.poolHelper.getItem();\r\n            this.allChipsArr.push(item);\r\n            item.active = true;\r\n            item.node.setParent(this.showNode);\r\n            item.tryRight(money);\r\n            item.playerIndex = playerIndex;\r\n            money -= item.chipNumber;\r\n            this.addBetChipInArea(item, betAreaIndex);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 一个玩家下注筹码的动画\r\n     * @param playerIndex   下注玩家的Index\r\n     * @param betAreaIndex  下注的区域Index\r\n     * @param chipIndex     下注筹码的Index\r\n     * @param chipNum       下注筹码的数值\r\n     */\r\n    public flyChipAnim(playerIndex: number, betAreaIndex: number, chipNum: number) {\r\n        //获取筹码并设置筹码\r\n        let item = this.poolHelper.getItem();\r\n        this.allChipsArr.push(item);\r\n        item.active = true;\r\n        item.node.setParent(this.showNode);\r\n        item.setData(playerIndex, chipNum);\r\n        item.betAreaIndex = betAreaIndex;\r\n        item.randomRotate();\r\n\r\n        //飞筹码\r\n        let putAreaNode: cc.Node = this.betAreaNodeArr[betAreaIndex];\r\n        if (!putAreaNode)\r\n            return;\r\n        let temPos = this.getChipRandomWorldPos(putAreaNode, item.node);\r\n        let endPos = this.showNode.convertToNodeSpaceAR(temPos);\r\n        let firePos = this.showNode.convertToNodeSpaceAR(BbwzData.instance.playerChipsFlyPos[playerIndex]);\r\n        \r\n        if(playerIndex == BbwzRole.Self && BbwzData.instance.selectChipWolrdPos[chipNum]){\r\n            //自己的筹码从筹码按钮处飞出\r\n            firePos = this.showNode.convertToNodeSpaceAR(BbwzData.instance.selectChipWolrdPos[chipNum]);\r\n        }\r\n        item.betFlyAnim(firePos, endPos);\r\n    }\r\n\r\n    /**\r\n     * 添加一个筹码到下注区域\r\n     * @param item \r\n     * @param betAreaIndex \r\n     */\r\n    private addBetChipInArea(item: BbwzChipItem, betAreaIndex?: number) {\r\n        item.randomRotate();\r\n        if (this.betAreaNodeArr[betAreaIndex]) {\r\n            let putAreaNode = this.betAreaNodeArr[betAreaIndex];\r\n            let temPos = this.getChipRandomWorldPos(putAreaNode, item.node);\r\n            let endPos = this.showNode.convertToNodeSpaceAR(temPos);\r\n            item.node.setPosition(endPos);\r\n            item.betAreaIndex = betAreaIndex;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取下注区随机坐标\r\n     * @param areaNode \r\n     * @param chipNode \r\n     */\r\n    private getChipRandomWorldPos(areaNode: cc.Node, chipNode: cc.Node) {\r\n        let limit = Math.max(chipNode.width, chipNode.height);\r\n        let point = Global.Toolkit.getRectRandomInPoint(areaNode.position, areaNode.width - limit, areaNode.height - limit);\r\n        return areaNode.parent.convertToWorldSpaceAR(point);\r\n    }\r\n\r\n    /**\r\n     * 结算飞筹码\r\n     */\r\n    public rewardFlyChips() {\r\n        this.forBackChips();\r\n    }\r\n\r\n    /**\r\n     * 播放返还筹码动画\r\n     */\r\n    private forBackChips() {\r\n        this.showNode.stopAllActions();\r\n\r\n        let animTime = 0.4;\r\n        let delayTime = cc.delayTime(animTime);\r\n\r\n        let animTime2 = 0.4;\r\n        let delayTime2 = cc.delayTime(animTime2);\r\n\r\n        let delayTime3 = cc.delayTime(1.0);\r\n        Global.Audio.playBundleSound(BbwzConstDefine.GAME_ID,BbwzConstDefine.SOUND_CHIP_FLY, true);       // debug 全场都不下注时 也会播这个声音 暂不处理\r\n        //1.输掉的筹码返给荷官\r\n        let fun1 = cc.callFunc(()=>{\r\n            this.bankTogetherChips(animTime);\r\n        });\r\n        //2.荷官处飞筹码到赢的下注区域\r\n        let fun2 = cc.callFunc(()=>{\r\n            this.disperseChips(animTime2);\r\n        });\r\n        //3.所有筹码飞回给玩家(包括赢+和 的区域内的筹码)\r\n        let fun3 = cc.callFunc(()=>{\r\n            this.goBackPlayer();\r\n        });\r\n        let fun4 = cc.callFunc(()=>{\r\n            this.clear();\r\n        });\r\n        let seq = cc.sequence(fun1, delayTime, fun2, delayTime2, fun3, delayTime3, fun4);\r\n        this.showNode.runAction(seq);\r\n    }\r\n\r\n    /**\r\n     * 庄家手上的筹码集合\r\n     */\r\n    private bankChipList: BbwzChipItem[] = [];\r\n    /**\r\n     * 返还给玩家的筹码集合\r\n     */\r\n    private waitForBackChipList: BbwzChipItem[] = [];\r\n    //下注的来源\r\n    private allBetMap = {};\r\n\r\n    /**\r\n     * 聚合筹码到庄家\r\n     * @param animTime \r\n     */\r\n    private bankTogetherChips(animTime: number) {\r\n        let betAreaWinIndexs = BbwzData.instance.betAreaWinIndexs;\r\n\r\n        //清空庄家筹码引用\r\n        this.bankChipList = [];\r\n        //清空返还区筹码        \r\n        this.waitForBackChipList = [];\r\n\r\n        let bChip: boolean = false;\r\n\r\n        this.allChipsArr.forEach(chipCom => {\r\n            if (betAreaWinIndexs.indexOf(chipCom.betAreaIndex) >= 0) {\r\n                //赢或和 区域内的筹码 放到待返还区\r\n                this.waitForBackChipList.push(chipCom);\r\n            } else {\r\n                //输的筹码飞给庄家\r\n                chipCom.playItemMoveToBank(animTime, this.showNode.convertToNodeSpaceAR(BbwzData.instance.playerChipsFlyPos[BbwzRole.Dealer]));\r\n                //将输掉的筹码暂时放到庄家手上待庄家统一发放\r\n                this.bankChipList.push(chipCom);\r\n\r\n                bChip = true;\r\n            }\r\n        });\r\n        this.bankChipList.forEach(chipCom => {\r\n            chipCom.node.setSiblingIndex(-1);\r\n        });\r\n        if (bChip) {\r\n            //  Global.Audio.playBundleSound(BbwzConstDefine.GAME_ID,BbwzConstDefine.SOUND_CHIP_MOVE_1, true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 将庄家的筹码放到待返还区,并计算分配方式（核心）\r\n     * @param animTime \r\n     */\r\n    private disperseChips(animTime: number) {\r\n        let betAreaWinIndexs = BbwzData.instance.betAreaWinIndexs;\r\n        let winPlayerData = BbwzData.instance.playerWinData;\r\n        //将庄家缓存的筹码加入等待分配列表\r\n        this.waitForBackChipList = this.waitForBackChipList.concat(this.bankChipList);\r\n        //玩家剩余可拿筹码值\r\n        let playerLeftMoneys = {};\r\n        //计算数据并优先拿回自己的筹码已确保真实 \r\n        for (const key in winPlayerData) {\r\n            let playerIndex = parseInt(key);\r\n\r\n            let data = winPlayerData[key];\r\n            //计算玩家该拿回去的筹码值\r\n            let moneyNum: number = 0;\r\n            for (const key in data.bet_win) {\r\n                const betNum = data.bet_win[key];\r\n                moneyNum += betNum;\r\n            }\r\n            //根据玩家筹码值拿回自己下注过的筹码已确保真实\r\n            for (let index = 0; index < this.waitForBackChipList.length && moneyNum > 0; index++) {\r\n                const item = this.waitForBackChipList[index];\r\n                if (item == null) continue;\r\n                if (item.playerIndex == playerIndex) {\r\n                    moneyNum -= item.chipNumber;\r\n                    this.waitForBackChipList[index] = null;\r\n                    this.allBetMap[playerIndex].push(item);\r\n                }\r\n            }\r\n            //保存玩家剩余筹码值\r\n            playerLeftMoneys[playerIndex] = moneyNum;\r\n        }\r\n\r\n        //如果不够开始从待返回区拿\r\n        for (const key in winPlayerData) {\r\n            let playerIndex = parseInt(key);\r\n\r\n            let moneyNum: number = playerLeftMoneys[playerIndex] || 0;\r\n            //限定可那筹码个数（避免数量太多会卡）\r\n            let canGetCount = 20;\r\n            //从筹码堆里拿取筹码,并将筹码数值设置为合适值来减少筹码数量\r\n            while (moneyNum > 0 && canGetCount > 0 && this.waitForBackChipList.length > 0) {\r\n                let item = this.waitForBackChipList.pop();\r\n                if (item == null) continue;\r\n                if (moneyNum <= BbwzData.instance.chipList[BbwzData.instance.chipList.length - 1]) {\r\n                    item.tryRight(moneyNum);\r\n                } else {\r\n                    item.tryBigest(moneyNum);\r\n                }\r\n                item.playerIndex = playerIndex;\r\n                moneyNum -= item.chipNumber;\r\n\r\n                this.allBetMap[playerIndex].push(item);\r\n                --canGetCount;\r\n            }\r\n            //保存剩余\r\n            playerLeftMoneys[playerIndex] = moneyNum;\r\n        }\r\n\r\n        //如果还是不够开始从庄家里补充筹码\r\n        for (const key in winPlayerData) {\r\n            let playerIndex = parseInt(key);\r\n\r\n            let canGetCount = 20;\r\n            let moneyNum: number = playerLeftMoneys[playerIndex] || 0;\r\n\r\n            while (moneyNum > 0 && canGetCount > 0) {\r\n                let item = this.poolHelper.getItem();\r\n                this.allChipsArr.push(item);\r\n                item.active = true;\r\n                item.node.setParent(this.showNode);\r\n                item.tryBigest(moneyNum);\r\n                moneyNum -= item.chipNumber;\r\n                item.playerIndex = playerIndex;\r\n                this.allBetMap[playerIndex].push(item);\r\n                //加入庄家返还列表\r\n                this.bankChipList.push(item);\r\n                item.node.setPosition(this.showNode.convertToNodeSpaceAR(BbwzData.instance.playerChipsFlyPos[BbwzRole.Dealer]));\r\n\r\n                --canGetCount;\r\n            }\r\n        }\r\n        //筹码没用完的全部返回给在线玩家\r\n        while (this.waitForBackChipList.length > 0) {\r\n            let item = this.waitForBackChipList.pop();\r\n            if (item == null) continue;\r\n            item.playerIndex = 1;\r\n            this.allBetMap[1].push(item);\r\n        }\r\n        this.waitForBackChipList = [];\r\n\r\n        let curAreaIndex = 0;\r\n        let bChip: boolean = false;\r\n        //将庄家筹码平均的飞到各个返还区\r\n        for (let index = 0; index < this.bankChipList.length; index++) {\r\n            const item = this.bankChipList[index];\r\n            if (betAreaWinIndexs.length == 0) {\r\n                //没有赢得区域，庄家通杀\r\n                item.active = false;\r\n                continue;\r\n            }\r\n            item.node.setSiblingIndex(-1);\r\n            let areaIndex = betAreaWinIndexs[curAreaIndex];\r\n            curAreaIndex++;\r\n            if (curAreaIndex >= betAreaWinIndexs.length) {\r\n                curAreaIndex = 0;\r\n            }\r\n            let putAreaNode: cc.Node = this.betAreaNodeArr[areaIndex];\r\n            if (putAreaNode){\r\n                let temPos = this.getChipRandomWorldPos(putAreaNode, item.node);\r\n                let endPos = this.showNode.convertToNodeSpaceAR(temPos);\r\n                item.playItemMoveToArea(animTime, endPos);\r\n                bChip = true;\r\n            }\r\n        }\r\n        this.bankChipList = [];\r\n\r\n        if (bChip) {\r\n            //Global.Audio.playBundleSound(BbwzConstDefine.GAME_ID,BbwzConstDefine.SOUND_CHIP_MOVE_2, true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 筹码飞回玩家头像\r\n     */\r\n    private goBackPlayer() {\r\n        let bChip: boolean = false;\r\n        //将庄家筹码飞到该返还的玩家\r\n        for (let key in this.allBetMap){\r\n            const forBackList: BbwzChipItem[] = this.allBetMap[key];\r\n            let endPos = this.showNode.convertToNodeSpaceAR(BbwzData.instance.playerChipsFlyPos[key]);\r\n            for (let index = 0; index < forBackList.length; index++) {\r\n                const item = forBackList[index];\r\n                item.playOneChipAwardAnim(endPos, index, ()=>{\r\n                    item.active = false;\r\n                });\r\n                bChip = true;\r\n            }\r\n            forBackList.length = 0;\r\n        }\r\n    }\r\n}\r\n\r\nclass ChipViewPool extends BbwzBasePool<BbwzChipItem>{\r\n    protected get preCount(){\r\n        return 60;\r\n    }\r\n\r\n    protected get everyCount(){\r\n        return 30;\r\n    }\r\n\r\n    protected createItem(){\r\n        let prefab = Global.ResourceManager.getBundleRes(BbwzConstDefine.GAME_ID,BbwzPathHelper.gamePrefabsPath + \"panel/subView/coinView\", cc.Prefab);\r\n        let node: cc.Node = cc.instantiate(prefab);\r\n        node.active = true;\r\n        let item = new BbwzChipItem(node);\r\n        return item;\r\n    }\r\n\r\n    protected resetItem(item: BbwzChipItem){\r\n        item.reset();\r\n        item.node.setParent(this.root);\r\n        item.active = false;\r\n    }\r\n}"]}