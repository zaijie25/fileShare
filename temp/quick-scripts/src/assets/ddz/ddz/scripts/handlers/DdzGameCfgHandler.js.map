{"version":3,"sources":["assets\\ddz\\ddz\\scripts\\handlers\\DdzGameCfgHandler.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,mDAA8C;AAC9C,0CAAqC;AAErC;IAA+C,qCAAc;IAA7D;;IAoCA,CAAC;IAnCa,uCAAW,GAArB,UAAsB,QAAQ;QAC1B,IAAI,CAAC,OAAO,CAAC,aAAa,GAAG,QAAQ,CAAC,KAAK,CAAC;QAC5C,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,QAAQ,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;QACxE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,QAAQ,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QACxE,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC;QACxC,IAAI,CAAC,OAAO,CAAC,UAAU,GAAG,EAAE,CAAC;QAE7B,IAAI,IAAI,CAAC,MAAM,CAAC,cAAc,GAAG,QAAQ,CAAC,KAAK,CAAC,UAAU,EAAC;YACvD,MAAM,CAAC,KAAK,CAAC,kBAAkB,EAAE,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC;YAChG,OAAO;SACV;QACD,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,CAAC,EAAE,EAAC;YAC/C,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;SACtD;IACL,CAAC;IAGS,mCAAO,GAAjB,UAAkB,QAAQ;QACtB,IAAI,EAAE,GAAG,IAAI,CAAC;QACd,IAAG,IAAI,CAAC,OAAO,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAC;YACjD,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC;SAClC;QACD,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,QAAQ,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;QACvD,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAC5C,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAC5B,MAAM;QACN,mBAAS,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC;QAC/B,mBAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,WAAW,CAAC,mBAAmB,EAAE,CAAC;IAChE,CAAC;IAES,uCAAW,GAArB,UAAsB,QAAQ;QAC1B,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QACvB,iGAAiG;QACjG,iHAAiH;IACrH,CAAC;IACL,wBAAC;AAAD,CApCA,AAoCC,CApC8C,wBAAc,GAoC5D","file":"","sourceRoot":"/","sourcesContent":["import DdzBaseHandler from \"./DdzBaseHandler\";\r\nimport DdzDriver from \"../DdzDriver\";\r\n\r\nexport default class DdzGameCfgHandler extends DdzBaseHandler{\r\n    protected refreshData(msgParam){\r\n        this.context.serverGameCfg = msgParam._para;\r\n        this.context.set(this.Define.FieldBasePoint, msgParam._para.base_point);\r\n        this.context.set(this.Define.FieldEnterLimit, msgParam._para.point_low);\r\n        this.context.mode = msgParam._para.mode;\r\n        this.context.playerList = [];\r\n\r\n        if (this.Define.MaxPlayerCount < msgParam._para.seat_count){\r\n            Logger.error('客户端不支持服务器配置的最大人数', this.Define.MaxPlayerCount, String(msgParam._para.seat_count));\r\n            return;\r\n        }\r\n        for(let i = 0; i < this.Define.MaxPlayerCount; i++){\r\n            this.context.playerList.push(new PVPPlayerData(i));\r\n        }\r\n    }\r\n\r\n\r\n    protected execute(msgParam){\r\n        let lv = \"l0\";\r\n        if(this.context.session && this.context.session._glv){\r\n            lv = this.context.session._glv;\r\n        }\r\n        this.mainUI.updateLevelBase(msgParam._para.base_point);\r\n        this.mainUI.updateMode(msgParam._para.mode);\r\n        this.mainUI.updateLevel(lv);\r\n        //进入游戏\r\n        DdzDriver.instance.enterGame();\r\n        DdzDriver.instance.mainUI.taskManager.reqGetCommisionInfo();\r\n    }\r\n\r\n    protected executeSync(msgParam){\r\n        this.execute(msgParam);\r\n        // let levelInfoView = this.mainUI.viewSet.getViewEx<ZJHLevelInfoView>(this.Define.CompLevelInfo)\r\n        // levelInfoView.setLevelInfo(msgParam._para.base_point, msgParam._para.bet_limit, msgParam._para.max_round, \"\");\r\n    }\r\n}"]}