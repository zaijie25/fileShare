{"version":3,"sources":["assets\\ddz\\ddz\\scripts\\data\\DdzContext.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import DdzGameEvent from \"./DdzGameEvent\";\r\nimport { DdzMode } from \"./DdzRuleConst\";\r\n\r\nexport default class DdzContext\r\n{\r\n    //session数据\r\n    public session:any;\r\n    //服务器游戏配置\r\n    public serverGameCfg:any\r\n    //自己的座位号\r\n    public selfSrc;\r\n\r\n    //是否处于重连阶段\r\n    public syncMode = false;\r\n\r\n    //玩家数据列表\r\n    public playerList:PVPPlayerData[] = [];\r\n\r\n\r\n    private dataMap = {};\r\n\r\n    private selectPokerList = [];\r\n    private selectPokerMap = {};\r\n\r\n    // 记牌器数据, 记录出过的牌\r\n    private pokerMarkerData = [];\r\n    // 自己手牌\r\n    private pokerSelfHand = [];\r\n\r\n    private _isWaitMatch = false;\r\n    \r\n    private _mode: DdzMode = DdzMode.Normal;\r\n\r\n    public set mode(value: number){\r\n        this._mode = value == 1 ? DdzMode.Quick : DdzMode.Normal;\r\n    }\r\n\r\n    public get mode(){\r\n        return this._mode;\r\n    }\r\n\r\n\r\n    public set(key: string, value: any) {\r\n        this.dataMap[key] = value;\r\n    }\r\n\r\n    public get(key: string) {\r\n        return this.dataMap[key];\r\n    }\r\n\r\n    public remove(key: string) {\r\n        this.dataMap[key] = null;\r\n    }\r\n\r\n    public getValue<T>(key): T {\r\n        let data = this.dataMap[key];\r\n        if (data == null)\r\n            return null;\r\n        return data as T;\r\n    }\r\n\r\n    public addSelectPoker(pokerValue: number, order: number){\r\n        this.selectPokerList.push(pokerValue);\r\n        this.selectPokerMap[order] = pokerValue;\r\n        Game.Event.event(DdzGameEvent.EnableSelect, this.selectPokerList.length);\r\n    }\r\n\r\n    public removeSelectPoker(pokerValue: number, order: number){\r\n        let index = this.selectPokerList.indexOf(pokerValue);\r\n        if (index > -1){\r\n            this.selectPokerList.splice(index, 1);\r\n            this.selectPokerMap[order] = null;\r\n        }\r\n        Game.Event.event(DdzGameEvent.EnableSelect, this.selectPokerList.length);\r\n    }\r\n\r\n    public getSelectPokers(){\r\n        // let result = this.selectPokerList.filter((item, index, arr)=> arr.indexOf(item) === index); //去重\r\n        return this.selectPokerList;\r\n    }\r\n\r\n    public getSelectPokersMap(){\r\n        return this.selectPokerMap;\r\n    }\r\n\r\n    public clearSelectPokerCache(){\r\n        this.selectPokerList = [];\r\n        this.selectPokerMap = {};\r\n        Game.Event.event(DdzGameEvent.EnableSelect, this.selectPokerList.length);\r\n    }\r\n\r\n    public updateMarkerData(arr: number[]){\r\n        this.pokerMarkerData = this.pokerMarkerData.concat(arr);\r\n        Game.Event.event(DdzGameEvent.UpdateMarker, this.pokerMarkerData.length);\r\n    }\r\n\r\n    public getMarkerData(){\r\n        return this.pokerMarkerData;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param arr \r\n     * @param isFirst 添加标志区别发牌和地主牌  debug 避免不叫地主重发牌 牌数组一直拼接的问题\r\n     */\r\n    public addSelfHandPokers(arr: number[], isFirst = false){\r\n        if (isFirst)\r\n        {\r\n            this.pokerSelfHand = [];\r\n        }\r\n        this.pokerSelfHand = this.pokerSelfHand.concat(arr);\r\n    }\r\n\r\n    public removeSelfHandPokers(arr: number[]){\r\n        arr.forEach(num => {\r\n            let index = this.pokerSelfHand.indexOf(num);\r\n            if (index > -1)\r\n                this.pokerSelfHand.splice(index, 1);\r\n        });\r\n    }\r\n\r\n    public refreshHandPokers(pokerArr:number[])\r\n    {\r\n        this.pokerSelfHand = pokerArr\r\n    }\r\n\r\n    public getSelfHandPokers(){\r\n        return this.pokerSelfHand;\r\n    }\r\n\r\n    // 是否匹配中状态\r\n    public set isWaitMatch(flag: boolean){\r\n        this._isWaitMatch = flag;\r\n    }\r\n\r\n    public get isWaitMatch(){\r\n        return this._isWaitMatch;\r\n    }\r\n\r\n    //单局结束 数据清理   \r\n    //游戏结束 整个Context会被清空\r\n    public clearByRound(){\r\n        this.dataMap = {};\r\n        this.pokerMarkerData = [];\r\n        this.pokerSelfHand = [];\r\n        this.syncMode = false;\r\n        this.clearSelectPokerCache();\r\n    }\r\n\r\n    public clearByGame(){\r\n        this.playerList = [];\r\n        this.dataMap = {};\r\n        this.pokerMarkerData = [];\r\n        this.pokerSelfHand = [];\r\n        this.session = null;\r\n        this.serverGameCfg = null;\r\n        this.syncMode = false;\r\n        this.clearSelectPokerCache();\r\n        this._isWaitMatch = false;\r\n    }\r\n}"]}