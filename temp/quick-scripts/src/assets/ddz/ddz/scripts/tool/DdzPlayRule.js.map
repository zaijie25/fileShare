{"version":3,"sources":["assets\\ddz\\ddz\\scripts\\tool\\DdzPlayRule.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import DdzPokerCheck from \"./DdzPokerCheck\";\r\nimport DdzTypeCheck from \"./DdzTypeCheck\";\r\nimport DdzPokerTypeData from \"./DdzPokerTypeData\";\r\nimport DdzRecommendPlay from \"./DdzRecommendPlay\";\r\nimport { DdzMode } from \"../data/DdzRuleConst\";\r\nimport DdzDriver from \"../DdzDriver\";\r\n\r\nexport enum DdzPlayTypeDefine{\r\n    DDZ_NONE       = 0,     // 无效牌型\r\n    DDZ_SINGLE     = 1,     // 单牌\r\n\tDDZ_PAIR       = 2,     // 对子\r\n\tDDZ_THREE_ZERO = 3,     // 三条\r\n\tDDZ_THREE_ONE  = 4,     // 三带一\r\n\tDDZ_THREE_TWO  = 5,     // 三带二\r\n\tDDZ_STRAIGHT   = 6,     // 顺子:3,4,5,6,7...A,至少5张\r\n\tDDZ_LINK_PAIR  = 7,     // 连对<至少6张:33,44,55...AA>\r\n\tDDZ_PLANE_ZERO = 8,     // 飞机<至少6张:333,444...AAA>\r\n\tDDZ_PLANE_ONE  = 9,     // 飞机带单翅膀<至少8张:有几个三连就有几个单>\r\n\tDDZ_PLANE_TWO  = 10,    // 飞机带双翅膀<至少10张:有几个三连就有几对>\r\n\tDDZ_FOUR_ONE   = 11,    // 四带两单\r\n\tDDZ_FOUR_TWO   = 12,    // 四带两对\r\n\tDDZ_BOMB       = 13,    // 炸弹\r\n\tDDZ_ROCKET     = 14,    // 火箭\r\n}\r\n\r\nexport default class DdzPlayRule{\r\n    public typeCheckHelper: DdzTypeCheck;\r\n    public reHelper: DdzRecommendPlay;\r\n    private gen: IterableIterator<any>;\r\n\r\n    constructor(){\r\n        this.typeCheckHelper = new DdzTypeCheck();\r\n    }\r\n    /**\r\n     * \r\n     * @param arr \r\n     */\r\n    public getPokersType(arr: number[]): DdzPokerTypeData{\r\n        let tmpArr = this.sortPokerArr(arr);\r\n        let para = this.createTypeData(DdzPlayTypeDefine.DDZ_NONE, 0, 0);;\r\n        let [map, maxCount, maxNumArr] = this.typeCheckHelper.computeValueTimes(arr);\r\n        switch(tmpArr.length){\r\n            case 1:\r\n                para = this.checkOnePokers(arr);\r\n                break;\r\n            case 2:\r\n                para = this.checkTwoPokers(arr);\r\n                break;\r\n            case 3:\r\n                if (maxCount == 3)\r\n                    para = this.checkThreeZero(arr, maxCount, maxNumArr);\r\n                else if(maxCount == 1)\r\n                    para = this.checkStraight(arr, maxCount, maxNumArr, map);\r\n                break;\r\n            case 4:\r\n                if (maxCount == 4)\r\n                    para = this.checkBomb(arr, maxCount);\r\n                else if (maxCount == 3)\r\n                    para = this.checkThreeOne(arr, maxCount, maxNumArr);\r\n                else if (maxCount == 2)\r\n                    para = this.checkLinkPairs(arr, maxCount, maxNumArr, map);\r\n                else if (maxCount == 1)\r\n                    para = this.checkStraight(arr, maxCount, maxNumArr, map);\r\n                break;\r\n            case 5: \r\n                if (maxCount == 3)\r\n                    para = this.checkThreeTwo(arr, maxCount, maxNumArr, map);\r\n                else if (maxCount == 1)\r\n                    para = this.checkStraight(arr, maxCount, maxNumArr, map);\r\n                break;\r\n            default:\r\n                if (maxCount == 1)\r\n                    para = this.checkStraight(arr, maxCount, maxNumArr, map);\r\n                else if (maxCount == 2)\r\n                    para = this.checkLinkPairs(arr, maxCount, maxNumArr, map);\r\n                else if (maxCount == 3){\r\n                    para = this.checkPlaneZero(arr, maxCount, maxNumArr, map);\r\n                    if (para.isDataValid()){\r\n                        break;\r\n                    }\r\n                    para = this.checkPlaneOne(arr, maxCount, maxNumArr, map);\r\n                    if (para.isDataValid()){\r\n                        break;\r\n                    }\r\n                    para = this.checkPlaneTwo(arr, maxCount, maxNumArr, map);\r\n                    if (para.isDataValid()){\r\n                        break;\r\n                    }\r\n                }\r\n                else if (maxCount == 4){\r\n                    if (arr.length == 6){\r\n                        para = this.checkBombWithTwo(arr, maxCount, maxNumArr);\r\n                        if (para.isDataValid()){\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (arr.length == 8){\r\n                        para = this.checkBombWithPairs(arr, maxCount, maxNumArr, map);\r\n                        if (para.isDataValid()){\r\n                            break;\r\n                        }\r\n                    }\r\n                    para = this.checkPlaneZero(arr, maxCount, maxNumArr, map);\r\n                    if (para.isDataValid()){\r\n                        break;\r\n                    }\r\n                    para = this.checkPlaneOne(arr, maxCount, maxNumArr, map);\r\n                    if (para.isDataValid()){\r\n                        break;\r\n                    }\r\n                    para = this.checkPlaneTwo(arr, maxCount, maxNumArr, map);\r\n                    if (para.isDataValid()){\r\n                        break;\r\n                    }\r\n                }\r\n        }\r\n        return para;\r\n    }\r\n\r\n    public checkOnePokers(arr: number[]){\r\n        if (!!this.typeCheckHelper.checkSingle(arr)){\r\n            let weight = this.typeCheckHelper.checkSingle(arr);\r\n            return this.createTypeData(DdzPlayTypeDefine.DDZ_SINGLE, 1, weight);\r\n        }\r\n        else{\r\n            return this.createTypeData(DdzPlayTypeDefine.DDZ_NONE, 0, 0);\r\n        }\r\n    }\r\n\r\n    public checkTwoPokers(arr: number[]){\r\n        if (!!this.typeCheckHelper.checkRocket(arr))\r\n            return this.createTypeData(DdzPlayTypeDefine.DDZ_ROCKET, 2, 99);\r\n        else if(!!this.typeCheckHelper.checkPair(arr)){\r\n            let weight = this.typeCheckHelper.checkPair(arr);\r\n            return this.createTypeData(DdzPlayTypeDefine.DDZ_PAIR, 2, weight);\r\n        }\r\n        else{\r\n            return this.createTypeData(DdzPlayTypeDefine.DDZ_NONE, 0, 0);\r\n        }\r\n    }\r\n\r\n    public checkOneShowCount(arr: number[], maxCount: number, maxNumArr: number[], map: {}){\r\n        if (maxCount == 1 && this.typeCheckHelper.checkContinuity(map, 1) && maxNumArr.length >= 3){\r\n            return this.checkStraight(arr, maxCount, maxNumArr, map);\r\n        }\r\n        else\r\n            return this.createTypeData(DdzPlayTypeDefine.DDZ_NONE, 0, 0); \r\n    }\r\n\r\n    public checkThreeZero(arr: number[], maxCount: number, maxNumArr: number[]){ \r\n        let weight = this.typeCheckHelper.checkThreeZero(arr, maxCount, maxNumArr);\r\n        if (!!weight){\r\n            return this.createTypeData(DdzPlayTypeDefine.DDZ_THREE_ZERO, 1, weight);\r\n        }\r\n        else{\r\n            return this.createTypeData(DdzPlayTypeDefine.DDZ_NONE, 0, 0);\r\n        }\r\n    }\r\n\r\n    public checkThreeOne(arr: number[], maxCount: number, maxNumArr: number[]){ \r\n        let weight = this.typeCheckHelper.checkThreeOne(arr, maxCount, maxNumArr);\r\n        if (!!weight){\r\n            return this.createTypeData(DdzPlayTypeDefine.DDZ_THREE_ONE, 1, weight);\r\n        }\r\n        else{\r\n            return this.createTypeData(DdzPlayTypeDefine.DDZ_NONE, 0, 0);\r\n        }\r\n    }\r\n\r\n    public checkThreeTwo(arr: number[], maxCount: number, maxNumArr: number[], map: {}){ \r\n        let weight = this.typeCheckHelper.checkThreeTwo(arr, maxCount, maxNumArr, map);\r\n        if (!!weight){\r\n            return this.createTypeData(DdzPlayTypeDefine.DDZ_THREE_TWO, 1, weight);\r\n        }\r\n        else{\r\n            return this.createTypeData(DdzPlayTypeDefine.DDZ_NONE, 0, 0);\r\n        }\r\n    }\r\n\r\n    public checkPlaneZero(arr: number[], maxCount: number, maxNumArr: number[], map: {}){\r\n        let weight = this.typeCheckHelper.checkPlaneZero(arr, maxCount, maxNumArr, map);\r\n        if (!!weight){\r\n            return this.createTypeData(DdzPlayTypeDefine.DDZ_PLANE_ZERO, arr.length / 3, weight);\r\n        }\r\n        else{\r\n            return this.createTypeData(DdzPlayTypeDefine.DDZ_NONE, 0, 0);\r\n        }\r\n    }\r\n\r\n    public checkPlaneOne(arr: number[], maxCount: number, maxNumArr: number[], map: {}){\r\n        let weight = this.typeCheckHelper.checkPlaneOne(arr, maxCount, maxNumArr, map);\r\n        if (!!weight){\r\n            return this.createTypeData(DdzPlayTypeDefine.DDZ_PLANE_ONE, arr.length / 4, weight);\r\n        }\r\n        else{\r\n            return this.createTypeData(DdzPlayTypeDefine.DDZ_NONE, 0, 0);\r\n        }\r\n    }\r\n\r\n    public checkPlaneTwo(arr: number[], maxCount: number, maxNumArr: number[], map: {}){\r\n        let weight = this.typeCheckHelper.checkPlaneTwo(arr, maxCount, maxNumArr, map);\r\n        if (!!weight){\r\n            return this.createTypeData(DdzPlayTypeDefine.DDZ_PLANE_TWO, arr.length / 5, weight);\r\n        }\r\n        else{\r\n            return this.createTypeData(DdzPlayTypeDefine.DDZ_NONE, 0, 0);\r\n        }\r\n    }\r\n\r\n    public checkBomb(arr: number[], maxCount: number){\r\n        let weight = this.typeCheckHelper.checkBomb(arr, maxCount);\r\n        if (!!weight){\r\n            return this.createTypeData(DdzPlayTypeDefine.DDZ_BOMB, 4, weight);\r\n        }\r\n        else{\r\n            return this.createTypeData(DdzPlayTypeDefine.DDZ_NONE, 0, 0);\r\n        }\r\n    }\r\n\r\n    public checkBombWithTwo(arr: number[], maxCount: number, maxNumArr: number[]){\r\n        let weight = this.typeCheckHelper.checkBombWithSingles(arr, maxCount, maxNumArr);\r\n        if (!!weight){\r\n            return this.createTypeData(DdzPlayTypeDefine.DDZ_FOUR_ONE, 6, weight);\r\n        }\r\n        else{\r\n            return this.createTypeData(DdzPlayTypeDefine.DDZ_NONE, 0, 0);\r\n        }\r\n    }\r\n\r\n    public checkBombWithPairs(arr: number[], maxCount: number, maxNumArr: number[], map: {}){\r\n        let weight = this.typeCheckHelper.checkBombWithPairs(arr, maxCount, maxNumArr, map);\r\n        if (!!weight){\r\n            return this.createTypeData(DdzPlayTypeDefine.DDZ_FOUR_TWO, 8, weight);\r\n        }\r\n        else{\r\n            return this.createTypeData(DdzPlayTypeDefine.DDZ_NONE, 0, 0);\r\n        }\r\n    }\r\n\r\n    public checkLinkPairs(arr: number[], maxCount: number, maxNumArr: number[], map: {}){\r\n        let weight = 0;\r\n        if (DdzDriver.instance.Context.mode == DdzMode.Quick)\r\n            weight = this.typeCheckHelper.checkQuickLinkPairs(arr, maxCount, maxNumArr, map);\r\n        else\r\n            weight = this.typeCheckHelper.checkLinkPairs(arr, maxCount, maxNumArr, map);\r\n        if (!!weight){\r\n            return this.createTypeData(DdzPlayTypeDefine.DDZ_LINK_PAIR, maxNumArr.length, weight);\r\n        }\r\n        else{\r\n            return this.createTypeData(DdzPlayTypeDefine.DDZ_NONE, 0, 0);\r\n        }\r\n    }\r\n\r\n    public checkStraight(arr: number[], maxCount: number, maxNumArr: number[], map: {}){\r\n        let weight = 0;\r\n        if (DdzDriver.instance.Context.mode == DdzMode.Quick)\r\n            weight = this.typeCheckHelper.checkQuickStraight(arr, maxCount, maxNumArr, map);\r\n        else\r\n            weight = this.typeCheckHelper.checkStraight(arr, maxCount, maxNumArr, map);\r\n        if (!!weight){\r\n            return this.createTypeData(DdzPlayTypeDefine.DDZ_STRAIGHT, maxNumArr.length, weight);\r\n        }\r\n        else{\r\n            return this.createTypeData(DdzPlayTypeDefine.DDZ_NONE, 0, 0);\r\n        }\r\n    }\r\n\r\n    public createTypeData(type: number, count: number, weight: number){\r\n        return new DdzPokerTypeData(type, count, weight);\r\n    }\r\n\r\n    public sortPokerArr(arr: number[]){\r\n        let tmp = [...arr];\r\n        tmp.sort((a, b)=>{\r\n            let [aw, ac] = DdzPokerCheck.getPokerWeight(a);\r\n            let [bw, bc] = DdzPokerCheck.getPokerWeight(b);\r\n            if (aw == bw)\r\n                return bc - ac;\r\n            else\r\n                return bw - aw;\r\n        })\r\n        return tmp;\r\n    }\r\n\r\n    public checkPlayOnRule(onData: DdzPokerTypeData, wantData: DdzPokerTypeData){\r\n        let isCan = false;\r\n        if (onData && !Global.Toolkit.isEmptyObject(onData) && onData.isDataValid()){\r\n            if(onData.type == DdzPlayTypeDefine.DDZ_ROCKET){\r\n                isCan = false;\r\n            }\r\n            else if(onData.type == DdzPlayTypeDefine.DDZ_BOMB){\r\n                if (wantData.type == DdzPlayTypeDefine.DDZ_ROCKET)\r\n                    isCan = true;\r\n                else if(wantData.type == DdzPlayTypeDefine.DDZ_BOMB && wantData.weight > onData.weight)\r\n                    isCan = true;\r\n                else\r\n                    isCan = false;\r\n            }\r\n            else{\r\n                if (wantData.type == DdzPlayTypeDefine.DDZ_ROCKET || wantData.type == DdzPlayTypeDefine.DDZ_BOMB)\r\n                    isCan = true;\r\n                else if(wantData.type == onData.type && wantData.count == onData.count && wantData.weight > onData.weight)\r\n                    isCan = true;\r\n                else\r\n                    isCan = false;\r\n            }\r\n        }\r\n        else{\r\n            if(!wantData.isDataValid())\r\n                isCan = false;\r\n            else\r\n                isCan = true;\r\n        }\r\n        return isCan;\r\n    }\r\n\r\n    public initRecommendHelper(arr: number[] = [], map: DdzPokerTypeData){\r\n        // arr = [4,5,6,7,8,41, 37, 20,21,22,23,24, 52,53,54,55,56];\r\n        // map = this.getPokersType([3,4,5,19,20,21,35,36,6,22]);\r\n        // console.warn('initRecommendHelper', JSON.stringify(arr), JSON.stringify(map));\r\n        this.reHelper = new DdzRecommendPlay(map, this.sortPokerArr(arr));\r\n        this.gen = this.reHelper.getRecommendPlayGen();\r\n    }\r\n\r\n    public resetRecommendGen(){\r\n        if (this.reHelper)\r\n            this.gen = this.reHelper.getRecommendPlayGen();\r\n    }\r\n\r\n    public clearRecommend(){\r\n        this.reHelper = null;\r\n        this.gen = null;\r\n    }\r\n\r\n    public getOneRecommend(){\r\n        if (this.gen){\r\n            let data = this.gen.next();\r\n            if (!data.done)\r\n                return data.value;\r\n            else\r\n                return !1;\r\n        }\r\n    }\r\n\r\n    public checkBigger(){\r\n        if(this.gen){\r\n            let data = this.gen.next();\r\n            if (data.value != -1){\r\n                this.resetRecommendGen();\r\n                return !0;\r\n            }\r\n            else{\r\n                return !1;\r\n            }\r\n        }\r\n    }\r\n\r\n    public searchStraight(arr){\r\n        let limitCount = DdzDriver.instance.Context.mode == DdzMode.Quick ? 3 : 5;\r\n        if (arr.length < limitCount)\r\n            return;\r\n        let typeData = this.getPokersType(arr);\r\n        if (typeData.isDataValid() && (typeData.type == DdzPlayTypeDefine.DDZ_LINK_PAIR || typeData.type == DdzPlayTypeDefine.DDZ_PLANE_ZERO \r\n            || typeData.type == DdzPlayTypeDefine.DDZ_PLANE_ONE || typeData.type == DdzPlayTypeDefine.DDZ_PLANE_TWO))\r\n              return;\r\n        let [numMap] = this.typeCheckHelper.computeValueTimes(arr);\r\n        let orderNumArr = this.typeCheckHelper.getOrderBiggerNumArr(numMap, 1);\r\n        let maxLen = orderNumArr.length;\r\n        if (maxLen < limitCount)\r\n            return;\r\n        for (let i = maxLen; i >= limitCount; i--){\r\n            for(let j = orderNumArr.length-1; j >=0; j--){\r\n                if (j < limitCount - 1)\r\n                    break;\r\n                let endValue = Number(orderNumArr[j]);\r\n                let startValue = Number(orderNumArr[j - i + 1]);\r\n                if (startValue != 2 && endValue - startValue == i -1){  // 找到了 i为长度, startValue 为起点牌面 然后去找牌\r\n                    let tmp = {};\r\n                    for(let m = 0; m < i; m++){\r\n                        for(let n =0; n< arr.length; n++){\r\n                            let rawValue = arr[n];\r\n                            let [pokerValue] = DdzPokerCheck.getPokerValue(rawValue);\r\n                            if (pokerValue == startValue + m){     \r\n                                tmp[n] = rawValue;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    return tmp;\r\n                }\r\n            }\r\n        }\r\n        return;\r\n    }\r\n}"]}