{"version":3,"sources":["assets\\ermj\\Ermj\\scripts\\component\\ErmjTimeAutoRun.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAM,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAG1C;IAA6C,mCAAY;IADzD,cAAc;IACd;QAAA,qEAqDC;QAnDW,eAAS,GAAG,CAAC,CAAC;;IAmD1B,CAAC;IAhDa,gCAAM,GAAhB;QACI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;IAC/C,CAAC;IAES,kCAAQ,GAAlB;IACA,CAAC;IAEM,kCAAQ,GAAf,UAAgB,IAAY,EAAE,QAAkB,EAAE,MAAW;QACzD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;IACrC,CAAC;IAEO,uCAAa,GAArB;QACI,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,MAAM,EAAC;YAC9B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACpC;aACG;YACA,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;SAC5B;IACL,CAAC;IAEO,mCAAS,GAAjB;QACI,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAU,yBAAyB;YACzD,OAAO;QACX,IAAI,CAAC,SAAS,EAAG,CAAC;QAClB,IAAI,IAAI,CAAC,SAAS,IAAI,CAAC,EAAC;YACpB,IAAI,CAAC,aAAa,EAAE,CAAC;SACxB;QACD,IAAI,CAAC,UAAU,EAAE,CAAC;IACtB,CAAC;IAES,mCAAS,GAAnB;QACI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACpC,CAAC;IAES,mCAAS,GAAnB;QACI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACpC,CAAC;IAEO,oCAAU,GAAlB;QACI,IAAI,IAAI,CAAC,SAAS,GAAG,EAAE;YACnB,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,MAAI,IAAI,CAAC,SAAW,CAAC;;YAE3C,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,KAAG,IAAI,CAAC,SAAW,CAAC;IAClD,CAAC;IApDgB,eAAe;QAFnC,OAAO;QACR,cAAc;OACO,eAAe,CAqDnC;IAAD,sBAAC;CArDD,AAqDC,CArD4C,EAAE,CAAC,SAAS,GAqDxD;kBArDoB,eAAe","file":"","sourceRoot":"/","sourcesContent":["const {ccclass, property} = cc._decorator;\r\n@ccclass\r\n//倒计时组件  提供倒计时\r\nexport default class ErmjTimeAutoRun extends cc.Component{\r\n    private timeLbl: cc.Label;\r\n    private totalTime = 5;\r\n    private finishCal: Function;\r\n    private target: any;\r\n    protected onLoad(){\r\n        this.timeLbl = this.getComponent(cc.Label);\r\n    }\r\n\r\n    protected onEnable(){\r\n    }\r\n\r\n    public setTimer(time: number, callback: Function, target: any){\r\n        this.totalTime = time;\r\n        this.finishCal = callback;\r\n        this.target = target;\r\n        this.setTimeLbl();\r\n        this.schedule(this.onTimeRun, 1);\r\n    }\r\n\r\n    private onTimerFinish(){\r\n        if (this.finishCal && this.target){\r\n            this.finishCal.call(this.target);\r\n        }\r\n        else{\r\n            this.node.active = false;\r\n        }\r\n    }\r\n\r\n    private onTimeRun(){\r\n        if (!cc.isValid(this.node))         // debug退出时 实际还未销毁, 可能还在跑\r\n            return;\r\n        this.totalTime --;\r\n        if (this.totalTime == 0){\r\n            this.onTimerFinish();\r\n        }\r\n        this.setTimeLbl();\r\n    }\r\n\r\n    protected onDisable(){\r\n        this.unschedule(this.onTimeRun);\r\n    }\r\n\r\n    protected onDestroy(){\r\n        this.unschedule(this.onTimeRun);\r\n    }\r\n\r\n    private setTimeLbl(){\r\n        if (this.totalTime < 10)\r\n            this.timeLbl.string = `0${this.totalTime}`;\r\n        else\r\n            this.timeLbl.string = `${this.totalTime}`;\r\n    }\r\n}"]}