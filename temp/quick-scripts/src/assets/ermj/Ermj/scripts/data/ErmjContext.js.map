{"version":3,"sources":["assets\\ermj\\Ermj\\scripts\\data\\ErmjContext.ts"],"names":[],"mappings":";;;;;;AAAA;IAAA;QAQI,UAAU;QACH,aAAQ,GAAG,KAAK,CAAC;QAExB,QAAQ;QACD,eAAU,GAAoB,EAAE,CAAC;QAEhC,YAAO,GAAG,EAAE,CAAC;QAEd,kBAAa,GAAG,CAAC,CAAC,CAAQ,6BAA6B;QACtD,iBAAY,GAAG,KAAK,CAAC;QAEtB,aAAQ,GAAG,KAAK,CAAC;IAsD5B,CAAC;IApDU,yBAAG,GAAV,UAAW,GAAW,EAAE,KAAU;QAC9B,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;IAC9B,CAAC;IAEM,yBAAG,GAAV,UAAW,GAAW;QAClB,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IAC7B,CAAC;IAEM,4BAAM,GAAb,UAAc,GAAW;QACrB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;IAC7B,CAAC;IAEM,8BAAQ,GAAf,UAAmB,GAAG;QAClB,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAC7B,IAAI,IAAI,IAAI,IAAI;YACZ,OAAO,IAAI,CAAC;QAChB,OAAO,IAAS,CAAC;IACrB,CAAC;IAGD,sBAAW,oCAAW;aAItB;YACI,OAAO,IAAI,CAAC,YAAY,CAAC;QAC7B,CAAC;QAPD,UAAU;aACV,UAAuB,IAAa;YAChC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QAC7B,CAAC;;;OAAA;IAOD,sBAAW,kCAAS;aAIpB;YACI,OAAO,IAAI,CAAC,QAAQ,CAAC;QACzB,CAAC;QAPD,SAAS;aACT,UAAqB,IAAa;YAC9B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACzB,CAAC;;;OAAA;IAMD,cAAc;IACd,oBAAoB;IACb,kCAAY,GAAnB;QACI,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IAC1B,CAAC;IAEM,iCAAW,GAAlB;QACI,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;IAC9B,CAAC;IACL,kBAAC;AAAD,CAzEA,AAyEC,IAAA","file":"","sourceRoot":"/","sourcesContent":["export default class ErmjContext {\r\n    //session数据\r\n    public session: any;\r\n    //服务器游戏配置\r\n    public serverGameCfg: any\r\n    //自己的座位号\r\n    public selfSrc;\r\n\r\n    //是否处于重连阶段\r\n    public syncMode = false;\r\n\r\n    //玩家数据列表\r\n    public playerList: PVPPlayerData[] = [];\r\n\r\n    private dataMap = {};\r\n\r\n    public selfLocalSeat = 0;        // 自己固定本地座位0, 头像、手牌、牌墙都设定本机为0\r\n    private _isWaitMatch = false;\r\n\r\n    public _cmdAuto = false;\r\n\r\n    public set(key: string, value: any) {\r\n        this.dataMap[key] = value;\r\n    }\r\n\r\n    public get(key: string) {\r\n        return this.dataMap[key];\r\n    }\r\n\r\n    public remove(key: string) {\r\n        this.dataMap[key] = null;\r\n    }\r\n\r\n    public getValue<T>(key): T {\r\n        let data = this.dataMap[key];\r\n        if (data == null)\r\n            return null;\r\n        return data as T;\r\n    }\r\n\r\n    // 是否匹配中状态\r\n    public set isWaitMatch(flag: boolean) {\r\n        this._isWaitMatch = flag;\r\n    }\r\n\r\n    public get isWaitMatch() {\r\n        return this._isWaitMatch;\r\n    }\r\n\r\n    // 是否挂机状态\r\n    public set isCmdAuto(flag: boolean) {\r\n        this._cmdAuto = flag;\r\n    }\r\n\r\n    public get isCmdAuto() {\r\n        return this._cmdAuto;\r\n    }\r\n\r\n    //单局结束 数据清理   \r\n    //游戏结束 整个Context会被清空\r\n    public clearByRound() {\r\n        this.dataMap = {};\r\n        this.syncMode = false;\r\n    }\r\n\r\n    public clearByGame() {\r\n        this.playerList = [];\r\n        this.dataMap = {};\r\n        this.session = null;\r\n        this.serverGameCfg = null;\r\n        this.syncMode = false;\r\n        this._isWaitMatch = false;\r\n    }\r\n}"]}